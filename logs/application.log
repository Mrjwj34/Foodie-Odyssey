2025-03-25 12:51:21 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 25020 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-25 12:51:21 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-25 12:51:21 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-25 12:51:22 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-25 12:51:22 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-25 12:51:22 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-25 12:51:22 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-25 12:51:22 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-25 12:51:22 - INFO - Starting service [Tomcat]
2025-03-25 12:51:22 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-25 12:51:22 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-25 12:51:22 - INFO - Root WebApplicationContext: initialization completed in 1187 ms
2025-03-25 12:51:23 - INFO - HikariPool-1 - Starting...
2025-03-25 12:51:23 - INFO - HikariPool-1 - Start completed.
2025-03-25 12:51:23 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-25 12:51:23 - DEBUG - ==> Parameters: 
2025-03-25 12:51:23 - DEBUG - <==      Total: 8
2025-03-25 12:51:23 - INFO - Redisson 3.13.6
2025-03-25 12:51:24 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-25 12:51:24 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-25 12:51:24 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-25 12:51:24 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-25 12:51:24 - INFO - Started FoodieOdysseyApplication in 3.363 seconds (JVM running for 3.781)
2025-03-25 12:52:12 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-25 12:52:12 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-25 12:52:12 - INFO - Completed initialization in 1 ms
2025-03-25 12:52:13 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-25 12:52:13 - DEBUG - ==> Parameters: 6(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-25 12:52:13 - DEBUG - <==    Updates: 1
2025-03-25 12:52:13 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-25 12:52:13 - DEBUG - ==> Parameters: 18(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-25 12:52:13 - DEBUG - <==    Updates: 1
2025-03-25 12:52:34 - INFO - 方法执行时间：54ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：55ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：49ms
2025-03-25 12:52:34 - INFO - 方法执行时间：49ms
2025-03-25 12:52:34 - INFO - 方法执行时间：49ms
2025-03-25 12:52:34 - INFO - 方法执行时间：49ms
2025-03-25 12:52:34 - INFO - 方法执行时间：49ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：55ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：56ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：59ms
2025-03-25 12:52:34 - INFO - 方法执行时间：59ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：60ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：53ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：63ms
2025-03-25 12:52:34 - INFO - 方法执行时间：53ms
2025-03-25 12:52:34 - INFO - 方法执行时间：53ms
2025-03-25 12:52:34 - INFO - 方法执行时间：53ms
2025-03-25 12:52:34 - INFO - 方法执行时间：53ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：69ms
2025-03-25 12:52:34 - INFO - 方法执行时间：70ms
2025-03-25 12:52:34 - INFO - 方法执行时间：70ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：57ms
2025-03-25 12:52:34 - INFO - 方法执行时间：58ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：69ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：70ms
2025-03-25 12:52:34 - INFO - 方法执行时间：70ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：70ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：52ms
2025-03-25 12:52:34 - INFO - 方法执行时间：56ms
2025-03-25 12:52:34 - INFO - 方法执行时间：50ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：80ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：80ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：79ms
2025-03-25 12:52:34 - INFO - 方法执行时间：80ms
2025-03-25 12:52:34 - INFO - 方法执行时间：69ms
2025-03-25 12:52:34 - INFO - 方法执行时间：51ms
2025-03-25 12:52:34 - INFO - 方法执行时间：71ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：73ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：80ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：75ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：80ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：82ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：81ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:34 - INFO - 方法执行时间：74ms
2025-03-25 12:52:35 - INFO - 方法执行时间：26ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1263(Long), 18(Long)
2025-03-25 12:52:35 - INFO - 方法执行时间：26ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - INFO - 方法执行时间：26ms
2025-03-25 12:52:35 - INFO - 方法执行时间：26ms
2025-03-25 12:52:35 - INFO - 方法执行时间：25ms
2025-03-25 12:52:35 - INFO - 方法执行时间：25ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - INFO - 方法执行时间：25ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - INFO - 方法执行时间：24ms
2025-03-25 12:52:35 - INFO - 方法执行时间：23ms
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - INFO - 方法执行时间：23ms
2025-03-25 12:52:35 - INFO - 方法执行时间：23ms
2025-03-25 12:52:35 - INFO - 方法执行时间：23ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116378(Long), 1263(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：22ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：21ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：18ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - INFO - 方法执行时间：19ms
2025-03-25 12:52:35 - INFO - 方法执行时间：20ms
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1272(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116257(Long), 1272(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1359(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116382(Long), 1359(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1256(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116264(Long), 1256(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1311(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116355(Long), 1311(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1288(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116260(Long), 1288(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1255(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116258(Long), 1255(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 1330(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==      Total: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:35 - DEBUG - ==> Parameters: 30999158387116270(Long), 1330(Long), 18(Long)
2025-03-25 12:52:35 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1259(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116328(Long), 1259(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1361(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116266(Long), 1361(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1339(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116352(Long), 1339(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1305(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116273(Long), 1305(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1274(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116374(Long), 1274(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1327(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116271(Long), 1327(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1271(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116184(Long), 1271(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1350(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116191(Long), 1350(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1312(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116291(Long), 1312(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 1304(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==      Total: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:36 - DEBUG - ==> Parameters: 30999158387116373(Long), 1304(Long), 18(Long)
2025-03-25 12:52:36 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1295(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116276(Long), 1295(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1250(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116370(Long), 1250(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1299(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116281(Long), 1299(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1262(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116284(Long), 1262(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1277(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116252(Long), 1277(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1264(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116277(Long), 1264(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1270(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116241(Long), 1270(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1309(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116289(Long), 1309(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 1308(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==      Total: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:37 - DEBUG - ==> Parameters: 30999158387116283(Long), 1308(Long), 18(Long)
2025-03-25 12:52:37 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1267(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116297(Long), 1267(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1307(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116302(Long), 1307(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1337(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116324(Long), 1337(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1302(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116275(Long), 1302(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1286(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116262(Long), 1286(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1266(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116245(Long), 1266(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1249(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116236(Long), 1249(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1324(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116292(Long), 1324(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1325(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116342(Long), 1325(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 1321(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==      Total: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:38 - DEBUG - ==> Parameters: 30999158387116234(Long), 1321(Long), 18(Long)
2025-03-25 12:52:38 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1355(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116213(Long), 1355(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1260(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116207(Long), 1260(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1268(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116303(Long), 1268(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1306(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116301(Long), 1306(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1310(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116280(Long), 1310(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1320(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116293(Long), 1320(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1265(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116237(Long), 1265(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1276(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116226(Long), 1276(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1326(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116377(Long), 1326(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 1358(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==      Total: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:39 - DEBUG - ==> Parameters: 30999158387116314(Long), 1358(Long), 18(Long)
2025-03-25 12:52:39 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1314(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116304(Long), 1314(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1280(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116259(Long), 1280(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1254(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116344(Long), 1254(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1300(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116329(Long), 1300(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1323(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116341(Long), 1323(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1251(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116360(Long), 1251(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1291(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116335(Long), 1291(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1354(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116221(Long), 1354(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1322(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116222(Long), 1322(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 1344(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==      Total: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:40 - DEBUG - ==> Parameters: 30999158387116223(Long), 1344(Long), 18(Long)
2025-03-25 12:52:40 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1348(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116353(Long), 1348(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1360(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116194(Long), 1360(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1341(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116185(Long), 1341(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1297(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116285(Long), 1297(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1301(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116225(Long), 1301(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1315(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116215(Long), 1315(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1362(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116278(Long), 1362(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1283(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116379(Long), 1283(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1329(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116187(Long), 1329(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 1287(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==      Total: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:41 - DEBUG - ==> Parameters: 30999158387116218(Long), 1287(Long), 18(Long)
2025-03-25 12:52:41 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1282(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116208(Long), 1282(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1275(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116322(Long), 1275(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1293(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116327(Long), 1293(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1258(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116190(Long), 1258(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1269(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116326(Long), 1269(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1296(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116305(Long), 1296(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1343(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116211(Long), 1343(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1261(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116255(Long), 1261(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1338(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116203(Long), 1338(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 1319(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==      Total: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:42 - DEBUG - ==> Parameters: 30999158387116232(Long), 1319(Long), 18(Long)
2025-03-25 12:52:42 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1340(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116204(Long), 1340(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1298(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116240(Long), 1298(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1292(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116299(Long), 1292(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1356(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116196(Long), 1356(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1285(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116233(Long), 1285(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1332(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116198(Long), 1332(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1289(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116243(Long), 1289(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1253(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116263(Long), 1253(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1349(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116188(Long), 1349(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 1279(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==      Total: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:43 - DEBUG - ==> Parameters: 30999158387116200(Long), 1279(Long), 18(Long)
2025-03-25 12:52:43 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1347(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116347(Long), 1347(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1317(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116186(Long), 1317(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1290(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116356(Long), 1290(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1353(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116220(Long), 1353(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1316(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116340(Long), 1316(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1252(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116308(Long), 1252(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1281(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116309(Long), 1281(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1366(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116296(Long), 1366(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1351(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116338(Long), 1351(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 1318(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==      Total: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:44 - DEBUG - ==> Parameters: 30999158387116367(Long), 1318(Long), 18(Long)
2025-03-25 12:52:44 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 1352(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==      Total: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 30999158387116325(Long), 1352(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 1342(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==      Total: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 30999158387116354(Long), 1342(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 1328(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==      Total: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 18(Long), 0(Integer)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:52:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:52:45 - DEBUG - ==> Parameters: 30999158387116323(Long), 1328(Long), 18(Long)
2025-03-25 12:52:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:12 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-25 12:56:12 - INFO - HikariPool-1 - Shutdown completed.
2025-03-25 12:56:12 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-25 12:56:12 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-25 12:56:12 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-25 12:56:16 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 17072 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-25 12:56:16 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-25 12:56:16 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-25 12:56:16 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-25 12:56:16 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-25 12:56:17 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-25 12:56:17 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-25 12:56:17 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-25 12:56:17 - INFO - Starting service [Tomcat]
2025-03-25 12:56:17 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-25 12:56:17 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-25 12:56:17 - INFO - Root WebApplicationContext: initialization completed in 1020 ms
2025-03-25 12:56:18 - INFO - HikariPool-1 - Starting...
2025-03-25 12:56:18 - INFO - HikariPool-1 - Start completed.
2025-03-25 12:56:18 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-25 12:56:18 - DEBUG - ==> Parameters: 
2025-03-25 12:56:18 - DEBUG - <==      Total: 9
2025-03-25 12:56:18 - INFO - Redisson 3.13.6
2025-03-25 12:56:19 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-25 12:56:19 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-25 12:56:19 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-25 12:56:19 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-25 12:56:19 - INFO - Started FoodieOdysseyApplication in 3.324 seconds (JVM running for 3.736)
2025-03-25 12:56:23 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-25 12:56:23 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-25 12:56:23 - INFO - Completed initialization in 1 ms
2025-03-25 12:56:23 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-25 12:56:23 - DEBUG - ==> Parameters: 6(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-25 12:56:23 - DEBUG - <==    Updates: 1
2025-03-25 12:56:23 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-25 12:56:23 - DEBUG - ==> Parameters: 19(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-25 12:56:23 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：133ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：142ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：145ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：144ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：145ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：145ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：146ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：144ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：146ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：136ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：146ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：146ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：144ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：143ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：147ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：133ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：147ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：148ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：148ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：149ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：146ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：137ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：147ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：147ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：137ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：148ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：141ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：148ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：140ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：141ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：150ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：150ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：150ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：151ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：151ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：151ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：150ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：152ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：151ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：141ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：151ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：152ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：138ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：150ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：153ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：134ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：152ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：138ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：136ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：153ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：138ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：137ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：138ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：137ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：137ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：152ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：157ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：156ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：160ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：160ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：159ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：178ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：179ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：179ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：181ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：181ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：182ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：180ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：182ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：182ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：179ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：181ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：181ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：195ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：199ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：199ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：199ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：200ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：203ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：201ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：199ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：201ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：205ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：203ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：204ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：206ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：206ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：203ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：205ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：207ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：206ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：207ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：206ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：207ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：206ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：210ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：209ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：210ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：210ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：213ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：213ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：211ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：212ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：214ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：213ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：217ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：215ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：218ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：218ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：218ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：216ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：218ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：219ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：219ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：219ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：222ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：222ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：223ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：222ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：221ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：224ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：224ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：226ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：226ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：226ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：226ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：229ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：231ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：231ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：229ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：229ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：231ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：231ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：236ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：237ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：238ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：237ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：239ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：240ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：241ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：243ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：243ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：241ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：63ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：242ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：243ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：247ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：247ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：247ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：248ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：249ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：250ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：248ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：70ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：77ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：256ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：256ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：256ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：256ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：258ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：259ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：259ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：259ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：260ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：260ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：262ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：262ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：260ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：260ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：263ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：261ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：262ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：68ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：67ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：262ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：262ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：70ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：265ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：265ms
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 1281(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==      Total: 1
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：77ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：76ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：76ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：76ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：278ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：278ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：278ms
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：283ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：286ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：284ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：286ms
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 31000193474234870(Long), 1281(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - INFO - createVoucherOrder方法执行时间：33ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：290ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：290ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：76ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：78ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：91ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：91ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：92ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：74ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：95ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：95ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：96ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：97ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：97ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：107ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：106ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：107ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：106ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：108ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：107ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：108ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：108ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：113ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：113ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：69ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：113ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：113ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：73ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：71ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：114ms
2025-03-25 12:56:35 - INFO - orderOperation方法执行时间：120ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：117ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：119ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：118ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：124ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：126ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：126ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：125ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：131ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：131ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：131ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：130ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：149ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：136ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：135ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：84ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：149ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：136ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：90ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：96ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：97ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：92ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：99ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：94ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：114ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：99ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：102ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：126ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：128ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：126ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：127ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：127ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：128ms
2025-03-25 12:56:35 - INFO - secKillVoucher方法执行时间：128ms
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 1282(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==      Total: 1
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 31000193474234995(Long), 1282(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - INFO - createVoucherOrder方法执行时间：9ms
2025-03-25 12:56:35 - INFO - orderOperation方法执行时间：58ms
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 1315(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==      Total: 1
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:35 - DEBUG - ==> Parameters: 31000193474234969(Long), 1315(Long), 19(Long)
2025-03-25 12:56:35 - DEBUG - <==    Updates: 1
2025-03-25 12:56:35 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1269(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234967(Long), 1269(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：48ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1300(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234963(Long), 1300(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：8ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：69ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1272(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234972(Long), 1272(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：8ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1261(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234973(Long), 1261(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1318(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234986(Long), 1318(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：10ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：62ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1304(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234965(Long), 1304(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：47ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1311(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474235000(Long), 1311(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1359(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234820(Long), 1359(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 1356(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==      Total: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:36 - DEBUG - ==> Parameters: 31000193474234993(Long), 1356(Long), 19(Long)
2025-03-25 12:56:36 - DEBUG - <==    Updates: 1
2025-03-25 12:56:36 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:36 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1349(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234968(Long), 1349(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1343(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234998(Long), 1343(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1274(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234991(Long), 1274(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：11ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1253(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234961(Long), 1253(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：8ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1265(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234964(Long), 1265(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：8ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1341(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234845(Long), 1341(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1317(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234949(Long), 1317(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1280(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234846(Long), 1280(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1256(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234937(Long), 1256(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:37 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 1345(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==      Total: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:37 - DEBUG - ==> Parameters: 31000193474234842(Long), 1345(Long), 19(Long)
2025-03-25 12:56:37 - DEBUG - <==    Updates: 1
2025-03-25 12:56:37 - INFO - createVoucherOrder方法执行时间：11ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：69ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1325(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234840(Long), 1325(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1293(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234863(Long), 1293(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1279(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234834(Long), 1279(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1350(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234933(Long), 1350(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1339(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234902(Long), 1339(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1286(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234894(Long), 1286(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：47ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1271(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234960(Long), 1271(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1324(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234860(Long), 1324(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 1308(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==      Total: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:38 - DEBUG - ==> Parameters: 31000193474234957(Long), 1308(Long), 19(Long)
2025-03-25 12:56:38 - DEBUG - <==    Updates: 1
2025-03-25 12:56:38 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:38 - INFO - orderOperation方法执行时间：54ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1307(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234868(Long), 1307(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1252(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234959(Long), 1252(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1250(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234955(Long), 1250(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1284(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234952(Long), 1284(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：12ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1268(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234954(Long), 1268(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：14ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1331(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234953(Long), 1331(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：48ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1270(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234950(Long), 1270(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1305(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234951(Long), 1305(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：9ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1266(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234948(Long), 1266(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:39 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 1319(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==      Total: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:39 - DEBUG - ==> Parameters: 31000193474234947(Long), 1319(Long), 19(Long)
2025-03-25 12:56:39 - DEBUG - <==    Updates: 1
2025-03-25 12:56:39 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1314(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234945(Long), 1314(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1320(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234943(Long), 1320(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：56ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1328(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234942(Long), 1328(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1248(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234866(Long), 1248(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1289(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234938(Long), 1289(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：10ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：68ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1264(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234935(Long), 1264(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1337(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234931(Long), 1337(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：47ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1335(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234930(Long), 1335(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 1297(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==      Total: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:40 - DEBUG - ==> Parameters: 31000193474234925(Long), 1297(Long), 19(Long)
2025-03-25 12:56:40 - DEBUG - <==    Updates: 1
2025-03-25 12:56:40 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:40 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1363(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234928(Long), 1363(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：48ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1334(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234920(Long), 1334(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：57ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1326(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234921(Long), 1326(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1254(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234918(Long), 1254(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1342(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234911(Long), 1342(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1260(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234981(Long), 1260(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：39ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1313(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234962(Long), 1313(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1263(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234976(Long), 1263(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1346(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234971(Long), 1346(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：40ms
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 1259(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==      Total: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:41 - DEBUG - ==> Parameters: 31000193474234997(Long), 1259(Long), 19(Long)
2025-03-25 12:56:41 - DEBUG - <==    Updates: 1
2025-03-25 12:56:41 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:41 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1340(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234994(Long), 1340(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1273(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234909(Long), 1273(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1285(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234908(Long), 1285(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：9ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1364(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234970(Long), 1364(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1251(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234905(Long), 1251(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：58ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1327(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234859(Long), 1327(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1257(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234903(Long), 1257(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1267(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234904(Long), 1267(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：41ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1357(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234849(Long), 1357(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 1347(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==      Total: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:42 - DEBUG - ==> Parameters: 31000193474234858(Long), 1347(Long), 19(Long)
2025-03-25 12:56:42 - DEBUG - <==    Updates: 1
2025-03-25 12:56:42 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:42 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1249(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234855(Long), 1249(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1303(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234853(Long), 1303(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：52ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1277(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234854(Long), 1277(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1358(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234836(Long), 1358(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1296(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234848(Long), 1296(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：2ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1290(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234901(Long), 1290(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1348(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234893(Long), 1348(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1365(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234897(Long), 1365(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1336(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234892(Long), 1336(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：5ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：57ms
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 1344(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==      Total: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:43 - DEBUG - ==> Parameters: 31000193474234891(Long), 1344(Long), 19(Long)
2025-03-25 12:56:43 - DEBUG - <==    Updates: 1
2025-03-25 12:56:43 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:43 - INFO - orderOperation方法执行时间：39ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1262(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234890(Long), 1262(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：7ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1354(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234844(Long), 1354(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：58ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1276(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234934(Long), 1276(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：40ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1275(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234924(Long), 1275(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：6ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1255(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234915(Long), 1255(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：18ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：72ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1294(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234923(Long), 1294(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：56ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1312(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234887(Long), 1312(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1361(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234881(Long), 1361(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：39ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1323(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234880(Long), 1323(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 1288(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==      Total: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:44 - DEBUG - ==> Parameters: 31000193474234878(Long), 1288(Long), 19(Long)
2025-03-25 12:56:44 - DEBUG - <==    Updates: 1
2025-03-25 12:56:44 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:44 - INFO - orderOperation方法执行时间：49ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1295(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234874(Long), 1295(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：9ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1362(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234896(Long), 1362(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：4ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1309(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234913(Long), 1309(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：2ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：51ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1298(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234882(Long), 1298(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：2ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：60ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1329(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234869(Long), 1329(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：40ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1283(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234828(Long), 1283(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：12ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：59ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1332(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234875(Long), 1332(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1360(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234865(Long), 1360(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：2ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：50ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1278(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234912(Long), 1278(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：3ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：52ms
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 1301(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==      Total: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 19(Long), 0(Integer)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 12:56:45 - DEBUG - ==> Parameters: 31000193474234885(Long), 1301(Long), 19(Long)
2025-03-25 12:56:45 - DEBUG - <==    Updates: 1
2025-03-25 12:56:45 - INFO - createVoucherOrder方法执行时间：2ms
2025-03-25 12:56:45 - INFO - orderOperation方法执行时间：39ms
2025-03-25 13:01:05 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-25 13:01:06 - INFO - HikariPool-1 - Shutdown completed.
2025-03-25 13:01:06 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-25 13:01:06 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-25 13:01:06 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-25 13:01:09 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 3252 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-25 13:01:09 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-25 13:01:09 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-25 13:01:10 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-25 13:01:10 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-25 13:01:10 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-25 13:01:10 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-25 13:01:10 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-25 13:01:10 - INFO - Starting service [Tomcat]
2025-03-25 13:01:10 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-25 13:01:10 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-25 13:01:10 - INFO - Root WebApplicationContext: initialization completed in 1021 ms
2025-03-25 13:01:11 - INFO - HikariPool-1 - Starting...
2025-03-25 13:01:11 - INFO - HikariPool-1 - Start completed.
2025-03-25 13:01:11 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-25 13:01:11 - DEBUG - ==> Parameters: 
2025-03-25 13:01:11 - DEBUG - <==      Total: 10
2025-03-25 13:01:11 - INFO - Redisson 3.13.6
2025-03-25 13:01:12 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-25 13:01:12 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-25 13:01:12 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-25 13:01:12 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-25 13:01:12 - INFO - Started FoodieOdysseyApplication in 3.237 seconds (JVM running for 3.642)
2025-03-25 13:01:22 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-25 13:01:22 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-25 13:01:22 - INFO - Completed initialization in 0 ms
2025-03-25 13:01:22 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-25 13:01:22 - DEBUG - ==> Parameters: 6(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-25 13:01:22 - DEBUG - <==    Updates: 1
2025-03-25 13:01:22 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-25 13:01:22 - DEBUG - ==> Parameters: 20(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-25 13:01:22 - DEBUG - <==    Updates: 1
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：78
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：73
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：73
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：73
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：71
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：71
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：71
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：71
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：146ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：146ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：75
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：76
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：75
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：74
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：75
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：70
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：75
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：147ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：72
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：73
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：147ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：147ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：147ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：78
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：73
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：76
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：149ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：84
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：148ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：85
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：85
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：149ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：145ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：79
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：149ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：144ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：79
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：78
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：143ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：86
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：86
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：80
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：80
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：86
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：78
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：154ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：142ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：151ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：78
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：154ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：154ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：82
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：155ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：77
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：155ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：88
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：86
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：89
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：89
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：89
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：80
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：154ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：152ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：156ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：155ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：80
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：156ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：153ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：81
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：157ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：83
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：159ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：85
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：150ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：159ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：159ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：90
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：159ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：159ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：156ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：88
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：84
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：88
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：87
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：161ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：158ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：90
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：163ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：161ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：91
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：90
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：90
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：161ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：156ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：162ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：92
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：163ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：94
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：168ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：96
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：170ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：97
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：97
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：168ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：168ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：98
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：173ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：100
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：174ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：102
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：102
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：102
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：176ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：172ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：172ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：103
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：103
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：177ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：177ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：104
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：176ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：107
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：107
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：107
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：107
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：177ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：107
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：172ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：114
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：180ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：109
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：179ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：182ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：185ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：111
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：185ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：181ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：113
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：117
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：183ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：183ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：112
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：183ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：120
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：114
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：188ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：120
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：185ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：119
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：185ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：186ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：116
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：116
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：115
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：186ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：187ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：120
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：186ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：186ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：122
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：123
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：187ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：187ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：189ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：187ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：188ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：118
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：119
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：118
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：190ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：118
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：189ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：189ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：189ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：190ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：189ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：191ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：120
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：190ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：191ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：122
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：122
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：122
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：121
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：122
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：191ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：192ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：192ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：192ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：192ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：123
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：124
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：123
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：193ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：194ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：193ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：193ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：193ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：193ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：127
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：128
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：128
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：128
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：127
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：127
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：127
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：128
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：199ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：198ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：199ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：200ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：129
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：200ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：200ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：199ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：201ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：199ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：199ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：132
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：202ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：132
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：133
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：132
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：202ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：204ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：202ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：134
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：133
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：204ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：134
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：203ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：205ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：134
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：133
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：134
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：203ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：204ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：205ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：135
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：135
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：205ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：205ms
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 1250(Long), 20(Long)
2025-03-25 13:01:33 - DEBUG - <==      Total: 1
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:33 - DEBUG - <==    Updates: 1
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 31001473374489413(Long), 1250(Long), 20(Long)
2025-03-25 13:01:33 - DEBUG - <==    Updates: 1
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：19
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：67ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：19
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：67ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：19
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：17
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：68ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：68ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：68ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：22
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：19
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：68ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：69ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：21
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：21
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：21
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：19
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：70ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：75ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：72ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：23
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：21
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：21
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：71ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：68ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：24
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：73ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：77ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：75ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：75ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：74ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：77ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：27
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：75ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：30
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：78ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：80ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：30
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：80ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：79ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：18
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：80ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：80ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：76ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：77ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：77ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：20
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：77ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：83ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：82ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：82ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：32
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：82ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：82ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：83ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：75ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：81ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：83ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：83ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：28
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：83ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：81ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：81ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：26
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：81ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：84ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：29
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：85ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：85ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：39
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：39
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：95ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：39
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：95ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：95ms
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：39
2025-03-25 13:01:33 - INFO - 执行lua脚本耗时：39
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：95ms
2025-03-25 13:01:33 - INFO - seckillVoucher方法执行时间：95ms
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 1297(Long), 20(Long)
2025-03-25 13:01:33 - DEBUG - <==      Total: 1
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:33 - DEBUG - <==    Updates: 1
2025-03-25 13:01:33 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:33 - DEBUG - ==> Parameters: 31001473374489349(Long), 1297(Long), 20(Long)
2025-03-25 13:01:33 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1270(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489408(Long), 1270(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1289(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489378(Long), 1289(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1298(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489410(Long), 1298(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1262(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489345(Long), 1262(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1283(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489358(Long), 1283(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1363(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489456(Long), 1363(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1334(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489457(Long), 1334(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1305(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489460(Long), 1305(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 1296(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==      Total: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:34 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:34 - DEBUG - ==> Parameters: 31001473374489407(Long), 1296(Long), 20(Long)
2025-03-25 13:01:34 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1266(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489359(Long), 1266(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1311(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489350(Long), 1311(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1275(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489344(Long), 1275(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1301(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489493(Long), 1301(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1253(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489395(Long), 1253(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1294(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489411(Long), 1294(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1282(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489463(Long), 1282(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1330(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489342(Long), 1330(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 1349(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==      Total: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:35 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:35 - DEBUG - ==> Parameters: 31001473374489373(Long), 1349(Long), 20(Long)
2025-03-25 13:01:35 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1361(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489351(Long), 1361(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1256(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489331(Long), 1256(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1255(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489335(Long), 1255(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1284(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489374(Long), 1284(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1265(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489363(Long), 1265(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1312(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489389(Long), 1312(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1288(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489384(Long), 1288(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1307(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489388(Long), 1307(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 1295(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==      Total: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:36 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:36 - DEBUG - ==> Parameters: 31001473374489372(Long), 1295(Long), 20(Long)
2025-03-25 13:01:36 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1313(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489502(Long), 1313(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1300(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489508(Long), 1300(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1304(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489404(Long), 1304(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1287(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489459(Long), 1287(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1358(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489371(Long), 1358(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1310(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489400(Long), 1310(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1326(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489343(Long), 1326(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1327(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489512(Long), 1327(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 1264(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==      Total: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:37 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:37 - DEBUG - ==> Parameters: 31001473374489391(Long), 1264(Long), 20(Long)
2025-03-25 13:01:37 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1355(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489447(Long), 1355(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1274(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489444(Long), 1274(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1322(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489352(Long), 1322(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1268(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489501(Long), 1268(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1347(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489418(Long), 1347(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1278(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489500(Long), 1278(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1354(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489419(Long), 1354(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 1291(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==      Total: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:38 - DEBUG - ==> Parameters: 31001473374489402(Long), 1291(Long), 20(Long)
2025-03-25 13:01:38 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1335(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489526(Long), 1335(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1319(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489448(Long), 1319(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1273(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489422(Long), 1273(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1277(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489520(Long), 1277(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1267(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489441(Long), 1267(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1271(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489445(Long), 1271(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1316(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489330(Long), 1316(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1352(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489356(Long), 1352(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1299(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489442(Long), 1299(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 1292(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==      Total: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:39 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:39 - DEBUG - ==> Parameters: 31001473374489337(Long), 1292(Long), 20(Long)
2025-03-25 13:01:39 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1263(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489381(Long), 1263(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1342(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489382(Long), 1342(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1272(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489519(Long), 1272(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1325(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489347(Long), 1325(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1260(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489436(Long), 1260(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1337(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489423(Long), 1337(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1285(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489365(Long), 1285(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1345(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489513(Long), 1345(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 1286(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==      Total: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:40 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:40 - DEBUG - ==> Parameters: 31001473374489527(Long), 1286(Long), 20(Long)
2025-03-25 13:01:40 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1346(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489524(Long), 1346(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1293(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489521(Long), 1293(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1324(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489491(Long), 1324(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1276(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489518(Long), 1276(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1306(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489511(Long), 1306(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1357(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489499(Long), 1357(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1318(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489509(Long), 1318(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1254(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489431(Long), 1254(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 1290(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==      Total: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:41 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:41 - DEBUG - ==> Parameters: 31001473374489435(Long), 1290(Long), 20(Long)
2025-03-25 13:01:41 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1329(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489432(Long), 1329(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1269(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489523(Long), 1269(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1336(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489450(Long), 1336(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1314(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489454(Long), 1314(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1309(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489462(Long), 1309(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1339(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489467(Long), 1339(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1366(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489455(Long), 1366(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1249(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489466(Long), 1249(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 1280(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==      Total: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:42 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:42 - DEBUG - ==> Parameters: 31001473374489470(Long), 1280(Long), 20(Long)
2025-03-25 13:01:42 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1252(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489471(Long), 1252(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1261(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489503(Long), 1261(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1248(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489475(Long), 1248(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1315(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489496(Long), 1315(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1321(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489479(Long), 1321(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1362(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489477(Long), 1362(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 1308(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==      Total: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:43 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:43 - DEBUG - ==> Parameters: 31001473374489494(Long), 1308(Long), 20(Long)
2025-03-25 13:01:43 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1353(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489482(Long), 1353(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1350(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489481(Long), 1350(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1258(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489510(Long), 1258(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1281(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489417(Long), 1281(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1365(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489487(Long), 1365(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1279(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489490(Long), 1279(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 1328(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==      Total: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:44 - DEBUG - ==> Parameters: 31001473374489486(Long), 1328(Long), 20(Long)
2025-03-25 13:01:44 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 1356(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==      Total: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 31001473374489429(Long), 1356(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 1259(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==      Total: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 31001473374489430(Long), 1259(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 1317(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==      Total: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 20(Long), 0(Integer)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:01:45 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-25 13:01:45 - DEBUG - ==> Parameters: 31001473374489360(Long), 1317(Long), 20(Long)
2025-03-25 13:01:45 - DEBUG - <==    Updates: 1
2025-03-25 13:07:10 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-25 13:07:10 - INFO - HikariPool-1 - Shutdown completed.
2025-03-25 13:07:10 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-25 13:07:10 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-25 13:07:10 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:52 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 33240 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:37:52 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:37:52 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:37:53 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:37:53 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:37:53 - INFO - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-03-26 10:37:53 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:37:53 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:37:53 - INFO - Starting service [Tomcat]
2025-03-26 10:37:53 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:37:54 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:37:54 - INFO - Root WebApplicationContext: initialization completed in 1739 ms
2025-03-26 10:37:54 - INFO - HikariPool-1 - Starting...
2025-03-26 10:37:55 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:37:55 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:37:55 - DEBUG - ==> Parameters: 
2025-03-26 10:37:55 - DEBUG - <==      Total: 11
2025-03-26 10:37:55 - INFO - Redisson 3.13.6
2025-03-26 10:37:56 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:37:56 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:37:56 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:37:56 - INFO - Started FoodieOdysseyApplication in 4.56 seconds (JVM running for 5.348)
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:56 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:58 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:37:59 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:00 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:02 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:02 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 10:38:02 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandExecutionException: NOGROUP No such key 'stream.orders' or consumer group 'g1' in XREADGROUP with GROUP option
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:38:02 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 10:38:02 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:40:33 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21496 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:40:33 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:40:33 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:40:34 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:40:34 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:40:34 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 10:40:34 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:40:34 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:40:34 - INFO - Starting service [Tomcat]
2025-03-26 10:40:34 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:40:34 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:40:34 - INFO - Root WebApplicationContext: initialization completed in 1097 ms
2025-03-26 10:40:35 - INFO - HikariPool-1 - Starting...
2025-03-26 10:40:35 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:40:35 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:40:35 - DEBUG - ==> Parameters: 
2025-03-26 10:40:35 - DEBUG - <==      Total: 11
2025-03-26 10:40:36 - INFO - Redisson 3.13.6
2025-03-26 10:40:36 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:40:36 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:40:37 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:40:37 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:40:37 - INFO - Started FoodieOdysseyApplication in 3.664 seconds (JVM running for 4.097)
2025-03-26 10:40:51 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 10:40:51 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 10:40:51 - INFO - Completed initialization in 1 ms
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,name,icon,sort,create_time,update_time FROM tb_shop_type ORDER BY sort ASC
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 
2025-03-26 10:40:51 - DEBUG - <==      Total: 10
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 
2025-03-26 10:40:51 - DEBUG - <==      Total: 1
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:40:51 - DEBUG - <==      Total: 4
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:40:51 - DEBUG - <==      Total: 1
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:40:51 - DEBUG - <==      Total: 1
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:40:51 - DEBUG - <==      Total: 1
2025-03-26 10:40:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:40:51 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:40:51 - DEBUG - <==      Total: 1
2025-03-26 10:40:54 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 10:40:54 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 10:40:54 - DEBUG - <==      Total: 1
2025-03-26 10:40:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 10:40:54 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 10:40:54 - DEBUG - <==      Total: 5
2025-03-26 10:40:55 - INFO - 热点key被查询
2025-03-26 10:40:55 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:40:55 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:40:55 - DEBUG - <==      Total: 3
2025-03-26 10:40:59 - INFO - 普通key被查询
2025-03-26 10:40:59 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:40:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:40:59 - DEBUG - <==      Total: 1
2025-03-26 10:40:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 10:40:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:40:59 - DEBUG - <==      Total: 1
2025-03-26 10:43:25 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 10:43:25 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 10:43:25 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 10:43:25 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:43:26 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:43:29 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 34228 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:43:29 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:43:29 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:43:29 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:43:29 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:43:29 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 10:43:30 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:43:30 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:43:30 - INFO - Starting service [Tomcat]
2025-03-26 10:43:30 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:43:30 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:43:30 - INFO - Root WebApplicationContext: initialization completed in 1005 ms
2025-03-26 10:43:30 - INFO - HikariPool-1 - Starting...
2025-03-26 10:43:31 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:43:31 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:43:31 - DEBUG - ==> Parameters: 
2025-03-26 10:43:31 - DEBUG - <==      Total: 11
2025-03-26 10:43:31 - INFO - Redisson 3.13.6
2025-03-26 10:43:31 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:43:32 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:43:32 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:43:32 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:43:32 - INFO - Started FoodieOdysseyApplication in 3.266 seconds (JVM running for 3.72)
2025-03-26 10:44:14 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 10:44:14 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 10:44:14 - INFO - Completed initialization in 1 ms
2025-03-26 10:44:14 - INFO - 普通key被查询
2025-03-26 10:44:14 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:14 - DEBUG - <==      Total: 3
2025-03-26 10:44:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 10:44:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:14 - DEBUG - <==      Total: 1
2025-03-26 10:44:18 - INFO - 普通key被查询
2025-03-26 10:44:18 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:18 - DEBUG - <==      Total: 3
2025-03-26 10:44:20 - INFO - 普通key被查询
2025-03-26 10:44:20 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:20 - DEBUG - <==      Total: 3
2025-03-26 10:44:22 - INFO - 普通key被查询
2025-03-26 10:44:22 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:22 - DEBUG - <==      Total: 1
2025-03-26 10:44:22 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 10:44:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:22 - DEBUG - <==      Total: 1
2025-03-26 10:44:24 - INFO - 普通key被查询
2025-03-26 10:44:24 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:24 - DEBUG - <==      Total: 1
2025-03-26 10:44:32 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:32 - INFO - 普通key被查询
2025-03-26 10:44:32 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 10:44:32 - DEBUG - <==      Total: 2
2025-03-26 10:44:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 10:44:32 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 10:44:32 - DEBUG - <==      Total: 1
2025-03-26 10:44:34 - INFO - 普通key被查询
2025-03-26 10:44:34 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:34 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 10:44:34 - DEBUG - <==      Total: 2
2025-03-26 10:44:36 - INFO - 普通key被查询
2025-03-26 10:44:36 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:36 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 10:44:36 - DEBUG - <==      Total: 2
2025-03-26 10:44:38 - INFO - 普通key被查询
2025-03-26 10:44:38 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:38 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 10:44:38 - DEBUG - <==      Total: 2
2025-03-26 10:44:40 - INFO - 普通key被查询
2025-03-26 10:44:40 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 10:44:40 - DEBUG - <==      Total: 1
2025-03-26 10:44:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 10:44:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 10:44:40 - DEBUG - <==      Total: 1
2025-03-26 10:44:42 - INFO - 普通key被查询
2025-03-26 10:44:42 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 10:44:42 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 10:44:42 - DEBUG - <==      Total: 1
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 
2025-03-26 10:44:47 - DEBUG - <==      Total: 1
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:44:47 - DEBUG - <==      Total: 4
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:47 - DEBUG - <==      Total: 1
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:47 - DEBUG - <==      Total: 1
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:47 - DEBUG - <==      Total: 1
2025-03-26 10:44:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:47 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:47 - DEBUG - <==      Total: 1
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 
2025-03-26 10:44:49 - DEBUG - <==      Total: 1
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:44:49 - DEBUG - <==      Total: 4
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:49 - DEBUG - <==      Total: 1
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:49 - DEBUG - <==      Total: 1
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:49 - DEBUG - <==      Total: 1
2025-03-26 10:44:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:49 - DEBUG - <==      Total: 1
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 
2025-03-26 10:44:58 - DEBUG - <==      Total: 1
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:44:58 - DEBUG - <==      Total: 4
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:58 - DEBUG - <==      Total: 1
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:44:58 - DEBUG - <==      Total: 1
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:58 - DEBUG - <==      Total: 1
2025-03-26 10:44:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:44:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:44:58 - DEBUG - <==      Total: 1
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 
2025-03-26 10:45:00 - DEBUG - <==      Total: 1
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:45:00 - DEBUG - <==      Total: 4
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:00 - DEBUG - <==      Total: 1
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:00 - DEBUG - <==      Total: 1
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:00 - DEBUG - <==      Total: 1
2025-03-26 10:45:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:00 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:00 - DEBUG - <==      Total: 1
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 
2025-03-26 10:45:01 - DEBUG - <==      Total: 1
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:45:01 - DEBUG - <==      Total: 4
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:01 - DEBUG - <==      Total: 1
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:01 - DEBUG - <==      Total: 1
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:01 - DEBUG - <==      Total: 1
2025-03-26 10:45:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:01 - DEBUG - <==      Total: 1
2025-03-26 10:45:07 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 10:45:07 - DEBUG - ==> Parameters: 
2025-03-26 10:45:07 - DEBUG - <==      Total: 1
2025-03-26 10:45:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 10:45:07 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:45:07 - DEBUG - <==      Total: 10
2025-03-26 10:45:10 - DEBUG - send success: 828380
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 18361460327(String)
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:45:20 - DEBUG - <==      Total: 4
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:45:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:45:20 - DEBUG - <==      Total: 1
2025-03-26 10:45:21 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 10:45:21 - DEBUG - ==> Parameters: 
2025-03-26 10:45:21 - DEBUG - <==      Total: 1
2025-03-26 10:45:21 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 10:45:21 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:45:21 - DEBUG - <==      Total: 10
2025-03-26 10:47:31 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 10:47:31 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 10:47:31 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 10:47:31 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:47:31 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:47:36 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 29196 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:47:36 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:47:36 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:47:36 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:47:36 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:47:36 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 10:47:37 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:47:37 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:47:37 - INFO - Starting service [Tomcat]
2025-03-26 10:47:37 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:47:37 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:47:37 - INFO - Root WebApplicationContext: initialization completed in 1007 ms
2025-03-26 10:47:38 - INFO - HikariPool-1 - Starting...
2025-03-26 10:47:38 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:47:38 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:47:38 - DEBUG - ==> Parameters: 
2025-03-26 10:47:38 - DEBUG - <==      Total: 11
2025-03-26 10:47:38 - INFO - Redisson 3.13.6
2025-03-26 10:47:39 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:47:39 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:47:39 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:47:39 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:47:39 - INFO - Started FoodieOdysseyApplication in 3.308 seconds (JVM running for 3.723)
2025-03-26 10:47:44 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 10:47:44 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 10:47:44 - INFO - Completed initialization in 1 ms
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 
2025-03-26 10:47:44 - DEBUG - <==      Total: 1
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:47:44 - DEBUG - <==      Total: 4
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:47:44 - DEBUG - <==      Total: 1
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:47:44 - DEBUG - <==      Total: 1
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:47:44 - DEBUG - <==      Total: 1
2025-03-26 10:47:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:47:44 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:47:44 - DEBUG - <==      Total: 1
2025-03-26 10:47:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 10:47:46 - DEBUG - ==> Parameters: 
2025-03-26 10:47:46 - DEBUG - <==      Total: 1
2025-03-26 10:47:46 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 10:47:46 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:47:46 - DEBUG - <==      Total: 10
2025-03-26 10:47:52 - ERROR - java.lang.RuntimeException: 文件上传失败
java.lang.RuntimeException: 文件上传失败
	at org.jwj.fo.controller.UploadController.uploadImage(UploadController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.io.IOException: java.io.FileNotFoundException: C:\Users\jwj44\AppData\Local\Temp\tomcat.8081.11464540653972749251\work\Tomcat\localhost\ROOT\nginx-1.18.0\html\hmdp\imgs\blogs\5\10\11f06bc1-553a-4bda-9b6a-82f888e9d8bf.jpg (系统找不到指定的路径。)
	at org.apache.catalina.core.ApplicationPart.write(ApplicationPart.java:122)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile.transferTo(StandardMultipartHttpServletRequest.java:259)
	at org.jwj.fo.controller.UploadController.uploadImage(UploadController.java:28)
	... 50 common frames omitted
Caused by: java.io.FileNotFoundException: C:\Users\jwj44\AppData\Local\Temp\tomcat.8081.11464540653972749251\work\Tomcat\localhost\ROOT\nginx-1.18.0\html\hmdp\imgs\blogs\5\10\11f06bc1-553a-4bda-9b6a-82f888e9d8bf.jpg (系统找不到指定的路径。)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.write(DiskFileItem.java:409)
	at org.apache.catalina.core.ApplicationPart.write(ApplicationPart.java:120)
	... 52 common frames omitted
2025-03-26 10:48:31 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 10:48:31 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 10:48:31 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 10:48:31 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:48:31 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:48:35 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21200 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:48:35 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:48:35 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:48:35 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:48:35 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:48:35 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 10:48:36 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:48:36 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:48:36 - INFO - Starting service [Tomcat]
2025-03-26 10:48:36 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:48:36 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:48:36 - INFO - Root WebApplicationContext: initialization completed in 959 ms
2025-03-26 10:48:37 - INFO - HikariPool-1 - Starting...
2025-03-26 10:48:37 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:48:37 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:48:37 - DEBUG - ==> Parameters: 
2025-03-26 10:48:37 - DEBUG - <==      Total: 11
2025-03-26 10:48:37 - INFO - Redisson 3.13.6
2025-03-26 10:48:37 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:48:38 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:48:38 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:48:38 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:48:38 - INFO - Started FoodieOdysseyApplication in 3.198 seconds (JVM running for 3.635)
2025-03-26 10:48:48 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 10:48:48 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 10:48:48 - INFO - Completed initialization in 1 ms
2025-03-26 10:48:48 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 10:48:48 - DEBUG - ==> Parameters: 
2025-03-26 10:48:48 - DEBUG - <==      Total: 1
2025-03-26 10:48:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 10:48:48 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:48:48 - DEBUG - <==      Total: 10
2025-03-26 10:48:57 - ERROR - java.lang.RuntimeException: 文件上传失败
java.lang.RuntimeException: 文件上传失败
	at org.jwj.fo.controller.UploadController.uploadImage(UploadController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.io.IOException: java.io.FileNotFoundException: C:\Users\jwj44\AppData\Local\Temp\tomcat.8081.16604479824207074314\work\Tomcat\localhost\ROOT\src\main\resources\nginx-1.18.0\html\hmdp\imgs\blogs\1\12\4dcc49c3-9e98-4b4b-888c-9e7d972d61d6.jpg (系统找不到指定的路径。)
	at org.apache.catalina.core.ApplicationPart.write(ApplicationPart.java:122)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile.transferTo(StandardMultipartHttpServletRequest.java:259)
	at org.jwj.fo.controller.UploadController.uploadImage(UploadController.java:28)
	... 50 common frames omitted
Caused by: java.io.FileNotFoundException: C:\Users\jwj44\AppData\Local\Temp\tomcat.8081.16604479824207074314\work\Tomcat\localhost\ROOT\src\main\resources\nginx-1.18.0\html\hmdp\imgs\blogs\1\12\4dcc49c3-9e98-4b4b-888c-9e7d972d61d6.jpg (系统找不到指定的路径。)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.write(DiskFileItem.java:409)
	at org.apache.catalina.core.ApplicationPart.write(ApplicationPart.java:120)
	... 52 common frames omitted
2025-03-26 10:49:11 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 10:49:11 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 10:49:11 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 10:49:11 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:49:11 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 10:49:14 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 34184 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 10:49:14 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 10:49:14 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 10:49:15 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 10:49:15 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 10:49:15 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 10:49:15 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 10:49:15 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 10:49:15 - INFO - Starting service [Tomcat]
2025-03-26 10:49:15 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 10:49:15 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 10:49:15 - INFO - Root WebApplicationContext: initialization completed in 973 ms
2025-03-26 10:49:16 - INFO - HikariPool-1 - Starting...
2025-03-26 10:49:16 - INFO - HikariPool-1 - Start completed.
2025-03-26 10:49:16 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 10:49:16 - DEBUG - ==> Parameters: 
2025-03-26 10:49:16 - DEBUG - <==      Total: 11
2025-03-26 10:49:17 - INFO - Redisson 3.13.6
2025-03-26 10:49:17 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 10:49:17 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 10:49:18 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 10:49:18 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 10:49:18 - INFO - Started FoodieOdysseyApplication in 3.388 seconds (JVM running for 3.794)
2025-03-26 10:49:22 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 10:49:22 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 10:49:22 - INFO - Completed initialization in 1 ms
2025-03-26 10:49:22 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 10:49:22 - DEBUG - ==> Parameters: 
2025-03-26 10:49:22 - DEBUG - <==      Total: 1
2025-03-26 10:49:22 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 10:49:22 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:49:22 - DEBUG - <==      Total: 10
2025-03-26 10:49:25 - DEBUG - 文件上传成功，/blogs/13/14/5d6a3bc2-0615-46ab-8955-2e13d061b6f3.jpg
2025-03-26 10:50:33 - DEBUG - 文件上传成功，/blogs/7/3/ecdc06e8-e47c-4390-b8e6-93a6f664ec1c.jpg
2025-03-26 10:50:55 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 10:50:55 - DEBUG - ==> Parameters: 2(Long), 1011(Long), 测试(String), /imgs/blogs/7/3/ecdc06e8-e47c-4390-b8e6-93a6f664ec1c.jpg(String), 测试(String)
2025-03-26 10:50:55 - DEBUG - <==    Updates: 1
2025-03-26 10:50:55 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 10:50:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:50:55 - DEBUG - <==      Total: 0
2025-03-26 10:50:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 10:50:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:50:55 - DEBUG - <==      Total: 1
2025-03-26 10:50:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 10:50:55 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 10:50:55 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 5
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:08 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:08 - DEBUG - <==      Total: 1
2025-03-26 10:51:09 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 10:51:09 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:09 - DEBUG - <==      Total: 1
2025-03-26 10:51:09 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 10:51:09 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 10:51:09 - DEBUG - <==      Total: 1
2025-03-26 10:51:09 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 10:51:09 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:09 - DEBUG - <==      Total: 0
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 5
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 10:51:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:31 - DEBUG - <==      Total: 1
2025-03-26 10:51:32 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 10:51:32 - DEBUG - ==> Parameters: 
2025-03-26 10:51:32 - DEBUG - <==      Total: 1
2025-03-26 10:51:42 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 10:51:42 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:42 - DEBUG - <==      Total: 0
2025-03-26 10:51:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 10:51:42 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:42 - DEBUG - <==      Total: 1
2025-03-26 10:51:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 10:51:42 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 10:51:42 - DEBUG - <==      Total: 1
2025-03-26 10:51:50 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 10:51:50 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:50 - DEBUG - <==      Total: 0
2025-03-26 10:51:50 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 10:51:50 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 10:51:50 - DEBUG - <==      Total: 1
2025-03-26 10:51:50 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 10:51:50 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 10:51:50 - DEBUG - <==      Total: 1
2025-03-26 11:02:44 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:02:44 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:02:44 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:02:44 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:02:44 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:02:49 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 29520 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:02:49 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:02:49 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:02:50 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:02:50 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:02:50 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 11:02:50 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
2025-03-26 11:02:50 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 11:02:50 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:762)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:567)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:255)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:128)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:97)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:78)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:341)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:293)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	... 36 common frames omitted
2025-03-26 11:03:07 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 948 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:03:07 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:03:07 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:03:08 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:03:08 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:03:08 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 11:03:08 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:03:08 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:03:08 - INFO - Starting service [Tomcat]
2025-03-26 11:03:08 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:03:09 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:03:09 - INFO - Root WebApplicationContext: initialization completed in 983 ms
2025-03-26 11:03:09 - INFO - HikariPool-1 - Starting...
2025-03-26 11:03:09 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:03:09 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:03:09 - DEBUG - ==> Parameters: 
2025-03-26 11:03:09 - DEBUG - <==      Total: 11
2025-03-26 11:03:10 - INFO - Redisson 3.13.6
2025-03-26 11:03:10 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:03:10 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:03:11 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:03:11 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:03:11 - INFO - Started FoodieOdysseyApplication in 3.335 seconds (JVM running for 3.753)
2025-03-26 11:03:14 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:03:14 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:03:14 - INFO - Completed initialization in 1 ms
2025-03-26 11:03:14 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 11:03:14 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:03:14 - DEBUG - <==      Total: 0
2025-03-26 11:03:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 11:03:15 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:03:15 - DEBUG - <==      Total: 1
2025-03-26 11:03:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 11:03:15 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 11:03:15 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 5
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:03:29 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:03:29 - DEBUG - <==      Total: 1
2025-03-26 11:03:33 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 11:03:33 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 11:03:33 - DEBUG - <==      Total: 1
2025-03-26 11:03:33 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 11:03:33 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 11:03:33 - DEBUG - <==      Total: 5
2025-03-26 11:03:34 - INFO - 普通key被查询
2025-03-26 11:03:34 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:03:34 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:03:34 - DEBUG - <==      Total: 3
2025-03-26 11:03:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:03:34 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:03:34 - DEBUG - <==      Total: 1
2025-03-26 11:05:04 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:05:04 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:05:04 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:05:04 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:05:04 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:05:07 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 33872 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:05:07 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:05:07 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:05:08 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:05:08 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:05:08 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 11:05:08 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
2025-03-26 11:05:08 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 11:05:08 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:762)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:567)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:255)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: org.jwj.fo.interceptor [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:128)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:97)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:78)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:341)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:293)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	... 36 common frames omitted
2025-03-26 11:05:14 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 5132 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:05:14 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:05:14 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:05:15 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:05:15 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:05:15 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:05:15 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:05:15 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:05:15 - INFO - Starting service [Tomcat]
2025-03-26 11:05:15 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:05:15 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:05:15 - INFO - Root WebApplicationContext: initialization completed in 945 ms
2025-03-26 11:05:16 - INFO - HikariPool-1 - Starting...
2025-03-26 11:05:16 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:05:16 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:05:16 - DEBUG - ==> Parameters: 
2025-03-26 11:05:16 - DEBUG - <==      Total: 11
2025-03-26 11:05:17 - INFO - Redisson 3.13.6
2025-03-26 11:05:17 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:05:17 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:05:17 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:05:17 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:05:17 - INFO - Started FoodieOdysseyApplication in 3.201 seconds (JVM running for 3.631)
2025-03-26 11:06:07 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:06:07 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:06:07 - INFO - Completed initialization in 1 ms
2025-03-26 11:06:07 - INFO - 普通key被查询
2025-03-26 11:06:07 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:06:07 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:06:07 - DEBUG - <==      Total: 1
2025-03-26 11:06:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:06:07 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:06:07 - DEBUG - <==      Total: 1
2025-03-26 11:06:32 - INFO - 普通key被查询
2025-03-26 11:06:32 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:06:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:06:32 - DEBUG - <==      Total: 1
2025-03-26 11:06:53 - INFO - 普通key被查询
2025-03-26 11:06:53 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:06:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:06:53 - DEBUG - <==      Total: 1
2025-03-26 11:06:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:06:54 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:06:54 - DEBUG - <==      Total: 1
2025-03-26 11:07:05 - INFO - 普通key被查询
2025-03-26 11:07:05 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:07:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:07:05 - DEBUG - <==      Total: 1
2025-03-26 11:07:11 - INFO - 普通key被查询
2025-03-26 11:07:11 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:07:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:07:11 - DEBUG - <==      Total: 1
2025-03-26 11:07:15 - INFO - 普通key被查询
2025-03-26 11:07:15 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:07:15 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:07:15 - DEBUG - <==      Total: 1
2025-03-26 11:07:18 - INFO - 普通key被查询
2025-03-26 11:07:18 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:07:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:07:18 - DEBUG - <==      Total: 1
2025-03-26 11:08:07 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:08:07 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:08:07 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:08:07 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:08:07 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:08:10 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 23156 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:08:10 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:08:10 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:08:10 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:08:10 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:08:10 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:08:11 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:08:11 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:08:11 - INFO - Starting service [Tomcat]
2025-03-26 11:08:11 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:08:11 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:08:11 - INFO - Root WebApplicationContext: initialization completed in 952 ms
2025-03-26 11:08:11 - INFO - HikariPool-1 - Starting...
2025-03-26 11:08:12 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:08:12 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:08:12 - DEBUG - ==> Parameters: 
2025-03-26 11:08:12 - DEBUG - <==      Total: 11
2025-03-26 11:08:12 - INFO - Redisson 3.13.6
2025-03-26 11:08:12 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:08:12 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:08:13 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:08:13 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:08:13 - INFO - Started FoodieOdysseyApplication in 3.161 seconds (JVM running for 3.568)
2025-03-26 11:08:19 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:08:19 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:08:19 - INFO - Completed initialization in 0 ms
2025-03-26 11:08:19 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:08:19 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:08:19 - INFO - 普通key被查询
2025-03-26 11:08:19 - DEBUG - <==      Total: 2
2025-03-26 11:08:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:08:19 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:08:19 - DEBUG - <==      Total: 1
2025-03-26 11:09:36 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:09:36 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:09:36 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:09:36 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:09:36 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:09:39 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 29076 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:09:39 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:09:39 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:09:39 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:09:39 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:09:39 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 11:09:40 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:09:40 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:09:40 - INFO - Starting service [Tomcat]
2025-03-26 11:09:40 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:09:40 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:09:40 - INFO - Root WebApplicationContext: initialization completed in 941 ms
2025-03-26 11:09:40 - INFO - HikariPool-1 - Starting...
2025-03-26 11:09:40 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:09:40 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:09:40 - DEBUG - ==> Parameters: 
2025-03-26 11:09:40 - DEBUG - <==      Total: 11
2025-03-26 11:09:41 - INFO - Redisson 3.13.6
2025-03-26 11:09:41 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:09:41 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:09:42 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:09:42 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:09:42 - INFO - Started FoodieOdysseyApplication in 3.138 seconds (JVM running for 3.549)
2025-03-26 11:10:14 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:10:14 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:10:14 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:10:14 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:10:14 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:10:17 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 23724 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:10:17 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:10:17 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:10:18 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:10:18 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:10:18 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 11:10:18 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:10:18 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:10:18 - INFO - Starting service [Tomcat]
2025-03-26 11:10:18 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:10:18 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:10:18 - INFO - Root WebApplicationContext: initialization completed in 947 ms
2025-03-26 11:10:19 - INFO - HikariPool-1 - Starting...
2025-03-26 11:10:19 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:10:19 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:10:19 - DEBUG - ==> Parameters: 
2025-03-26 11:10:19 - DEBUG - <==      Total: 11
2025-03-26 11:10:20 - INFO - Redisson 3.13.6
2025-03-26 11:10:20 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:10:20 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:10:20 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:10:20 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:10:20 - INFO - Started FoodieOdysseyApplication in 3.259 seconds (JVM running for 3.682)
2025-03-26 11:10:23 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:10:23 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:10:23 - INFO - Completed initialization in 1 ms
2025-03-26 11:10:23 - INFO - 刷新token有效期耗时: $118
2025-03-26 11:10:23 - INFO - 刷新token有效期耗时: $118
2025-03-26 11:10:23 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:10:23 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:23 - INFO - 普通key被查询
2025-03-26 11:10:23 - DEBUG - <==      Total: 2
2025-03-26 11:10:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:10:23 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:23 - DEBUG - <==      Total: 1
2025-03-26 11:10:36 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:10:36 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:10:36 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:10:36 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:10:36 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:10:39 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 4788 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:10:39 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:10:39 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:10:40 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:10:40 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:10:40 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 11:10:40 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:10:40 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:10:40 - INFO - Starting service [Tomcat]
2025-03-26 11:10:40 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:10:40 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:10:40 - INFO - Root WebApplicationContext: initialization completed in 946 ms
2025-03-26 11:10:41 - INFO - HikariPool-1 - Starting...
2025-03-26 11:10:41 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:10:41 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:10:41 - DEBUG - ==> Parameters: 
2025-03-26 11:10:41 - DEBUG - <==      Total: 11
2025-03-26 11:10:42 - INFO - Redisson 3.13.6
2025-03-26 11:10:42 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:10:42 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:10:42 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:10:42 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:10:42 - INFO - Started FoodieOdysseyApplication in 3.232 seconds (JVM running for 3.641)
2025-03-26 11:10:47 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:10:47 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:10:47 - INFO - Completed initialization in 1 ms
2025-03-26 11:10:47 - INFO - 刷新token有效期耗时: 92
2025-03-26 11:10:47 - INFO - 刷新token有效期耗时: 92
2025-03-26 11:10:47 - INFO - 普通key被查询
2025-03-26 11:10:47 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:10:47 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:47 - DEBUG - <==      Total: 2
2025-03-26 11:10:52 - INFO - 刷新token有效期耗时: 41
2025-03-26 11:10:52 - INFO - 刷新token有效期耗时: 41
2025-03-26 11:10:52 - INFO - 普通key被查询
2025-03-26 11:10:52 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:10:52 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:52 - DEBUG - <==      Total: 2
2025-03-26 11:10:55 - INFO - 刷新token有效期耗时: 50
2025-03-26 11:10:55 - INFO - 刷新token有效期耗时: 50
2025-03-26 11:10:55 - INFO - 普通key被查询
2025-03-26 11:10:55 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:10:55 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:55 - DEBUG - <==      Total: 2
2025-03-26 11:10:55 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:10:55 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:10:55 - DEBUG - <==      Total: 1
2025-03-26 11:11:04 - INFO - 刷新token有效期耗时: 60
2025-03-26 11:11:04 - INFO - 刷新token有效期耗时: 60
2025-03-26 11:11:04 - INFO - 普通key被查询
2025-03-26 11:11:04 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:11:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:11:04 - DEBUG - <==      Total: 3
2025-03-26 11:11:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:11:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:11:04 - DEBUG - <==      Total: 1
2025-03-26 11:14:12 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:14:12 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:14:12 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:14:12 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:14:12 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:14:15 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21500 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:14:15 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:14:15 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:14:16 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:14:16 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:14:16 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:14:16 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:14:16 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:14:16 - INFO - Starting service [Tomcat]
2025-03-26 11:14:16 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:14:16 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:14:16 - INFO - Root WebApplicationContext: initialization completed in 991 ms
2025-03-26 11:14:17 - INFO - HikariPool-1 - Starting...
2025-03-26 11:14:17 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:14:17 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:14:17 - DEBUG - ==> Parameters: 
2025-03-26 11:14:17 - DEBUG - <==      Total: 11
2025-03-26 11:14:18 - INFO - Redisson 3.13.6
2025-03-26 11:14:18 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:14:18 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:14:18 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:14:18 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:14:18 - INFO - Started FoodieOdysseyApplication in 3.253 seconds (JVM running for 3.665)
2025-03-26 11:14:32 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:14:32 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:14:32 - INFO - Completed initialization in 1 ms
2025-03-26 11:14:32 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:14:32 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:14:32 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:14:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:14:32 - INFO - 普通key被查询
2025-03-26 11:14:32 - DEBUG - <==      Total: 1
2025-03-26 11:14:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:14:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:14:32 - DEBUG - <==      Total: 1
2025-03-26 11:14:33 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:14:33 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:14:33 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:14:33 - DEBUG - <==      Total: 3
2025-03-26 11:14:33 - INFO - 刷新token有效期耗时: 49
2025-03-26 11:14:33 - INFO - 普通key被查询
2025-03-26 11:14:33 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:14:33 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:14:33 - DEBUG - <==      Total: 1
2025-03-26 11:14:39 - INFO - 刷新token有效期耗时: 41
2025-03-26 11:14:39 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:14:39 - INFO - 普通key被查询
2025-03-26 11:14:39 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:14:39 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:14:39 - DEBUG - <==      Total: 2
2025-03-26 11:14:39 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:14:39 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:14:39 - DEBUG - <==      Total: 1
2025-03-26 11:15:21 - INFO - 刷新token有效期耗时: 42
2025-03-26 11:15:21 - INFO - 刷新token有效期耗时: 42
2025-03-26 11:15:21 - INFO - 普通key被查询
2025-03-26 11:15:21 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:15:21 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:15:21 - DEBUG - <==      Total: 3
2025-03-26 11:15:21 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:15:21 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:15:21 - DEBUG - <==      Total: 1
2025-03-26 11:15:22 - INFO - 刷新token有效期耗时: 49
2025-03-26 11:15:28 - INFO - 刷新token有效期耗时: 43
2025-03-26 11:15:28 - INFO - 普通key被查询
2025-03-26 11:15:28 - INFO - 刷新token有效期耗时: 44
2025-03-26 11:15:28 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:15:28 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:15:28 - DEBUG - <==      Total: 3
2025-03-26 11:15:44 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-26 11:15:44 - DEBUG - ==> Parameters: 1(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-26 11:15:44 - DEBUG - <==    Updates: 1
2025-03-26 11:15:44 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-26 11:15:44 - DEBUG - ==> Parameters: 21(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-23T18:03:23(LocalDateTime)
2025-03-26 11:15:44 - DEBUG - <==    Updates: 1
2025-03-26 11:15:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-26 11:15:50 - DEBUG - ==> Parameters: 1(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-26 11:15:50 - DEBUG - <==    Updates: 1
2025-03-26 11:15:50 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-26 11:15:50 - DEBUG - ==> Parameters: 22(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-26 11:15:50 - DEBUG - <==    Updates: 1
2025-03-26 11:15:52 - INFO - 刷新token有效期耗时: 50
2025-03-26 11:15:52 - INFO - 刷新token有效期耗时: 50
2025-03-26 11:15:52 - INFO - 普通key被查询
2025-03-26 11:15:52 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:15:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:15:52 - DEBUG - <==      Total: 5
2025-03-26 11:15:52 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:15:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:15:52 - DEBUG - <==      Total: 1
2025-03-26 11:15:54 - INFO - 刷新token有效期耗时: 42
2025-03-26 11:15:59 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:15:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:15:59 - DEBUG - ==> Parameters: 1011(Long), 22(Long)
2025-03-26 11:15:59 - DEBUG - <==      Total: 1
2025-03-26 11:15:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:15:59 - DEBUG - ==> Parameters: 22(Long), 0(Integer)
2025-03-26 11:15:59 - DEBUG - <==    Updates: 1
2025-03-26 11:15:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:15:59 - DEBUG - ==> Parameters: 31345354226008067(Long), 1011(Long), 22(Long)
2025-03-26 11:15:59 - DEBUG - <==    Updates: 1
2025-03-26 11:16:14 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:16:14 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:16:14 - INFO - 普通key被查询
2025-03-26 11:16:14 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:16:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:16:14 - DEBUG - <==      Total: 5
2025-03-26 11:16:22 - INFO - 刷新token有效期耗时: 47
2025-03-26 11:16:22 - INFO - 刷新token有效期耗时: 47
2025-03-26 11:16:22 - INFO - 普通key被查询
2025-03-26 11:16:22 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:16:22 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:16:22 - DEBUG - <==      Total: 5
2025-03-26 11:21:25 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:21:25 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:21:25 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:21:25 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:21:25 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:21:29 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 17316 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:21:29 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:21:29 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:21:29 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:21:29 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:21:29 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 11:21:30 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:21:30 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:21:30 - INFO - Starting service [Tomcat]
2025-03-26 11:21:30 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:21:30 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:21:30 - INFO - Root WebApplicationContext: initialization completed in 958 ms
2025-03-26 11:21:30 - INFO - HikariPool-1 - Starting...
2025-03-26 11:21:30 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:21:30 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:21:30 - DEBUG - ==> Parameters: 
2025-03-26 11:21:30 - DEBUG - <==      Total: 13
2025-03-26 11:21:31 - INFO - Redisson 3.13.6
2025-03-26 11:21:31 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:21:31 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:21:32 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:21:32 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:21:32 - INFO - Started FoodieOdysseyApplication in 3.214 seconds (JVM running for 3.62)
2025-03-26 11:21:37 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:21:37 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:21:37 - INFO - Completed initialization in 1 ms
2025-03-26 11:21:37 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:37 - INFO - 普通key被查询
2025-03-26 11:21:37 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:37 - DEBUG - <==      Total: 5
2025-03-26 11:21:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:21:37 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:37 - DEBUG - <==      Total: 1
2025-03-26 11:21:39 - INFO - 普通key被查询
2025-03-26 11:21:39 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:39 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:39 - DEBUG - <==      Total: 5
2025-03-26 11:21:40 - INFO - 普通key被查询
2025-03-26 11:21:40 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:40 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:40 - DEBUG - <==      Total: 5
2025-03-26 11:21:42 - INFO - 普通key被查询
2025-03-26 11:21:42 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:42 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:42 - DEBUG - <==      Total: 5
2025-03-26 11:21:43 - INFO - 普通key被查询
2025-03-26 11:21:43 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:21:43 - DEBUG - <==      Total: 5
2025-03-26 11:21:46 - INFO - 普通key被查询
2025-03-26 11:21:46 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:21:46 - DEBUG - <==      Total: 1
2025-03-26 11:21:46 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:21:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:21:46 - DEBUG - <==      Total: 1
2025-03-26 11:21:48 - INFO - 普通key被查询
2025-03-26 11:21:48 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:21:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:21:48 - DEBUG - <==      Total: 1
2025-03-26 11:22:10 - INFO - 普通key被查询
2025-03-26 11:22:10 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:22:10 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:22:10 - DEBUG - <==      Total: 1
2025-03-26 11:22:10 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:22:10 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:22:10 - DEBUG - <==      Total: 1
2025-03-26 11:22:13 - INFO - 普通key被查询
2025-03-26 11:22:13 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:22:13 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:22:13 - DEBUG - <==      Total: 1
2025-03-26 11:22:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 11:22:15 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 11:22:15 - DEBUG - <==      Total: 1
2025-03-26 11:22:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 11:22:15 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 11:22:15 - DEBUG - <==      Total: 5
2025-03-26 11:22:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 11:22:17 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 11:22:17 - DEBUG - <==      Total: 1
2025-03-26 11:22:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 11:22:17 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 11:22:17 - DEBUG - <==      Total: 5
2025-03-26 11:22:19 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 11:22:19 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 11:22:19 - DEBUG - <==      Total: 1
2025-03-26 11:22:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 11:22:19 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 11:22:19 - DEBUG - <==      Total: 5
2025-03-26 11:22:20 - INFO - 普通key被查询
2025-03-26 11:22:20 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:22:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:22:20 - DEBUG - <==      Total: 0
2025-03-26 11:22:20 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:22:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:22:20 - DEBUG - <==      Total: 1
2025-03-26 11:22:22 - INFO - 普通key被查询
2025-03-26 11:22:22 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:22:22 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:22:22 - DEBUG - <==      Total: 0
2025-03-26 11:22:32 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:22:32 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:22:32 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:22:32 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:22:32 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:22:53 - INFO - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.jwj.fo.LoginTest], using SpringBootContextLoader
2025-03-26 11:22:53 - INFO - Could not detect default resource locations for test class [org.jwj.fo.LoginTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2025-03-26 11:22:53 - INFO - Could not detect default configuration classes for test class [org.jwj.fo.LoginTest]: LoginTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-26 11:22:53 - INFO - Found @SpringBootConfiguration org.jwj.fo.FoodieOdysseyApplication for test class org.jwj.fo.LoginTest
2025-03-26 11:22:53 - INFO - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2025-03-26 11:22:53 - INFO - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@319bc845, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c5474f5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2f4205be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54e22bdd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd418e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544820b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b98a075, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e61d218, org.springframework.test.context.event.EventPublishingTestExecutionListener@3569fc08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@20b12f8a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e84a8e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e554a3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54a67a45, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7d42c224, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56aaaecd]
2025-03-26 11:22:53 - INFO - Starting LoginTest using Java 17.0.12 on jwj with PID 19804 (started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:22:53 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:22:53 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:22:54 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:22:54 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:22:54 - INFO - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-03-26 11:22:55 - INFO - HikariPool-1 - Starting...
2025-03-26 11:22:56 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:22:56 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:22:56 - DEBUG - ==> Parameters: 
2025-03-26 11:22:56 - DEBUG - <==      Total: 13
2025-03-26 11:22:57 - INFO - Redisson 3.13.6
2025-03-26 11:22:57 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:22:58 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:23:00 - INFO - Started LoginTest in 6.564 seconds (JVM running for 7.543)
2025-03-26 11:23:00 - DEBUG - send success: 256943
2025-03-26 11:23:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:00 - DEBUG - ==> Parameters: 13091474623(String)
2025-03-26 11:23:00 - DEBUG - <==      Total: 0
2025-03-26 11:23:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:00 - DEBUG - ==> Parameters: 13091474623(String), foodie_06jc80ngx8(String), (String)
2025-03-26 11:23:00 - DEBUG - <==    Updates: 1
2025-03-26 11:23:01 - DEBUG - send success: 972547
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 13129795803(String)
2025-03-26 11:23:01 - DEBUG - <==      Total: 0
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 13129795803(String), foodie_gqmyrucldr(String), (String)
2025-03-26 11:23:01 - DEBUG - <==    Updates: 1
2025-03-26 11:23:01 - DEBUG - send success: 897222
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 18177847732(String)
2025-03-26 11:23:01 - DEBUG - <==      Total: 0
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 18177847732(String), foodie_fp7nnk5jb9(String), (String)
2025-03-26 11:23:01 - DEBUG - <==    Updates: 1
2025-03-26 11:23:01 - DEBUG - send success: 178704
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 13975573147(String)
2025-03-26 11:23:01 - DEBUG - <==      Total: 0
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 13975573147(String), foodie_jzfs9j475d(String), (String)
2025-03-26 11:23:01 - DEBUG - <==    Updates: 1
2025-03-26 11:23:01 - DEBUG - send success: 699711
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 17739876795(String)
2025-03-26 11:23:01 - DEBUG - <==      Total: 0
2025-03-26 11:23:01 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:01 - DEBUG - ==> Parameters: 17739876795(String), foodie_rts0194z5p(String), (String)
2025-03-26 11:23:01 - DEBUG - <==    Updates: 1
2025-03-26 11:23:02 - DEBUG - send success: 427110
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 13309720848(String)
2025-03-26 11:23:02 - DEBUG - <==      Total: 0
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 13309720848(String), foodie_qgjjhd54t4(String), (String)
2025-03-26 11:23:02 - DEBUG - <==    Updates: 1
2025-03-26 11:23:02 - DEBUG - send success: 345030
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 18061591772(String)
2025-03-26 11:23:02 - DEBUG - <==      Total: 0
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 18061591772(String), foodie_62nxok2w2v(String), (String)
2025-03-26 11:23:02 - DEBUG - <==    Updates: 1
2025-03-26 11:23:02 - DEBUG - send success: 835026
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 15200878683(String)
2025-03-26 11:23:02 - DEBUG - <==      Total: 0
2025-03-26 11:23:02 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:02 - DEBUG - ==> Parameters: 15200878683(String), foodie_pkwp1qsfhh(String), (String)
2025-03-26 11:23:02 - DEBUG - <==    Updates: 1
2025-03-26 11:23:03 - DEBUG - send success: 005416
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15911643850(String)
2025-03-26 11:23:03 - DEBUG - <==      Total: 0
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15911643850(String), foodie_sjikg1fklx(String), (String)
2025-03-26 11:23:03 - DEBUG - <==    Updates: 1
2025-03-26 11:23:03 - DEBUG - send success: 512338
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 18702245931(String)
2025-03-26 11:23:03 - DEBUG - <==      Total: 0
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 18702245931(String), foodie_7fv2kzaxso(String), (String)
2025-03-26 11:23:03 - DEBUG - <==    Updates: 1
2025-03-26 11:23:03 - DEBUG - send success: 922830
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15248733685(String)
2025-03-26 11:23:03 - DEBUG - <==      Total: 0
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15248733685(String), foodie_wzcgppy2lf(String), (String)
2025-03-26 11:23:03 - DEBUG - <==    Updates: 1
2025-03-26 11:23:03 - DEBUG - send success: 739006
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15100456575(String)
2025-03-26 11:23:03 - DEBUG - <==      Total: 0
2025-03-26 11:23:03 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:03 - DEBUG - ==> Parameters: 15100456575(String), foodie_lkpngnk24m(String), (String)
2025-03-26 11:23:04 - DEBUG - <==    Updates: 1
2025-03-26 11:23:04 - DEBUG - send success: 510303
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 15022777824(String)
2025-03-26 11:23:04 - DEBUG - <==      Total: 0
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 15022777824(String), foodie_nj6ks0ls3u(String), (String)
2025-03-26 11:23:04 - DEBUG - <==    Updates: 1
2025-03-26 11:23:04 - DEBUG - send success: 659310
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 15140771617(String)
2025-03-26 11:23:04 - DEBUG - <==      Total: 0
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 15140771617(String), foodie_9xspmsdylq(String), (String)
2025-03-26 11:23:04 - DEBUG - <==    Updates: 1
2025-03-26 11:23:04 - DEBUG - send success: 504711
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 13887014167(String)
2025-03-26 11:23:04 - DEBUG - <==      Total: 0
2025-03-26 11:23:04 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:04 - DEBUG - ==> Parameters: 13887014167(String), foodie_nm05xycl9a(String), (String)
2025-03-26 11:23:04 - DEBUG - <==    Updates: 1
2025-03-26 11:23:05 - DEBUG - send success: 381632
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 18217926765(String)
2025-03-26 11:23:05 - DEBUG - <==      Total: 0
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 18217926765(String), foodie_omdg3lwstv(String), (String)
2025-03-26 11:23:05 - DEBUG - <==    Updates: 1
2025-03-26 11:23:05 - DEBUG - send success: 717077
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 17645556911(String)
2025-03-26 11:23:05 - DEBUG - <==      Total: 0
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 17645556911(String), foodie_plu3qvr4cd(String), (String)
2025-03-26 11:23:05 - DEBUG - <==    Updates: 1
2025-03-26 11:23:05 - DEBUG - send success: 893892
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 14967854164(String)
2025-03-26 11:23:05 - DEBUG - <==      Total: 0
2025-03-26 11:23:05 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:05 - DEBUG - ==> Parameters: 14967854164(String), foodie_7xr91rm3bh(String), (String)
2025-03-26 11:23:05 - DEBUG - <==    Updates: 1
2025-03-26 11:23:06 - DEBUG - send success: 802382
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 17803893677(String)
2025-03-26 11:23:06 - DEBUG - <==      Total: 0
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 17803893677(String), foodie_40uwagqras(String), (String)
2025-03-26 11:23:06 - DEBUG - <==    Updates: 1
2025-03-26 11:23:06 - DEBUG - send success: 892460
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 13829781061(String)
2025-03-26 11:23:06 - DEBUG - <==      Total: 0
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 13829781061(String), foodie_wylrdj8gng(String), (String)
2025-03-26 11:23:06 - DEBUG - <==    Updates: 1
2025-03-26 11:23:06 - DEBUG - send success: 110139
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 18255317645(String)
2025-03-26 11:23:06 - DEBUG - <==      Total: 0
2025-03-26 11:23:06 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:06 - DEBUG - ==> Parameters: 18255317645(String), foodie_125lhtrhqm(String), (String)
2025-03-26 11:23:06 - DEBUG - <==    Updates: 1
2025-03-26 11:23:07 - DEBUG - send success: 014278
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 13149767067(String)
2025-03-26 11:23:07 - DEBUG - <==      Total: 0
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 13149767067(String), foodie_9fmulf1g4w(String), (String)
2025-03-26 11:23:07 - DEBUG - <==    Updates: 1
2025-03-26 11:23:07 - DEBUG - send success: 492444
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 13347312945(String)
2025-03-26 11:23:07 - DEBUG - <==      Total: 0
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 13347312945(String), foodie_bhnjg4e3wo(String), (String)
2025-03-26 11:23:07 - DEBUG - <==    Updates: 1
2025-03-26 11:23:07 - DEBUG - send success: 534935
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 15631491328(String)
2025-03-26 11:23:07 - DEBUG - <==      Total: 0
2025-03-26 11:23:07 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:07 - DEBUG - ==> Parameters: 15631491328(String), foodie_niiwqyiyl9(String), (String)
2025-03-26 11:23:07 - DEBUG - <==    Updates: 1
2025-03-26 11:23:08 - DEBUG - send success: 117465
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 18834110702(String)
2025-03-26 11:23:08 - DEBUG - <==      Total: 0
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 18834110702(String), foodie_98a3ff9414(String), (String)
2025-03-26 11:23:08 - DEBUG - <==    Updates: 1
2025-03-26 11:23:08 - DEBUG - send success: 659103
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 17887583333(String)
2025-03-26 11:23:08 - DEBUG - <==      Total: 0
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 17887583333(String), foodie_818iel014t(String), (String)
2025-03-26 11:23:08 - DEBUG - <==    Updates: 1
2025-03-26 11:23:08 - DEBUG - send success: 448514
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 18074682531(String)
2025-03-26 11:23:08 - DEBUG - <==      Total: 0
2025-03-26 11:23:08 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:08 - DEBUG - ==> Parameters: 18074682531(String), foodie_3cymg6yc76(String), (String)
2025-03-26 11:23:08 - DEBUG - <==    Updates: 1
2025-03-26 11:23:09 - DEBUG - send success: 614488
2025-03-26 11:23:09 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:09 - DEBUG - ==> Parameters: 13779271092(String)
2025-03-26 11:23:09 - DEBUG - <==      Total: 0
2025-03-26 11:23:09 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:09 - DEBUG - ==> Parameters: 13779271092(String), foodie_w32ziu75ky(String), (String)
2025-03-26 11:23:09 - DEBUG - <==    Updates: 1
2025-03-26 11:23:09 - DEBUG - send success: 364552
2025-03-26 11:23:09 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:09 - DEBUG - ==> Parameters: 14964598110(String)
2025-03-26 11:23:09 - DEBUG - <==      Total: 0
2025-03-26 11:23:09 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:09 - DEBUG - ==> Parameters: 14964598110(String), foodie_c6zoe07zjd(String), (String)
2025-03-26 11:23:09 - DEBUG - <==    Updates: 1
2025-03-26 11:23:09 - DEBUG - send success: 852960
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 15536699545(String)
2025-03-26 11:23:10 - DEBUG - <==      Total: 0
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 15536699545(String), foodie_mafuzdpvfa(String), (String)
2025-03-26 11:23:10 - DEBUG - <==    Updates: 1
2025-03-26 11:23:10 - DEBUG - send success: 161050
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 13831715968(String)
2025-03-26 11:23:10 - DEBUG - <==      Total: 0
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 13831715968(String), foodie_w2xwxecwt5(String), (String)
2025-03-26 11:23:10 - DEBUG - <==    Updates: 1
2025-03-26 11:23:10 - DEBUG - send success: 883095
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 17046226091(String)
2025-03-26 11:23:10 - DEBUG - <==      Total: 0
2025-03-26 11:23:10 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:10 - DEBUG - ==> Parameters: 17046226091(String), foodie_82ezdwag9h(String), (String)
2025-03-26 11:23:10 - DEBUG - <==    Updates: 1
2025-03-26 11:23:11 - DEBUG - send success: 127533
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 15845165231(String)
2025-03-26 11:23:11 - DEBUG - <==      Total: 0
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 15845165231(String), foodie_ucx2s5p4bo(String), (String)
2025-03-26 11:23:11 - DEBUG - <==    Updates: 1
2025-03-26 11:23:11 - DEBUG - send success: 031812
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 15838870732(String)
2025-03-26 11:23:11 - DEBUG - <==      Total: 0
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 15838870732(String), foodie_n0oqm62a3x(String), (String)
2025-03-26 11:23:11 - DEBUG - <==    Updates: 1
2025-03-26 11:23:11 - DEBUG - send success: 999222
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 13212497227(String)
2025-03-26 11:23:11 - DEBUG - <==      Total: 0
2025-03-26 11:23:11 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:11 - DEBUG - ==> Parameters: 13212497227(String), foodie_hjqcwc5jhn(String), (String)
2025-03-26 11:23:11 - DEBUG - <==    Updates: 1
2025-03-26 11:23:12 - DEBUG - send success: 553566
2025-03-26 11:23:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:12 - DEBUG - ==> Parameters: 15741048427(String)
2025-03-26 11:23:12 - DEBUG - <==      Total: 0
2025-03-26 11:23:12 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:12 - DEBUG - ==> Parameters: 15741048427(String), foodie_ufjqmwbs9h(String), (String)
2025-03-26 11:23:12 - DEBUG - <==    Updates: 1
2025-03-26 11:23:12 - DEBUG - send success: 548876
2025-03-26 11:23:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:12 - DEBUG - ==> Parameters: 18895249172(String)
2025-03-26 11:23:12 - DEBUG - <==      Total: 0
2025-03-26 11:23:12 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:12 - DEBUG - ==> Parameters: 18895249172(String), foodie_2xx5anfayd(String), (String)
2025-03-26 11:23:12 - DEBUG - <==    Updates: 1
2025-03-26 11:23:12 - DEBUG - send success: 726782
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 15113020411(String)
2025-03-26 11:23:13 - DEBUG - <==      Total: 0
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 15113020411(String), foodie_t17o13ubt8(String), (String)
2025-03-26 11:23:13 - DEBUG - <==    Updates: 1
2025-03-26 11:23:13 - DEBUG - send success: 845996
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 17079048544(String)
2025-03-26 11:23:13 - DEBUG - <==      Total: 0
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 17079048544(String), foodie_yz7w79vzuc(String), (String)
2025-03-26 11:23:13 - DEBUG - <==    Updates: 1
2025-03-26 11:23:13 - DEBUG - send success: 242338
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 15767099374(String)
2025-03-26 11:23:13 - DEBUG - <==      Total: 0
2025-03-26 11:23:13 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:13 - DEBUG - ==> Parameters: 15767099374(String), foodie_mp1ibbs6nl(String), (String)
2025-03-26 11:23:13 - DEBUG - <==    Updates: 1
2025-03-26 11:23:14 - DEBUG - send success: 413031
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 13952263489(String)
2025-03-26 11:23:14 - DEBUG - <==      Total: 0
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 13952263489(String), foodie_8fw20sc55p(String), (String)
2025-03-26 11:23:14 - DEBUG - <==    Updates: 1
2025-03-26 11:23:14 - DEBUG - send success: 347715
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 15520452091(String)
2025-03-26 11:23:14 - DEBUG - <==      Total: 0
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 15520452091(String), foodie_kfymrp8vr5(String), (String)
2025-03-26 11:23:14 - DEBUG - <==    Updates: 1
2025-03-26 11:23:14 - DEBUG - send success: 785466
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 15607077880(String)
2025-03-26 11:23:14 - DEBUG - <==      Total: 0
2025-03-26 11:23:14 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:14 - DEBUG - ==> Parameters: 15607077880(String), foodie_nci1ihi8zt(String), (String)
2025-03-26 11:23:14 - DEBUG - <==    Updates: 1
2025-03-26 11:23:15 - DEBUG - send success: 835789
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 15703392841(String)
2025-03-26 11:23:15 - DEBUG - <==      Total: 0
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 15703392841(String), foodie_i3vict4hk5(String), (String)
2025-03-26 11:23:15 - DEBUG - <==    Updates: 1
2025-03-26 11:23:15 - DEBUG - send success: 267205
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 17072255616(String)
2025-03-26 11:23:15 - DEBUG - <==      Total: 0
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 17072255616(String), foodie_cxiwi7fdev(String), (String)
2025-03-26 11:23:15 - DEBUG - <==    Updates: 1
2025-03-26 11:23:15 - DEBUG - send success: 009929
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 18288876414(String)
2025-03-26 11:23:15 - DEBUG - <==      Total: 0
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 18288876414(String), foodie_tl2v01bxbv(String), (String)
2025-03-26 11:23:15 - DEBUG - <==    Updates: 1
2025-03-26 11:23:15 - DEBUG - send success: 709084
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 17316924175(String)
2025-03-26 11:23:15 - DEBUG - <==      Total: 0
2025-03-26 11:23:15 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:15 - DEBUG - ==> Parameters: 17316924175(String), foodie_c6pnsa631x(String), (String)
2025-03-26 11:23:15 - DEBUG - <==    Updates: 1
2025-03-26 11:23:16 - DEBUG - send success: 446809
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 18765280608(String)
2025-03-26 11:23:16 - DEBUG - <==      Total: 0
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 18765280608(String), foodie_h32qhzbgl2(String), (String)
2025-03-26 11:23:16 - DEBUG - <==    Updates: 1
2025-03-26 11:23:16 - DEBUG - send success: 974439
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 15237188224(String)
2025-03-26 11:23:16 - DEBUG - <==      Total: 0
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 15237188224(String), foodie_lu0baxs7lw(String), (String)
2025-03-26 11:23:16 - DEBUG - <==    Updates: 1
2025-03-26 11:23:16 - DEBUG - send success: 571858
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 13096245284(String)
2025-03-26 11:23:16 - DEBUG - <==      Total: 0
2025-03-26 11:23:16 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:16 - DEBUG - ==> Parameters: 13096245284(String), foodie_3wlzh4u79d(String), (String)
2025-03-26 11:23:16 - DEBUG - <==    Updates: 1
2025-03-26 11:23:17 - DEBUG - send success: 358206
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 15510984130(String)
2025-03-26 11:23:17 - DEBUG - <==      Total: 0
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 15510984130(String), foodie_o33y6endon(String), (String)
2025-03-26 11:23:17 - DEBUG - <==    Updates: 1
2025-03-26 11:23:17 - DEBUG - send success: 685962
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 15766311723(String)
2025-03-26 11:23:17 - DEBUG - <==      Total: 0
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 15766311723(String), foodie_13k6gzkdgl(String), (String)
2025-03-26 11:23:17 - DEBUG - <==    Updates: 1
2025-03-26 11:23:17 - DEBUG - send success: 644377
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 13604812693(String)
2025-03-26 11:23:17 - DEBUG - <==      Total: 0
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 13604812693(String), foodie_udr5cy0zbt(String), (String)
2025-03-26 11:23:17 - DEBUG - <==    Updates: 1
2025-03-26 11:23:17 - DEBUG - send success: 413734
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 13415276731(String)
2025-03-26 11:23:17 - DEBUG - <==      Total: 0
2025-03-26 11:23:17 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:17 - DEBUG - ==> Parameters: 13415276731(String), foodie_weintpu288(String), (String)
2025-03-26 11:23:17 - DEBUG - <==    Updates: 1
2025-03-26 11:23:18 - DEBUG - send success: 248733
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 17865330756(String)
2025-03-26 11:23:18 - DEBUG - <==      Total: 0
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 17865330756(String), foodie_qgjqq3khxc(String), (String)
2025-03-26 11:23:18 - DEBUG - <==    Updates: 1
2025-03-26 11:23:18 - DEBUG - send success: 591327
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 19900902243(String)
2025-03-26 11:23:18 - DEBUG - <==      Total: 0
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 19900902243(String), foodie_3ux5ss1fxk(String), (String)
2025-03-26 11:23:18 - DEBUG - <==    Updates: 1
2025-03-26 11:23:18 - DEBUG - send success: 468001
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 13453689885(String)
2025-03-26 11:23:18 - DEBUG - <==      Total: 0
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 13453689885(String), foodie_9lrwszxxre(String), (String)
2025-03-26 11:23:18 - DEBUG - <==    Updates: 1
2025-03-26 11:23:18 - DEBUG - send success: 876568
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 17376949096(String)
2025-03-26 11:23:18 - DEBUG - <==      Total: 0
2025-03-26 11:23:18 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:18 - DEBUG - ==> Parameters: 17376949096(String), foodie_13cbvm0ca2(String), (String)
2025-03-26 11:23:18 - DEBUG - <==    Updates: 1
2025-03-26 11:23:19 - DEBUG - send success: 745452
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 18015613458(String)
2025-03-26 11:23:19 - DEBUG - <==      Total: 0
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 18015613458(String), foodie_m6jwchku8k(String), (String)
2025-03-26 11:23:19 - DEBUG - <==    Updates: 1
2025-03-26 11:23:19 - DEBUG - send success: 544651
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 15714436194(String)
2025-03-26 11:23:19 - DEBUG - <==      Total: 0
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 15714436194(String), foodie_s6v1gq9ebi(String), (String)
2025-03-26 11:23:19 - DEBUG - <==    Updates: 1
2025-03-26 11:23:19 - DEBUG - send success: 297050
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 19817436577(String)
2025-03-26 11:23:19 - DEBUG - <==      Total: 0
2025-03-26 11:23:19 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:19 - DEBUG - ==> Parameters: 19817436577(String), foodie_oxzl8iot1g(String), (String)
2025-03-26 11:23:19 - DEBUG - <==    Updates: 1
2025-03-26 11:23:20 - DEBUG - send success: 696632
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 14594445200(String)
2025-03-26 11:23:20 - DEBUG - <==      Total: 0
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 14594445200(String), foodie_e1m5att3ui(String), (String)
2025-03-26 11:23:20 - DEBUG - <==    Updates: 1
2025-03-26 11:23:20 - DEBUG - send success: 502780
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 14738215972(String)
2025-03-26 11:23:20 - DEBUG - <==      Total: 0
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 14738215972(String), foodie_80hcsrbciv(String), (String)
2025-03-26 11:23:20 - DEBUG - <==    Updates: 1
2025-03-26 11:23:20 - DEBUG - send success: 528467
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 18176515438(String)
2025-03-26 11:23:20 - DEBUG - <==      Total: 0
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 18176515438(String), foodie_hyrithwoq3(String), (String)
2025-03-26 11:23:20 - DEBUG - <==    Updates: 1
2025-03-26 11:23:20 - DEBUG - send success: 140385
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 18280943332(String)
2025-03-26 11:23:20 - DEBUG - <==      Total: 0
2025-03-26 11:23:20 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:20 - DEBUG - ==> Parameters: 18280943332(String), foodie_s26jb60lgn(String), (String)
2025-03-26 11:23:20 - DEBUG - <==    Updates: 1
2025-03-26 11:23:21 - DEBUG - send success: 293694
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 18573840452(String)
2025-03-26 11:23:21 - DEBUG - <==      Total: 0
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 18573840452(String), foodie_xgxp5fr7um(String), (String)
2025-03-26 11:23:21 - DEBUG - <==    Updates: 1
2025-03-26 11:23:21 - DEBUG - send success: 760199
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 13140263281(String)
2025-03-26 11:23:21 - DEBUG - <==      Total: 0
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 13140263281(String), foodie_wx704te2uv(String), (String)
2025-03-26 11:23:21 - DEBUG - <==    Updates: 1
2025-03-26 11:23:21 - DEBUG - send success: 604240
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 17093221413(String)
2025-03-26 11:23:21 - DEBUG - <==      Total: 0
2025-03-26 11:23:21 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:21 - DEBUG - ==> Parameters: 17093221413(String), foodie_yzlyg0hmpp(String), (String)
2025-03-26 11:23:21 - DEBUG - <==    Updates: 1
2025-03-26 11:23:21 - DEBUG - send success: 258965
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17622927930(String)
2025-03-26 11:23:22 - DEBUG - <==      Total: 0
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17622927930(String), foodie_p1je7x0eve(String), (String)
2025-03-26 11:23:22 - DEBUG - <==    Updates: 1
2025-03-26 11:23:22 - DEBUG - send success: 069581
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17658902564(String)
2025-03-26 11:23:22 - DEBUG - <==      Total: 0
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17658902564(String), foodie_ptjhmxj7w1(String), (String)
2025-03-26 11:23:22 - DEBUG - <==    Updates: 1
2025-03-26 11:23:22 - DEBUG - send success: 383804
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17643152843(String)
2025-03-26 11:23:22 - DEBUG - <==      Total: 0
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 17643152843(String), foodie_q2hpq27i0d(String), (String)
2025-03-26 11:23:22 - DEBUG - <==    Updates: 1
2025-03-26 11:23:22 - DEBUG - send success: 096042
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 14798211705(String)
2025-03-26 11:23:22 - DEBUG - <==      Total: 0
2025-03-26 11:23:22 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:22 - DEBUG - ==> Parameters: 14798211705(String), foodie_o0246czja5(String), (String)
2025-03-26 11:23:22 - DEBUG - <==    Updates: 1
2025-03-26 11:23:23 - DEBUG - send success: 929955
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 18590055297(String)
2025-03-26 11:23:23 - DEBUG - <==      Total: 0
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 18590055297(String), foodie_im6t92cf3s(String), (String)
2025-03-26 11:23:23 - DEBUG - <==    Updates: 1
2025-03-26 11:23:23 - DEBUG - send success: 953875
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 13145276997(String)
2025-03-26 11:23:23 - DEBUG - <==      Total: 0
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 13145276997(String), foodie_l7u4wexey6(String), (String)
2025-03-26 11:23:23 - DEBUG - <==    Updates: 1
2025-03-26 11:23:23 - DEBUG - send success: 209085
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 13902806802(String)
2025-03-26 11:23:23 - DEBUG - <==      Total: 0
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 13902806802(String), foodie_jve86xxmcr(String), (String)
2025-03-26 11:23:23 - DEBUG - <==    Updates: 1
2025-03-26 11:23:23 - DEBUG - send success: 560164
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 18315853426(String)
2025-03-26 11:23:23 - DEBUG - <==      Total: 0
2025-03-26 11:23:23 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:23 - DEBUG - ==> Parameters: 18315853426(String), foodie_oda00y1nel(String), (String)
2025-03-26 11:23:23 - DEBUG - <==    Updates: 1
2025-03-26 11:23:24 - DEBUG - send success: 915317
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 13782029965(String)
2025-03-26 11:23:24 - DEBUG - <==      Total: 0
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 13782029965(String), foodie_7h94ev7nm2(String), (String)
2025-03-26 11:23:24 - DEBUG - <==    Updates: 1
2025-03-26 11:23:24 - DEBUG - send success: 480954
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 14922806748(String)
2025-03-26 11:23:24 - DEBUG - <==      Total: 0
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 14922806748(String), foodie_tkmv32vog8(String), (String)
2025-03-26 11:23:24 - DEBUG - <==    Updates: 1
2025-03-26 11:23:24 - DEBUG - send success: 001160
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 13734954000(String)
2025-03-26 11:23:24 - DEBUG - <==      Total: 0
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 13734954000(String), foodie_p2e0obguif(String), (String)
2025-03-26 11:23:24 - DEBUG - <==    Updates: 1
2025-03-26 11:23:24 - DEBUG - send success: 893403
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 16606119231(String)
2025-03-26 11:23:24 - DEBUG - <==      Total: 0
2025-03-26 11:23:24 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:24 - DEBUG - ==> Parameters: 16606119231(String), foodie_mniqnq7f5e(String), (String)
2025-03-26 11:23:25 - DEBUG - <==    Updates: 1
2025-03-26 11:23:25 - DEBUG - send success: 332302
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 13512391139(String)
2025-03-26 11:23:25 - DEBUG - <==      Total: 0
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 13512391139(String), foodie_5k4ddra1m7(String), (String)
2025-03-26 11:23:25 - DEBUG - <==    Updates: 1
2025-03-26 11:23:25 - DEBUG - send success: 049821
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 15354944095(String)
2025-03-26 11:23:25 - DEBUG - <==      Total: 0
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 15354944095(String), foodie_eywpkiekm5(String), (String)
2025-03-26 11:23:25 - DEBUG - <==    Updates: 1
2025-03-26 11:23:25 - DEBUG - send success: 102838
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 13522513601(String)
2025-03-26 11:23:25 - DEBUG - <==      Total: 0
2025-03-26 11:23:25 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:25 - DEBUG - ==> Parameters: 13522513601(String), foodie_l2d5dm75nh(String), (String)
2025-03-26 11:23:25 - DEBUG - <==    Updates: 1
2025-03-26 11:23:26 - DEBUG - send success: 989570
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15086982541(String)
2025-03-26 11:23:26 - DEBUG - <==      Total: 0
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15086982541(String), foodie_6m3ujcena4(String), (String)
2025-03-26 11:23:26 - DEBUG - <==    Updates: 1
2025-03-26 11:23:26 - DEBUG - send success: 393550
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15878049916(String)
2025-03-26 11:23:26 - DEBUG - <==      Total: 0
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15878049916(String), foodie_4iyazv2x7e(String), (String)
2025-03-26 11:23:26 - DEBUG - <==    Updates: 1
2025-03-26 11:23:26 - DEBUG - send success: 698116
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15050264632(String)
2025-03-26 11:23:26 - DEBUG - <==      Total: 0
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 15050264632(String), foodie_n9e0d1euzw(String), (String)
2025-03-26 11:23:26 - DEBUG - <==    Updates: 1
2025-03-26 11:23:26 - DEBUG - send success: 415184
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 13389740151(String)
2025-03-26 11:23:26 - DEBUG - <==      Total: 0
2025-03-26 11:23:26 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:26 - DEBUG - ==> Parameters: 13389740151(String), foodie_xlljinwzn2(String), (String)
2025-03-26 11:23:26 - DEBUG - <==    Updates: 1
2025-03-26 11:23:27 - DEBUG - send success: 974196
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 16634741708(String)
2025-03-26 11:23:27 - DEBUG - <==      Total: 0
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 16634741708(String), foodie_hlklj1soj6(String), (String)
2025-03-26 11:23:27 - DEBUG - <==    Updates: 1
2025-03-26 11:23:27 - DEBUG - send success: 745042
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 15546635039(String)
2025-03-26 11:23:27 - DEBUG - <==      Total: 0
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 15546635039(String), foodie_gsmn8wqbq6(String), (String)
2025-03-26 11:23:27 - DEBUG - <==    Updates: 1
2025-03-26 11:23:27 - DEBUG - send success: 521826
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 17759708627(String)
2025-03-26 11:23:27 - DEBUG - <==      Total: 0
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 17759708627(String), foodie_u3k60efity(String), (String)
2025-03-26 11:23:27 - DEBUG - <==    Updates: 1
2025-03-26 11:23:27 - DEBUG - send success: 946871
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 17520009689(String)
2025-03-26 11:23:27 - DEBUG - <==      Total: 0
2025-03-26 11:23:27 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:27 - DEBUG - ==> Parameters: 17520009689(String), foodie_uz126d9zos(String), (String)
2025-03-26 11:23:27 - DEBUG - <==    Updates: 1
2025-03-26 11:23:28 - DEBUG - send success: 732581
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 13450247864(String)
2025-03-26 11:23:28 - DEBUG - <==      Total: 0
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 13450247864(String), foodie_tzqgu3jivh(String), (String)
2025-03-26 11:23:28 - DEBUG - <==    Updates: 1
2025-03-26 11:23:28 - DEBUG - send success: 582251
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 17565386530(String)
2025-03-26 11:23:28 - DEBUG - <==      Total: 0
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 17565386530(String), foodie_tp5zq4ek2l(String), (String)
2025-03-26 11:23:28 - DEBUG - <==    Updates: 1
2025-03-26 11:23:28 - DEBUG - send success: 037986
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 14723015070(String)
2025-03-26 11:23:28 - DEBUG - <==      Total: 0
2025-03-26 11:23:28 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:28 - DEBUG - ==> Parameters: 14723015070(String), foodie_58c35l0dsu(String), (String)
2025-03-26 11:23:28 - DEBUG - <==    Updates: 1
2025-03-26 11:23:28 - DEBUG - send success: 575530
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 18705605202(String)
2025-03-26 11:23:29 - DEBUG - <==      Total: 0
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 18705605202(String), foodie_zsivhbdw4z(String), (String)
2025-03-26 11:23:29 - DEBUG - <==    Updates: 1
2025-03-26 11:23:29 - DEBUG - send success: 158672
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 17353984120(String)
2025-03-26 11:23:29 - DEBUG - <==      Total: 0
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 17353984120(String), foodie_d1jlhj1rtu(String), (String)
2025-03-26 11:23:29 - DEBUG - <==    Updates: 1
2025-03-26 11:23:29 - DEBUG - send success: 794553
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 13600246815(String)
2025-03-26 11:23:29 - DEBUG - <==      Total: 0
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 13600246815(String), foodie_8knp09y2el(String), (String)
2025-03-26 11:23:29 - DEBUG - <==    Updates: 1
2025-03-26 11:23:29 - DEBUG - send success: 708049
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 15527064727(String)
2025-03-26 11:23:29 - DEBUG - <==      Total: 0
2025-03-26 11:23:29 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:29 - DEBUG - ==> Parameters: 15527064727(String), foodie_e9cwg275hv(String), (String)
2025-03-26 11:23:29 - DEBUG - <==    Updates: 1
2025-03-26 11:23:30 - DEBUG - send success: 440466
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 18467462825(String)
2025-03-26 11:23:30 - DEBUG - <==      Total: 0
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 18467462825(String), foodie_idkc4j91rd(String), (String)
2025-03-26 11:23:30 - DEBUG - <==    Updates: 1
2025-03-26 11:23:30 - DEBUG - send success: 661493
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 18635874817(String)
2025-03-26 11:23:30 - DEBUG - <==      Total: 0
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 18635874817(String), foodie_2moqisll5e(String), (String)
2025-03-26 11:23:30 - DEBUG - <==    Updates: 1
2025-03-26 11:23:30 - DEBUG - send success: 598031
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 13816613909(String)
2025-03-26 11:23:30 - DEBUG - <==      Total: 0
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 13816613909(String), foodie_905ljhtw4d(String), (String)
2025-03-26 11:23:30 - DEBUG - <==    Updates: 1
2025-03-26 11:23:30 - DEBUG - send success: 699954
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 15098760405(String)
2025-03-26 11:23:30 - DEBUG - <==      Total: 0
2025-03-26 11:23:30 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:30 - DEBUG - ==> Parameters: 15098760405(String), foodie_01syxp1z8q(String), (String)
2025-03-26 11:23:30 - DEBUG - <==    Updates: 1
2025-03-26 11:23:31 - DEBUG - send success: 063795
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 13300648045(String)
2025-03-26 11:23:31 - DEBUG - <==      Total: 0
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 13300648045(String), foodie_x45259h1ip(String), (String)
2025-03-26 11:23:31 - DEBUG - <==    Updates: 1
2025-03-26 11:23:31 - DEBUG - send success: 650096
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 18086705728(String)
2025-03-26 11:23:31 - DEBUG - <==      Total: 0
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 18086705728(String), foodie_z8s5dgjlli(String), (String)
2025-03-26 11:23:31 - DEBUG - <==    Updates: 1
2025-03-26 11:23:31 - DEBUG - send success: 888071
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 13778226010(String)
2025-03-26 11:23:31 - DEBUG - <==      Total: 0
2025-03-26 11:23:31 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:31 - DEBUG - ==> Parameters: 13778226010(String), foodie_urnetxdqwa(String), (String)
2025-03-26 11:23:31 - DEBUG - <==    Updates: 1
2025-03-26 11:23:31 - DEBUG - send success: 243317
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 14954963769(String)
2025-03-26 11:23:32 - DEBUG - <==      Total: 0
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 14954963769(String), foodie_0z8busss2b(String), (String)
2025-03-26 11:23:32 - DEBUG - <==    Updates: 1
2025-03-26 11:23:32 - DEBUG - send success: 425979
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 18240930670(String)
2025-03-26 11:23:32 - DEBUG - <==      Total: 0
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 18240930670(String), foodie_j9pqoiqepc(String), (String)
2025-03-26 11:23:32 - DEBUG - <==    Updates: 1
2025-03-26 11:23:32 - DEBUG - send success: 689019
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 13072270550(String)
2025-03-26 11:23:32 - DEBUG - <==      Total: 0
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 13072270550(String), foodie_hjon3ypeaq(String), (String)
2025-03-26 11:23:32 - DEBUG - <==    Updates: 1
2025-03-26 11:23:32 - DEBUG - send success: 424145
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 15579123063(String)
2025-03-26 11:23:32 - DEBUG - <==      Total: 0
2025-03-26 11:23:32 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:32 - DEBUG - ==> Parameters: 15579123063(String), foodie_vuai50kuze(String), (String)
2025-03-26 11:23:32 - DEBUG - <==    Updates: 1
2025-03-26 11:23:33 - DEBUG - send success: 157224
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 17587464916(String)
2025-03-26 11:23:33 - DEBUG - <==      Total: 0
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 17587464916(String), foodie_nrlb1god41(String), (String)
2025-03-26 11:23:33 - DEBUG - <==    Updates: 1
2025-03-26 11:23:33 - DEBUG - send success: 492052
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 14910438036(String)
2025-03-26 11:23:33 - DEBUG - <==      Total: 0
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 14910438036(String), foodie_0ul0pi0ltu(String), (String)
2025-03-26 11:23:33 - DEBUG - <==    Updates: 1
2025-03-26 11:23:33 - DEBUG - send success: 043703
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 13963266342(String)
2025-03-26 11:23:33 - DEBUG - <==      Total: 0
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 13963266342(String), foodie_p9ctz409pi(String), (String)
2025-03-26 11:23:33 - DEBUG - <==    Updates: 1
2025-03-26 11:23:33 - DEBUG - send success: 230751
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 18723681286(String)
2025-03-26 11:23:33 - DEBUG - <==      Total: 0
2025-03-26 11:23:33 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:33 - DEBUG - ==> Parameters: 18723681286(String), foodie_muuvyiciox(String), (String)
2025-03-26 11:23:33 - DEBUG - <==    Updates: 1
2025-03-26 11:23:34 - DEBUG - send success: 997788
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 14787429782(String)
2025-03-26 11:23:34 - DEBUG - <==      Total: 0
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 14787429782(String), foodie_xk3v3b31qd(String), (String)
2025-03-26 11:23:34 - DEBUG - <==    Updates: 1
2025-03-26 11:23:34 - DEBUG - send success: 152855
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 15512828240(String)
2025-03-26 11:23:34 - DEBUG - <==      Total: 0
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 15512828240(String), foodie_q4ashtlp6k(String), (String)
2025-03-26 11:23:34 - DEBUG - <==    Updates: 1
2025-03-26 11:23:34 - DEBUG - send success: 756060
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 18730796044(String)
2025-03-26 11:23:34 - DEBUG - <==      Total: 0
2025-03-26 11:23:34 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:34 - DEBUG - ==> Parameters: 18730796044(String), foodie_3ojpupqcmy(String), (String)
2025-03-26 11:23:34 - DEBUG - <==    Updates: 1
2025-03-26 11:23:34 - DEBUG - send success: 716880
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 18722818240(String)
2025-03-26 11:23:35 - DEBUG - <==      Total: 0
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 18722818240(String), foodie_6wf22sxfsh(String), (String)
2025-03-26 11:23:35 - DEBUG - <==    Updates: 1
2025-03-26 11:23:35 - DEBUG - send success: 918818
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 15738998073(String)
2025-03-26 11:23:35 - DEBUG - <==      Total: 0
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 15738998073(String), foodie_cfb9easuru(String), (String)
2025-03-26 11:23:35 - DEBUG - <==    Updates: 1
2025-03-26 11:23:35 - DEBUG - send success: 412858
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 19959799571(String)
2025-03-26 11:23:35 - DEBUG - <==      Total: 0
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 19959799571(String), foodie_8j3yswq3ku(String), (String)
2025-03-26 11:23:35 - DEBUG - <==    Updates: 1
2025-03-26 11:23:35 - DEBUG - send success: 186630
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 17132136514(String)
2025-03-26 11:23:35 - DEBUG - <==      Total: 0
2025-03-26 11:23:35 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:35 - DEBUG - ==> Parameters: 17132136514(String), foodie_9ck2qt09h3(String), (String)
2025-03-26 11:23:35 - DEBUG - <==    Updates: 1
2025-03-26 11:23:36 - DEBUG - send success: 605033
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18789684028(String)
2025-03-26 11:23:36 - DEBUG - <==      Total: 0
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18789684028(String), foodie_rrvutstr38(String), (String)
2025-03-26 11:23:36 - DEBUG - <==    Updates: 1
2025-03-26 11:23:36 - DEBUG - send success: 181680
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18591616523(String)
2025-03-26 11:23:36 - DEBUG - <==      Total: 0
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18591616523(String), foodie_bcgg62qyq9(String), (String)
2025-03-26 11:23:36 - DEBUG - <==    Updates: 1
2025-03-26 11:23:36 - DEBUG - send success: 582627
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18425902990(String)
2025-03-26 11:23:36 - DEBUG - <==      Total: 0
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18425902990(String), foodie_bgq4gfdz5q(String), (String)
2025-03-26 11:23:36 - DEBUG - <==    Updates: 1
2025-03-26 11:23:36 - DEBUG - send success: 557486
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18582511620(String)
2025-03-26 11:23:36 - DEBUG - <==      Total: 0
2025-03-26 11:23:36 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:36 - DEBUG - ==> Parameters: 18582511620(String), foodie_rdsotqy21r(String), (String)
2025-03-26 11:23:36 - DEBUG - <==    Updates: 1
2025-03-26 11:23:37 - DEBUG - send success: 833186
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 18819271145(String)
2025-03-26 11:23:37 - DEBUG - <==      Total: 0
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 18819271145(String), foodie_ved48yps4r(String), (String)
2025-03-26 11:23:37 - DEBUG - <==    Updates: 1
2025-03-26 11:23:37 - DEBUG - send success: 629193
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 14992065901(String)
2025-03-26 11:23:37 - DEBUG - <==      Total: 0
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 14992065901(String), foodie_54umwi38cp(String), (String)
2025-03-26 11:23:37 - DEBUG - <==    Updates: 1
2025-03-26 11:23:37 - DEBUG - send success: 848784
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 13818593371(String)
2025-03-26 11:23:37 - DEBUG - <==      Total: 0
2025-03-26 11:23:37 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 11:23:37 - DEBUG - ==> Parameters: 13818593371(String), foodie_hbs4sff98q(String), (String)
2025-03-26 11:23:37 - DEBUG - <==    Updates: 1
2025-03-26 11:23:38 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:23:38 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:23:38 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:23:38 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:23:38 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:23:51 - INFO - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.jwj.fo.LoginTest], using SpringBootContextLoader
2025-03-26 11:23:51 - INFO - Could not detect default resource locations for test class [org.jwj.fo.LoginTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2025-03-26 11:23:51 - INFO - Could not detect default configuration classes for test class [org.jwj.fo.LoginTest]: LoginTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-26 11:23:51 - INFO - Found @SpringBootConfiguration org.jwj.fo.FoodieOdysseyApplication for test class org.jwj.fo.LoginTest
2025-03-26 11:23:51 - INFO - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2025-03-26 11:23:51 - INFO - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@319bc845, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c5474f5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2f4205be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54e22bdd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd418e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544820b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b98a075, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e61d218, org.springframework.test.context.event.EventPublishingTestExecutionListener@3569fc08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@20b12f8a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e84a8e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e554a3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54a67a45, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7d42c224, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56aaaecd]
2025-03-26 11:23:51 - INFO - Starting LoginTest using Java 17.0.12 on jwj with PID 28688 (started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:23:51 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:23:51 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:23:52 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:23:52 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:23:52 - INFO - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-03-26 11:23:53 - INFO - HikariPool-1 - Starting...
2025-03-26 11:23:53 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:23:53 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:23:53 - DEBUG - ==> Parameters: 
2025-03-26 11:23:54 - DEBUG - <==      Total: 13
2025-03-26 11:23:55 - INFO - Redisson 3.13.6
2025-03-26 11:23:55 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:23:55 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:23:57 - INFO - Started LoginTest in 5.968 seconds (JVM running for 6.899)
2025-03-26 11:23:57 - INFO - Token extraction completed. Output file: tokens.txt
2025-03-26 11:23:57 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:23:57 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:23:57 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:23:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:23:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:24:27 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 9668 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:24:27 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:24:27 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:24:28 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:24:28 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:24:28 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 11:24:28 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:24:28 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:24:28 - INFO - Starting service [Tomcat]
2025-03-26 11:24:28 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:24:28 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:24:28 - INFO - Root WebApplicationContext: initialization completed in 1011 ms
2025-03-26 11:24:29 - INFO - HikariPool-1 - Starting...
2025-03-26 11:24:29 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:24:29 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:24:29 - DEBUG - ==> Parameters: 
2025-03-26 11:24:29 - DEBUG - <==      Total: 13
2025-03-26 11:24:30 - INFO - Redisson 3.13.6
2025-03-26 11:24:30 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:24:31 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:24:31 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:24:31 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:24:31 - INFO - Started FoodieOdysseyApplication in 4.373 seconds (JVM running for 4.8)
2025-03-26 11:24:47 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:24:47 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:24:47 - INFO - Completed initialization in 1 ms
2025-03-26 11:24:47 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-26 11:24:47 - DEBUG - ==> Parameters: 1(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-26 11:24:47 - DEBUG - <==    Updates: 1
2025-03-26 11:24:47 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-26 11:24:47 - DEBUG - ==> Parameters: 23(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-26 11:24:47 - DEBUG - <==    Updates: 1
2025-03-26 11:26:02 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 11:26:02 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:26:02 - DEBUG - <==      Total: 0
2025-03-26 11:26:02 - INFO - 普通key被查询
2025-03-26 11:26:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:26:02 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:26:02 - DEBUG - <==      Total: 1
2025-03-26 11:26:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 11:26:06 - DEBUG - ==> Parameters: 
2025-03-26 11:26:06 - DEBUG - <==      Total: 1
2025-03-26 11:26:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 11:26:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:26:06 - DEBUG - <==      Total: 10
2025-03-26 11:27:29 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:27:29 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:27:29 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:27:29 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:27:29 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:27:33 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 25872 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:27:33 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:27:33 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:27:33 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:27:33 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:27:33 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 11:27:34 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:27:34 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:27:34 - INFO - Starting service [Tomcat]
2025-03-26 11:27:34 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:27:34 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:27:34 - INFO - Root WebApplicationContext: initialization completed in 955 ms
2025-03-26 11:27:34 - INFO - HikariPool-1 - Starting...
2025-03-26 11:27:34 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:27:34 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:27:34 - DEBUG - ==> Parameters: 
2025-03-26 11:27:34 - DEBUG - <==      Total: 14
2025-03-26 11:27:35 - INFO - Redisson 3.13.6
2025-03-26 11:27:35 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:27:35 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:27:36 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:27:36 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:27:36 - INFO - Started FoodieOdysseyApplication in 3.264 seconds (JVM running for 3.671)
2025-03-26 11:27:48 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:27:48 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:27:48 - INFO - Completed initialization in 1 ms
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 114
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 114
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 114
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 103
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 106
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 117
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 104
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 118
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 114
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 106
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 104
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 106
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 118
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 103
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 115
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 106
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 115
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 104
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 118
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 113
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 113
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 121
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 118
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 116
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 116
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 116
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 113
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 116
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 109
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 110
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 122
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 112
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 120
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 105
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 106
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 123
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 113
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 108
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 107
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:27:48 - INFO - 刷新token有效期耗时: 111
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1422(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820980(Long), 1422(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:27:49 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1374(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820963(Long), 1374(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1403(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820984(Long), 1403(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1468(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820940(Long), 1468(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1400(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357821064(Long), 1400(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1442(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357821131(Long), 1442(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1379(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820965(Long), 1379(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 1462(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==      Total: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:49 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:49 - DEBUG - ==> Parameters: 31348399357820975(Long), 1462(Long), 23(Long)
2025-03-26 11:27:49 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1474(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820946(Long), 1474(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1413(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820964(Long), 1413(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1493(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820981(Long), 1493(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1460(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820962(Long), 1460(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1463(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357821081(Long), 1463(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1491(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820972(Long), 1491(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1425(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820959(Long), 1425(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1421(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357821063(Long), 1421(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 1426(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==      Total: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:50 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:50 - DEBUG - ==> Parameters: 31348399357820942(Long), 1426(Long), 23(Long)
2025-03-26 11:27:50 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1439(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357820971(Long), 1439(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1376(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821078(Long), 1376(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1441(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821092(Long), 1441(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1373(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821102(Long), 1373(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1383(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821107(Long), 1383(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1411(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821105(Long), 1411(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1487(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357820983(Long), 1487(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1368(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821068(Long), 1368(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 1435(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==      Total: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:51 - DEBUG - ==> Parameters: 31348399357821099(Long), 1435(Long), 23(Long)
2025-03-26 11:27:51 - DEBUG - <==    Updates: 1
2025-03-26 11:27:51 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1377(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821084(Long), 1377(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1381(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821062(Long), 1381(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1395(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821104(Long), 1395(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1444(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821110(Long), 1444(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1427(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821095(Long), 1427(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1387(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821103(Long), 1387(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1455(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821015(Long), 1455(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1396(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821014(Long), 1396(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1431(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821041(Long), 1431(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 1440(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==      Total: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:52 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:52 - DEBUG - ==> Parameters: 31348399357821106(Long), 1440(Long), 23(Long)
2025-03-26 11:27:52 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1370(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821109(Long), 1370(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1415(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821118(Long), 1415(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1402(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821115(Long), 1402(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1389(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821047(Long), 1389(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1484(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821121(Long), 1484(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1472(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821108(Long), 1472(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1392(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821119(Long), 1392(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1433(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821127(Long), 1433(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1475(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821114(Long), 1475(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 1489(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==      Total: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:53 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:53 - DEBUG - ==> Parameters: 31348399357821065(Long), 1489(Long), 23(Long)
2025-03-26 11:27:53 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1371(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821130(Long), 1371(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1414(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821120(Long), 1414(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1481(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821054(Long), 1481(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1461(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821045(Long), 1461(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1375(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821055(Long), 1375(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1424(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821023(Long), 1424(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1453(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821051(Long), 1453(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1393(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821024(Long), 1393(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1488(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821018(Long), 1488(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 1369(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==      Total: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:54 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:54 - DEBUG - ==> Parameters: 31348399357821009(Long), 1369(Long), 23(Long)
2025-03-26 11:27:54 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1449(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821033(Long), 1449(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1479(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821017(Long), 1479(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1456(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357820944(Long), 1456(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1428(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821058(Long), 1428(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1416(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821016(Long), 1416(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1447(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821048(Long), 1447(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1454(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821008(Long), 1454(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1471(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821059(Long), 1471(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1394(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821031(Long), 1394(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 1467(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==      Total: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:55 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:55 - DEBUG - ==> Parameters: 31348399357821044(Long), 1467(Long), 23(Long)
2025-03-26 11:27:55 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1432(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821006(Long), 1432(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1386(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821002(Long), 1386(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1465(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821026(Long), 1465(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1469(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821010(Long), 1469(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1436(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821012(Long), 1436(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1397(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821011(Long), 1397(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1382(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357820986(Long), 1382(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1486(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821001(Long), 1486(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 1378(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==      Total: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:56 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:56 - DEBUG - ==> Parameters: 31348399357821046(Long), 1378(Long), 23(Long)
2025-03-26 11:27:56 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1476(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820985(Long), 1476(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1410(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357821038(Long), 1410(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1408(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357821057(Long), 1408(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1477(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820993(Long), 1477(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1478(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820960(Long), 1478(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1482(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357821020(Long), 1482(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1443(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820991(Long), 1443(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1372(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820998(Long), 1372(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1430(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357820990(Long), 1430(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 1492(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==      Total: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:57 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:57 - DEBUG - ==> Parameters: 31348399357821034(Long), 1492(Long), 23(Long)
2025-03-26 11:27:57 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1398(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357820974(Long), 1398(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1437(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821126(Long), 1437(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1483(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821125(Long), 1483(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1409(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821124(Long), 1409(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1405(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821128(Long), 1405(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1406(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357820967(Long), 1406(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1446(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821079(Long), 1446(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1434(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821000(Long), 1434(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1470(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357821052(Long), 1470(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 1418(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==      Total: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:58 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:58 - DEBUG - ==> Parameters: 31348399357820966(Long), 1418(Long), 23(Long)
2025-03-26 11:27:58 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 1404(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==      Total: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 31348399357821037(Long), 1404(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 1423(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==      Total: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 31348399357820956(Long), 1423(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 1367(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==      Total: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 31348399357821030(Long), 1367(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 1384(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==      Total: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 31348399357821089(Long), 1384(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 1385(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==      Total: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 23(Long), 0(Integer)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:27:59 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 11:27:59 - DEBUG - ==> Parameters: 31348399357821028(Long), 1385(Long), 23(Long)
2025-03-26 11:27:59 - DEBUG - <==    Updates: 1
2025-03-26 11:28:14 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:28:17 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:28:17 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:28:17 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:28:17 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 11:28:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:28:17 - DEBUG - <==      Total: 0
2025-03-26 11:28:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 11:28:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:28:17 - DEBUG - <==      Total: 1
2025-03-26 11:28:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 11:28:17 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 11:28:17 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:28:18 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 5
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:28:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:28:18 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:28:18 - DEBUG - <==      Total: 1
2025-03-26 11:35:09 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:35:09 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:35:09 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:35:09 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:35:09 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:35:13 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 9396 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:35:13 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:35:13 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:35:14 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:35:14 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:35:14 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 11:35:14 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:35:14 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:35:14 - INFO - Starting service [Tomcat]
2025-03-26 11:35:14 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:35:15 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:35:15 - INFO - Root WebApplicationContext: initialization completed in 1001 ms
2025-03-26 11:35:15 - INFO - HikariPool-1 - Starting...
2025-03-26 11:35:15 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:35:15 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:35:15 - DEBUG - ==> Parameters: 
2025-03-26 11:35:15 - DEBUG - <==      Total: 14
2025-03-26 11:35:16 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'IBlogService'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'blogServiceImpl': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-03-26 11:35:16 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:35:16 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:35:16 - INFO - Stopping service [Tomcat]
2025-03-26 11:35:16 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 11:35:16 - ERROR - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   blogController
┌─────┐
|  blogServiceImpl (field private org.jwj.fo.service.IBlogService org.jwj.fo.service.impl.BlogServiceImpl.IBlogService)
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-03-26 11:35:51 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 7656 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:35:51 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:35:51 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:35:51 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:35:51 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:35:51 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 11:35:52 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:35:52 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:35:52 - INFO - Starting service [Tomcat]
2025-03-26 11:35:52 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:35:52 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:35:52 - INFO - Root WebApplicationContext: initialization completed in 964 ms
2025-03-26 11:35:52 - INFO - HikariPool-1 - Starting...
2025-03-26 11:35:52 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:35:52 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:35:52 - DEBUG - ==> Parameters: 
2025-03-26 11:35:52 - DEBUG - <==      Total: 14
2025-03-26 11:35:53 - INFO - Redisson 3.13.6
2025-03-26 11:35:53 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:35:54 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:35:55 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:35:55 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:35:55 - INFO - Started FoodieOdysseyApplication in 4.252 seconds (JVM running for 4.671)
2025-03-26 11:35:59 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:35:59 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:35:59 - INFO - Completed initialization in 1 ms
2025-03-26 11:35:59 - INFO - 刷新token有效期耗时: 58
2025-03-26 11:35:59 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:35:59 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:35:59 - DEBUG - <==      Total: 1
2025-03-26 11:35:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:35:59 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:35:59 - DEBUG - <==      Total: 1
2025-03-26 11:35:59 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:35:59 - INFO - 普通key被查询
2025-03-26 11:35:59 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:35:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:35:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:35:59 - DEBUG - <==      Total: 1
2025-03-26 11:35:59 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:35:59 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:36:03 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:36:03 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:36:03 - DEBUG - <==      Total: 1
2025-03-26 11:36:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:36:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:36:03 - DEBUG - <==      Total: 1
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:36:03 - INFO - 普通key被查询
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:36:03 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:36:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:36:03 - DEBUG - <==      Total: 1
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 30
2025-03-26 11:36:03 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:39:30 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:39:30 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:39:30 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:39:30 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:39:30 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:39:33 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 33376 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:39:33 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:39:33 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:39:34 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:39:34 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:39:34 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 11:39:34 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:39:34 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:39:34 - INFO - Starting service [Tomcat]
2025-03-26 11:39:34 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:39:34 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:39:34 - INFO - Root WebApplicationContext: initialization completed in 934 ms
2025-03-26 11:39:35 - INFO - HikariPool-1 - Starting...
2025-03-26 11:39:35 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:39:35 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:39:35 - DEBUG - ==> Parameters: 
2025-03-26 11:39:35 - DEBUG - <==      Total: 14
2025-03-26 11:39:36 - INFO - Redisson 3.13.6
2025-03-26 11:39:36 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:39:36 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:39:36 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:39:36 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:39:36 - INFO - Started FoodieOdysseyApplication in 3.278 seconds (JVM running for 3.688)
2025-03-26 11:39:52 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:39:52 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:39:52 - INFO - Completed initialization in 1 ms
2025-03-26 11:39:52 - INFO - 刷新token有效期耗时: 71
2025-03-26 11:39:52 - INFO - 刷新token有效期耗时: 71
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 5
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:39:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:39:52 - DEBUG - <==      Total: 1
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:39:53 - INFO - 普通key被查询
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:39:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:39:53 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:39:53 - DEBUG - <==      Total: 1
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:39:53 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:40:00 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:00 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:40:00 - DEBUG - <==      Total: 1
2025-03-26 11:40:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:00 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:00 - DEBUG - <==      Total: 1
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:00 - INFO - 普通key被查询
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:40:00 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:40:00 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:40:00 - DEBUG - <==      Total: 1
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:40:00 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:40:05 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:40:05 - DEBUG - ==> Parameters: 
2025-03-26 11:40:05 - DEBUG - <==      Total: 1
2025-03-26 11:40:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:40:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:06 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:40:06 - DEBUG - <==      Total: 1
2025-03-26 11:40:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:40:06 - DEBUG - <==      Total: 1
2025-03-26 11:40:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:40:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:40:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:40:06 - INFO - 普通key被查询
2025-03-26 11:40:06 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:40:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:40:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:06 - DEBUG - <==      Total: 1
2025-03-26 11:40:16 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:40:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:40:16 - DEBUG - ==> Parameters: 
2025-03-26 11:40:16 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:17 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 5
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:40:17 - DEBUG - <==      Total: 1
2025-03-26 11:40:19 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:19 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:19 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:19 - DEBUG - <==    Updates: 1
2025-03-26 11:40:19 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:40:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:19 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:19 - DEBUG - <==      Total: 1
2025-03-26 11:40:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:19 - DEBUG - <==      Total: 1
2025-03-26 11:40:20 - INFO - 刷新token有效期耗时: 42
2025-03-26 11:40:20 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:20 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:20 - DEBUG - <==    Updates: 1
2025-03-26 11:40:20 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:40:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:20 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:20 - DEBUG - <==      Total: 1
2025-03-26 11:40:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:20 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 80
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 38
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 37
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:21 - DEBUG - <==      Total: 1
2025-03-26 11:40:21 - INFO - 刷新token有效期耗时: 30
2025-03-26 11:40:21 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:21 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:21 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 45
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 51
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 21
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 31
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 70
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==    Updates: 1
2025-03-26 11:40:22 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:22 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 52
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==    Updates: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==    Updates: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 32
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==    Updates: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 38
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 42
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==    Updates: 1
2025-03-26 11:40:23 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:23 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:40:24 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 5
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:24 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:40:24 - DEBUG - <==      Total: 1
2025-03-26 11:40:25 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:40:25 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:40:25 - DEBUG - ==> Parameters: 
2025-03-26 11:40:25 - DEBUG - <==      Total: 1
2025-03-26 11:40:27 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:40:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:27 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:40:27 - DEBUG - <==      Total: 1
2025-03-26 11:40:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:27 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:40:27 - DEBUG - <==      Total: 1
2025-03-26 11:40:27 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:27 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:27 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:40:27 - INFO - 普通key被查询
2025-03-26 11:40:27 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:40:32 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:32 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:32 - DEBUG - <==      Total: 1
2025-03-26 11:40:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:32 - DEBUG - <==      Total: 1
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 33
2025-03-26 11:40:32 - INFO - 普通key被查询
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:40:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:40:32 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:40:32 - DEBUG - <==      Total: 1
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 32
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:40:32 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:40:59 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:40:59 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:40:59 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:59 - DEBUG - <==    Updates: 1
2025-03-26 11:40:59 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:40:59 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:40:59 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:40:59 - DEBUG - <==      Total: 1
2025-03-26 11:40:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:40:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:40:59 - DEBUG - <==      Total: 1
2025-03-26 11:41:00 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:41:00 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:00 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:41:00 - DEBUG - <==    Updates: 1
2025-03-26 11:41:00 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:00 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:00 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:41:00 - DEBUG - <==      Total: 1
2025-03-26 11:41:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:00 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:41:00 - DEBUG - <==      Total: 1
2025-03-26 11:41:13 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:41:13 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:13 - DEBUG - ==> Parameters: 
2025-03-26 11:41:13 - DEBUG - <==      Total: 1
2025-03-26 11:41:14 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:41:14 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:14 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:14 - DEBUG - <==    Updates: 1
2025-03-26 11:41:14 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:14 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:14 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:14 - DEBUG - <==      Total: 1
2025-03-26 11:41:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:14 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:14 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:41:16 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 5
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:16 - DEBUG - <==      Total: 1
2025-03-26 11:41:17 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:41:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:17 - DEBUG - ==> Parameters: 
2025-03-26 11:41:17 - DEBUG - <==      Total: 1
2025-03-26 11:41:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:41:18 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:18 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:18 - DEBUG - <==    Updates: 1
2025-03-26 11:41:18 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:18 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:18 - DEBUG - <==      Total: 1
2025-03-26 11:41:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:18 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:18 - DEBUG - <==      Total: 1
2025-03-26 11:41:34 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:41:34 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:34 - DEBUG - ==> Parameters: 
2025-03-26 11:41:34 - DEBUG - <==      Total: 1
2025-03-26 11:41:35 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:35 - DEBUG - ==> Parameters: 
2025-03-26 11:41:35 - DEBUG - <==      Total: 1
2025-03-26 11:41:37 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:41:37 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:37 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:37 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 17
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 30
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:38 - DEBUG - <==      Total: 1
2025-03-26 11:41:38 - INFO - 刷新token有效期耗时: 31
2025-03-26 11:41:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:38 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:38 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 39
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 31
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 35
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==    Updates: 1
2025-03-26 11:41:39 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:39 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 38
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 30
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 80
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 31
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 80
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 20
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 32
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==    Updates: 1
2025-03-26 11:41:40 - INFO - 刷新token有效期耗时: 37
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:40 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 70
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 18
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 97
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 43
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 48
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==    Updates: 1
2025-03-26 11:41:41 - INFO - 刷新token有效期耗时: 77
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:41 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:41 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:41 - DEBUG - <==      Total: 1
2025-03-26 11:41:42 - INFO - 刷新token有效期耗时: 60
2025-03-26 11:41:42 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:41:42 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:42 - DEBUG - <==    Updates: 1
2025-03-26 11:41:42 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:41:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:41:42 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:41:42 - DEBUG - <==      Total: 1
2025-03-26 11:41:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:42 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:42 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - INFO - 刷新token有效期耗时: 85
2025-03-26 11:41:43 - INFO - 刷新token有效期耗时: 85
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 5
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:41:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:41:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:41:43 - DEBUG - <==      Total: 1
2025-03-26 11:56:46 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:56:46 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:56:46 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:56:46 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:56:47 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:56:50 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 24992 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:56:50 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:56:50 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:56:50 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:56:50 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:56:50 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:56:51 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:56:51 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:56:51 - INFO - Starting service [Tomcat]
2025-03-26 11:56:51 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:56:51 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:56:51 - INFO - Root WebApplicationContext: initialization completed in 1073 ms
2025-03-26 11:56:52 - INFO - HikariPool-1 - Starting...
2025-03-26 11:56:52 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:56:52 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:56:52 - DEBUG - ==> Parameters: 
2025-03-26 11:56:52 - DEBUG - <==      Total: 14
2025-03-26 11:56:53 - INFO - Redisson 3.13.6
2025-03-26 11:56:53 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:56:53 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:56:53 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:56:53 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:56:53 - INFO - Started FoodieOdysseyApplication in 3.636 seconds (JVM running for 4.064)
2025-03-26 11:56:57 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:56:57 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:56:57 - INFO - Completed initialization in 0 ms
2025-03-26 11:56:57 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:56:57 - INFO - 刷新token有效期耗时: 119
2025-03-26 11:56:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:56:57 - DEBUG - ==> Parameters: 
2025-03-26 11:56:57 - DEBUG - <==      Total: 1
2025-03-26 11:56:57 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:56:57 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:56:57 - DEBUG - <==      Total: 5
2025-03-26 11:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:56:57 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:56:57 - DEBUG - <==      Total: 1
2025-03-26 11:56:57 - ERROR - java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')
java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')
	at org.springframework.data.redis.serializer.StringRedisSerializer.serialize(StringRedisSerializer.java:36)
	at org.springframework.data.redis.core.AbstractOperations.rawValue(AbstractOperations.java:128)
	at org.springframework.data.redis.core.DefaultSetOperations.isMember(DefaultSetOperations.java:203)
	at org.jwj.fo.service.impl.BlogServiceImpl.isLiked(BlogServiceImpl.java:58)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBolgUser(BlogServiceImpl.java:116)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryHotBlog(BlogServiceImpl.java:40)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$52c5125a.queryHotBlog(<generated>)
	at org.jwj.fo.controller.BlogController.queryHotBlog(BlogController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 11:57:35 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:57:35 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:57:35 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:57:35 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:57:35 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:57:38 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 4248 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:57:38 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:57:38 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:57:39 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:57:39 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:57:39 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:57:39 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:57:39 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:57:39 - INFO - Starting service [Tomcat]
2025-03-26 11:57:39 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:57:39 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:57:39 - INFO - Root WebApplicationContext: initialization completed in 981 ms
2025-03-26 11:57:40 - INFO - HikariPool-1 - Starting...
2025-03-26 11:57:40 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:57:40 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:57:40 - DEBUG - ==> Parameters: 
2025-03-26 11:57:40 - DEBUG - <==      Total: 14
2025-03-26 11:57:41 - INFO - Redisson 3.13.6
2025-03-26 11:57:41 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:57:41 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:57:42 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:57:42 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:57:42 - INFO - Started FoodieOdysseyApplication in 3.809 seconds (JVM running for 4.24)
2025-03-26 11:58:19 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:58:19 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:58:19 - INFO - Completed initialization in 0 ms
2025-03-26 11:58:19 - INFO - 刷新token有效期耗时: 81
2025-03-26 11:58:19 - INFO - 刷新token有效期耗时: 81
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 5
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:58:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:58:19 - DEBUG - <==      Total: 1
2025-03-26 11:58:21 - INFO - 刷新token有效期耗时: 73
2025-03-26 11:58:21 - ERROR - java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')
java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')
	at org.springframework.data.redis.serializer.StringRedisSerializer.serialize(StringRedisSerializer.java:36)
	at org.springframework.data.redis.core.AbstractOperations.rawValue(AbstractOperations.java:128)
	at org.springframework.data.redis.core.DefaultSetOperations.isMember(DefaultSetOperations.java:203)
	at org.jwj.fo.service.impl.BlogServiceImpl.likeBlog(BlogServiceImpl.java:78)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.likeBlog(<generated>)
	at org.jwj.fo.controller.BlogController.likeBlog(BlogController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 11:59:04 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 11:59:04 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 11:59:04 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 11:59:04 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:59:04 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 11:59:07 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21264 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 11:59:07 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 11:59:07 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 11:59:08 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 11:59:08 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 11:59:08 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 11:59:08 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 11:59:08 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 11:59:08 - INFO - Starting service [Tomcat]
2025-03-26 11:59:08 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 11:59:08 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 11:59:08 - INFO - Root WebApplicationContext: initialization completed in 994 ms
2025-03-26 11:59:09 - INFO - HikariPool-1 - Starting...
2025-03-26 11:59:09 - INFO - HikariPool-1 - Start completed.
2025-03-26 11:59:09 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 11:59:09 - DEBUG - ==> Parameters: 
2025-03-26 11:59:09 - DEBUG - <==      Total: 14
2025-03-26 11:59:10 - INFO - Redisson 3.13.6
2025-03-26 11:59:10 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 11:59:11 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 11:59:11 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 11:59:11 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 11:59:11 - INFO - Started FoodieOdysseyApplication in 3.749 seconds (JVM running for 4.174)
2025-03-26 11:59:17 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 11:59:17 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 11:59:17 - INFO - Completed initialization in 1 ms
2025-03-26 11:59:17 - INFO - 刷新token有效期耗时: 63
2025-03-26 11:59:17 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 5
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:17 - DEBUG - <==      Total: 1
2025-03-26 11:59:18 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:18 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:18 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:59:18 - DEBUG - <==    Updates: 1
2025-03-26 11:59:19 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:59:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:19 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:59:19 - DEBUG - <==      Total: 1
2025-03-26 11:59:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:19 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:59:19 - DEBUG - <==      Total: 1
2025-03-26 11:59:20 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:59:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:20 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 11:59:20 - DEBUG - <==      Total: 1
2025-03-26 11:59:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:20 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:59:20 - DEBUG - <==      Total: 1
2025-03-26 11:59:21 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:59:21 - INFO - 普通key被查询
2025-03-26 11:59:21 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:59:21 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:59:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:21 - DEBUG - <==      Total: 1
2025-03-26 11:59:21 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:21 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:59:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:26 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:26 - DEBUG - <==      Total: 1
2025-03-26 11:59:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:26 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:26 - DEBUG - <==      Total: 1
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 22
2025-03-26 11:59:26 - INFO - 普通key被查询
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:59:26 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:26 - DEBUG - <==      Total: 1
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 19
2025-03-26 11:59:26 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:59:32 - INFO - 刷新token有效期耗时: 36
2025-03-26 11:59:32 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:32 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:32 - DEBUG - <==    Updates: 1
2025-03-26 11:59:33 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:59:33 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:33 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:33 - DEBUG - <==      Total: 1
2025-03-26 11:59:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:33 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:33 - DEBUG - <==      Total: 1
2025-03-26 11:59:33 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:33 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 11:59:33 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:33 - DEBUG - <==    Updates: 1
2025-03-26 11:59:34 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:59:34 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:34 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:34 - DEBUG - <==      Total: 1
2025-03-26 11:59:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:34 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:34 - DEBUG - <==      Total: 1
2025-03-26 11:59:34 - INFO - 刷新token有效期耗时: 26
2025-03-26 11:59:34 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:34 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:34 - DEBUG - <==    Updates: 1
2025-03-26 11:59:35 - INFO - 刷新token有效期耗时: 73
2025-03-26 11:59:35 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:35 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 11:59:35 - DEBUG - <==      Total: 1
2025-03-26 11:59:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:35 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:35 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:59:39 - INFO - 刷新token有效期耗时: 34
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 5
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:39 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:39 - DEBUG - <==      Total: 1
2025-03-26 11:59:42 - INFO - 刷新token有效期耗时: 31
2025-03-26 11:59:42 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:42 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:42 - DEBUG - <==    Updates: 1
2025-03-26 11:59:42 - INFO - 刷新token有效期耗时: 55
2025-03-26 11:59:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:42 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:42 - DEBUG - <==      Total: 1
2025-03-26 11:59:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:42 - DEBUG - <==      Total: 1
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 23
2025-03-26 11:59:45 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:45 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:45 - DEBUG - <==      Total: 1
2025-03-26 11:59:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:45 - DEBUG - <==      Total: 1
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 29
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:59:45 - INFO - 普通key被查询
2025-03-26 11:59:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:45 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:45 - DEBUG - <==      Total: 1
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:45 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:59:46 - INFO - 刷新token有效期耗时: 25
2025-03-26 11:59:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 11:59:46 - DEBUG - ==> Parameters: 
2025-03-26 11:59:46 - DEBUG - <==      Total: 1
2025-03-26 11:59:49 - INFO - 刷新token有效期耗时: 94
2025-03-26 11:59:49 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 11:59:49 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:49 - DEBUG - <==    Updates: 1
2025-03-26 11:59:49 - INFO - 刷新token有效期耗时: 40
2025-03-26 11:59:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:49 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:49 - DEBUG - <==      Total: 1
2025-03-26 11:59:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:49 - DEBUG - <==      Total: 1
2025-03-26 11:59:52 - INFO - 刷新token有效期耗时: 87
2025-03-26 11:59:52 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:52 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:52 - DEBUG - <==    Updates: 1
2025-03-26 11:59:52 - INFO - 刷新token有效期耗时: 28
2025-03-26 11:59:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:52 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 11:59:52 - DEBUG - <==      Total: 1
2025-03-26 11:59:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 11:59:52 - DEBUG - <==      Total: 1
2025-03-26 11:59:58 - INFO - 刷新token有效期耗时: 27
2025-03-26 11:59:58 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 11:59:58 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 11:59:58 - DEBUG - <==    Updates: 1
2025-03-26 11:59:58 - INFO - 刷新token有效期耗时: 24
2025-03-26 11:59:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 11:59:58 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 11:59:58 - DEBUG - <==      Total: 1
2025-03-26 11:59:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 11:59:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 11:59:58 - DEBUG - <==      Total: 1
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:00:00 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:00:00 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 12:00:00 - DEBUG - <==      Total: 1
2025-03-26 12:00:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:00 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:00 - DEBUG - <==      Total: 1
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:00 - INFO - 普通key被查询
2025-03-26 12:00:00 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:00:00 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:00:00 - DEBUG - <==      Total: 1
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 51
2025-03-26 12:00:00 - INFO - 刷新token有效期耗时: 34
2025-03-26 12:00:01 - INFO - 刷新token有效期耗时: 40
2025-03-26 12:00:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:01 - DEBUG - ==> Parameters: 
2025-03-26 12:00:01 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - INFO - 刷新token有效期耗时: 23
2025-03-26 12:00:03 - INFO - 刷新token有效期耗时: 23
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 5
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:03 - DEBUG - <==      Total: 1
2025-03-26 12:00:04 - INFO - 刷新token有效期耗时: 26
2025-03-26 12:00:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:04 - DEBUG - ==> Parameters: 
2025-03-26 12:00:04 - DEBUG - <==      Total: 1
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 38
2025-03-26 12:00:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:00:08 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 12:00:08 - DEBUG - <==      Total: 1
2025-03-26 12:00:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:08 - DEBUG - <==      Total: 1
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:00:08 - INFO - 普通key被查询
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:00:08 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:00:12 - INFO - 刷新token有效期耗时: 33
2025-03-26 12:00:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:12 - DEBUG - ==> Parameters: 
2025-03-26 12:00:12 - DEBUG - <==      Total: 1
2025-03-26 12:00:13 - INFO - 刷新token有效期耗时: 30
2025-03-26 12:00:13 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 12:00:13 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 12:00:13 - DEBUG - <==    Updates: 1
2025-03-26 12:00:13 - INFO - 刷新token有效期耗时: 33
2025-03-26 12:00:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:00:13 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 12:00:13 - DEBUG - <==      Total: 1
2025-03-26 12:00:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:13 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:00:15 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 5
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:15 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:00:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:00:15 - DEBUG - ==> Parameters: 
2025-03-26 12:00:15 - DEBUG - <==      Total: 1
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 20
2025-03-26 12:00:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:00:39 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:00:39 - DEBUG - <==      Total: 1
2025-03-26 12:00:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:00:39 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:00:39 - DEBUG - <==      Total: 1
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:00:39 - INFO - 普通key被查询
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:00:39 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:00:39 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:00:39 - DEBUG - <==      Total: 1
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 36
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 37
2025-03-26 12:00:39 - INFO - 刷新token有效期耗时: 26
2025-03-26 12:01:26 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 12:01:26 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 12:01:26 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 12:01:26 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:01:26 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:01:29 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 13532 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 12:01:29 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 12:01:29 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 12:01:30 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 12:01:30 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 12:01:30 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 12:01:30 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 12:01:30 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 12:01:30 - INFO - Starting service [Tomcat]
2025-03-26 12:01:30 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 12:01:30 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 12:01:30 - INFO - Root WebApplicationContext: initialization completed in 946 ms
2025-03-26 12:01:31 - INFO - HikariPool-1 - Starting...
2025-03-26 12:01:31 - INFO - HikariPool-1 - Start completed.
2025-03-26 12:01:31 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 12:01:31 - DEBUG - ==> Parameters: 
2025-03-26 12:01:31 - DEBUG - <==      Total: 14
2025-03-26 12:01:33 - INFO - Redisson 3.13.6
2025-03-26 12:01:33 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 12:01:33 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 12:01:34 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 12:01:34 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 12:01:34 - INFO - Started FoodieOdysseyApplication in 4.714 seconds (JVM running for 5.127)
2025-03-26 12:01:48 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 12:01:48 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 12:01:48 - INFO - Completed initialization in 0 ms
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 87
2025-03-26 12:01:48 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:01:48 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:01:48 - DEBUG - <==      Total: 1
2025-03-26 12:01:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:01:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:01:48 - DEBUG - <==      Total: 1
2025-03-26 12:01:48 - WARN - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 43
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 43
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 38
2025-03-26 12:01:48 - INFO - 普通key被查询
2025-03-26 12:01:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:01:48 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:01:48 - DEBUG - <==      Total: 1
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:01:48 - INFO - 刷新token有效期耗时: 70
2025-03-26 12:01:55 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:01:55 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:02:01 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 12:02:01 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 12:02:01 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 12:02:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:02:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:02:04 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 8288 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 12:02:04 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 12:02:04 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 12:02:05 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 12:02:05 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 12:02:05 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 12:02:05 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 12:02:05 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 12:02:05 - INFO - Starting service [Tomcat]
2025-03-26 12:02:05 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 12:02:05 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 12:02:05 - INFO - Root WebApplicationContext: initialization completed in 980 ms
2025-03-26 12:02:06 - INFO - HikariPool-1 - Starting...
2025-03-26 12:02:06 - INFO - HikariPool-1 - Start completed.
2025-03-26 12:02:06 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 12:02:06 - DEBUG - ==> Parameters: 
2025-03-26 12:02:06 - DEBUG - <==      Total: 14
2025-03-26 12:02:07 - INFO - Redisson 3.13.6
2025-03-26 12:02:08 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 12:02:08 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 12:02:08 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 12:02:08 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 12:02:08 - INFO - Started FoodieOdysseyApplication in 4.27 seconds (JVM running for 4.709)
2025-03-26 12:02:16 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 12:02:16 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 12:02:16 - INFO - Completed initialization in 0 ms
2025-03-26 12:02:16 - INFO - 刷新token有效期耗时: 95
2025-03-26 12:02:16 - INFO - 刷新token有效期耗时: 95
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 5
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:02:16 - DEBUG - <==      Total: 1
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 35
2025-03-26 12:02:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:19 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:19 - DEBUG - <==      Total: 1
2025-03-26 12:02:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:19 - DEBUG - <==      Total: 1
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 44
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 41
2025-03-26 12:02:19 - INFO - 普通key被查询
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 46
2025-03-26 12:02:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:02:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:02:19 - DEBUG - <==      Total: 1
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 46
2025-03-26 12:02:19 - INFO - 刷新token有效期耗时: 36
2025-03-26 12:02:20 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:02:24 - INFO - 刷新token有效期耗时: 36
2025-03-26 12:02:24 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 12:02:24 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:24 - DEBUG - <==    Updates: 1
2025-03-26 12:02:24 - INFO - 刷新token有效期耗时: 39
2025-03-26 12:02:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:24 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:24 - DEBUG - <==      Total: 1
2025-03-26 12:02:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:24 - DEBUG - <==      Total: 1
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 34
2025-03-26 12:02:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:27 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:27 - DEBUG - <==      Total: 1
2025-03-26 12:02:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:27 - DEBUG - <==      Total: 1
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 34
2025-03-26 12:02:27 - INFO - 普通key被查询
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 33
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 33
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 35
2025-03-26 12:02:27 - INFO - 刷新token有效期耗时: 35
2025-03-26 12:02:38 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:02:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 12:02:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:38 - DEBUG - <==    Updates: 1
2025-03-26 12:02:38 - INFO - 刷新token有效期耗时: 20
2025-03-26 12:02:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:38 - DEBUG - <==      Total: 1
2025-03-26 12:02:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:38 - DEBUG - <==      Total: 1
2025-03-26 12:02:39 - INFO - 刷新token有效期耗时: 26
2025-03-26 12:02:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 12:02:39 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:39 - DEBUG - <==    Updates: 1
2025-03-26 12:02:39 - INFO - 刷新token有效期耗时: 40
2025-03-26 12:02:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:39 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:39 - DEBUG - <==      Total: 1
2025-03-26 12:02:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:39 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:39 - DEBUG - <==      Total: 1
2025-03-26 12:02:39 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:02:39 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 12:02:39 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:39 - DEBUG - <==    Updates: 1
2025-03-26 12:02:40 - INFO - 刷新token有效期耗时: 134
2025-03-26 12:02:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:40 - DEBUG - <==      Total: 1
2025-03-26 12:02:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:40 - DEBUG - <==      Total: 1
2025-03-26 12:02:47 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:02:47 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:02:47 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:02:47 - DEBUG - <==      Total: 1
2025-03-26 12:02:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:47 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:47 - DEBUG - <==      Total: 1
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:02:48 - INFO - 普通key被查询
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 25
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 41
2025-03-26 12:02:48 - INFO - 刷新token有效期耗时: 67
2025-03-26 12:02:52 - INFO - 刷新token有效期耗时: 62
2025-03-26 12:02:52 - INFO - 刷新token有效期耗时: 81
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 5
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:02:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:02:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:02:52 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - INFO - 刷新token有效期耗时: 60
2025-03-26 12:03:36 - INFO - 刷新token有效期耗时: 61
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 5
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:03:36 - DEBUG - <==      Total: 1
2025-03-26 12:03:38 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:03:38 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:03:38 - DEBUG - ==> Parameters: 
2025-03-26 12:03:38 - DEBUG - <==      Total: 1
2025-03-26 12:03:48 - INFO - 刷新token有效期耗时: 33
2025-03-26 12:03:48 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 12:03:48 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:03:48 - DEBUG - <==    Updates: 1
2025-03-26 12:03:49 - INFO - 刷新token有效期耗时: 23
2025-03-26 12:03:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:03:49 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:03:49 - DEBUG - <==      Total: 1
2025-03-26 12:03:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:49 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:03:49 - DEBUG - <==      Total: 1
2025-03-26 12:03:51 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:03:51 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 12:03:51 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:03:51 - DEBUG - <==    Updates: 1
2025-03-26 12:03:51 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:03:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:03:51 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:03:51 - DEBUG - <==      Total: 1
2025-03-26 12:03:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:03:51 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:03:51 - DEBUG - <==      Total: 1
2025-03-26 12:04:14 - INFO - 刷新token有效期耗时: 30
2025-03-26 12:04:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:04:14 - DEBUG - ==> Parameters: 
2025-03-26 12:04:14 - DEBUG - <==      Total: 1
2025-03-26 12:04:32 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:04:32 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:04:32 - DEBUG - ==> Parameters: 
2025-03-26 12:04:32 - DEBUG - <==      Total: 1
2025-03-26 12:04:37 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:04:37 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:04:37 - DEBUG - ==> Parameters: 
2025-03-26 12:04:37 - DEBUG - <==      Total: 1
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 23
2025-03-26 12:05:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:05:19 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 12:05:19 - DEBUG - <==      Total: 1
2025-03-26 12:05:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:05:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:05:19 - DEBUG - <==      Total: 1
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 25
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 25
2025-03-26 12:05:19 - INFO - 普通key被查询
2025-03-26 12:05:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:05:19 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:05:19 - DEBUG - <==      Total: 1
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 29
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 26
2025-03-26 12:05:19 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:53:49 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 12:53:49 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 12:53:49 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 12:53:49 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:53:49 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:53:53 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 27364 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 12:53:53 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 12:53:53 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 12:53:53 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 12:53:53 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 12:53:53 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 12:53:54 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 12:53:54 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 12:53:54 - INFO - Starting service [Tomcat]
2025-03-26 12:53:54 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 12:53:54 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 12:53:54 - INFO - Root WebApplicationContext: initialization completed in 1003 ms
2025-03-26 12:53:54 - INFO - HikariPool-1 - Starting...
2025-03-26 12:53:55 - INFO - HikariPool-1 - Start completed.
2025-03-26 12:53:55 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 12:53:55 - DEBUG - ==> Parameters: 
2025-03-26 12:53:55 - DEBUG - <==      Total: 14
2025-03-26 12:53:56 - INFO - Redisson 3.13.6
2025-03-26 12:53:56 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 12:53:56 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 12:53:57 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 12:53:57 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 12:53:57 - INFO - Started FoodieOdysseyApplication in 4.057 seconds (JVM running for 4.525)
2025-03-26 12:53:58 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 12:53:58 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 12:53:58 - INFO - Completed initialization in 1 ms
2025-03-26 12:53:58 - INFO - 刷新token有效期耗时: 74
2025-03-26 12:53:58 - INFO - 刷新token有效期耗时: 74
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 5
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:53:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:53:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:53:58 - DEBUG - <==      Total: 1
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 30
2025-03-26 12:54:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:54:02 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:54:02 - DEBUG - <==      Total: 1
2025-03-26 12:54:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:54:02 - DEBUG - <==      Total: 1
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 36
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 36
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:54:02 - INFO - 普通key被查询
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:54:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:54:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:54:02 - DEBUG - <==      Total: 1
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 31
2025-03-26 12:54:02 - INFO - 刷新token有效期耗时: 149
2025-03-26 12:54:48 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:54:48 - INFO - 刷新token有效期耗时: 40
2025-03-26 12:54:48 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:54:48 - DEBUG - ==> Parameters: 
2025-03-26 12:54:48 - DEBUG - <==      Total: 1
2025-03-26 12:54:48 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:54:48 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:54:48 - DEBUG - <==      Total: 5
2025-03-26 12:54:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:48 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:54:48 - DEBUG - <==      Total: 1
2025-03-26 12:54:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:54:48 - DEBUG - <==      Total: 1
2025-03-26 12:54:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:54:48 - DEBUG - <==      Total: 1
2025-03-26 12:54:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:54:49 - DEBUG - <==      Total: 1
2025-03-26 12:54:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:54:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:54:49 - DEBUG - <==      Total: 1
2025-03-26 12:55:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:55:01 - DEBUG - ==> Parameters: 
2025-03-26 12:55:01 - DEBUG - <==      Total: 1
2025-03-26 12:55:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:55:01 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:55:01 - DEBUG - <==      Total: 5
2025-03-26 12:55:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:55:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:55:01 - DEBUG - <==      Total: 1
2025-03-26 12:55:01 - ERROR - java.lang.NullPointerException: Cannot invoke "org.jwj.fo.dto.UserDTO.getId()" because "user" is null
java.lang.NullPointerException: Cannot invoke "org.jwj.fo.dto.UserDTO.getId()" because "user" is null
	at org.jwj.fo.service.impl.BlogServiceImpl.isLiked(BlogServiceImpl.java:117)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBolgUser(BlogServiceImpl.java:112)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryHotBlog(BlogServiceImpl.java:40)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryHotBlog(<generated>)
	at org.jwj.fo.controller.BlogController.queryHotBlog(BlogController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 12:55:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:55:06 - DEBUG - ==> Parameters: 
2025-03-26 12:55:06 - DEBUG - <==      Total: 1
2025-03-26 12:55:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:55:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:55:06 - DEBUG - <==      Total: 5
2025-03-26 12:55:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:55:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:55:06 - DEBUG - <==      Total: 1
2025-03-26 12:55:06 - ERROR - java.lang.NullPointerException: Cannot invoke "org.jwj.fo.dto.UserDTO.getId()" because "user" is null
java.lang.NullPointerException: Cannot invoke "org.jwj.fo.dto.UserDTO.getId()" because "user" is null
	at org.jwj.fo.service.impl.BlogServiceImpl.isLiked(BlogServiceImpl.java:117)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBolgUser(BlogServiceImpl.java:112)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryHotBlog(BlogServiceImpl.java:40)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryHotBlog(<generated>)
	at org.jwj.fo.controller.BlogController.queryHotBlog(BlogController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 12:56:45 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 12:56:45 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 12:56:45 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 12:56:45 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:56:45 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:56:45 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 12:56:48 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 34084 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 12:56:48 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 12:56:48 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 12:56:48 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 12:56:48 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 12:56:48 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 12:56:49 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 12:56:49 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 12:56:49 - INFO - Starting service [Tomcat]
2025-03-26 12:56:49 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 12:56:49 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 12:56:49 - INFO - Root WebApplicationContext: initialization completed in 920 ms
2025-03-26 12:56:49 - INFO - HikariPool-1 - Starting...
2025-03-26 12:56:49 - INFO - HikariPool-1 - Start completed.
2025-03-26 12:56:49 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 12:56:49 - DEBUG - ==> Parameters: 
2025-03-26 12:56:49 - DEBUG - <==      Total: 14
2025-03-26 12:56:50 - INFO - Redisson 3.13.6
2025-03-26 12:56:50 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 12:56:51 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 12:56:51 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 12:56:51 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 12:56:51 - INFO - Started FoodieOdysseyApplication in 3.402 seconds (JVM running for 3.813)
2025-03-26 12:56:57 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 12:56:57 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 12:56:57 - INFO - Completed initialization in 0 ms
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 5
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:56:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:56:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:56:57 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - INFO - 刷新token有效期耗时: 34
2025-03-26 12:57:06 - INFO - 刷新token有效期耗时: 34
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 5
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:57:06 - DEBUG - <==      Total: 1
2025-03-26 12:57:14 - DEBUG - send success: 994758
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - INFO - 刷新token有效期耗时: 82
2025-03-26 12:57:21 - INFO - 刷新token有效期耗时: 82
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 5
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:21 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:57:21 - DEBUG - <==      Total: 1
2025-03-26 12:57:25 - INFO - 刷新token有效期耗时: 28
2025-03-26 12:57:25 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 12:57:25 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:57:25 - DEBUG - <==    Updates: 1
2025-03-26 12:57:25 - INFO - 刷新token有效期耗时: 49
2025-03-26 12:57:25 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:57:25 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:57:25 - DEBUG - <==      Total: 1
2025-03-26 12:57:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:25 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:57:25 - DEBUG - <==      Total: 1
2025-03-26 12:57:26 - INFO - 刷新token有效期耗时: 22
2025-03-26 12:57:26 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 12:57:26 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:57:26 - DEBUG - <==    Updates: 1
2025-03-26 12:57:26 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:57:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:57:26 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:57:26 - DEBUG - <==      Total: 1
2025-03-26 12:57:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:26 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:57:26 - DEBUG - <==      Total: 1
2025-03-26 12:57:44 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:57:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:57:44 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 12:57:44 - DEBUG - <==      Total: 1
2025-03-26 12:57:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:44 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 12:57:44 - DEBUG - <==      Total: 1
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 21
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:57:45 - INFO - 普通key被查询
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 60
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 67
2025-03-26 12:57:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:57:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:45 - DEBUG - <==      Total: 1
2025-03-26 12:57:45 - INFO - 刷新token有效期耗时: 27
2025-03-26 12:57:51 - INFO - 刷新token有效期耗时: 26
2025-03-26 12:57:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 12:57:51 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 12:57:51 - DEBUG - <==      Total: 1
2025-03-26 12:57:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 12:57:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 12:57:51 - DEBUG - <==      Total: 1
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 25
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 25
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 24
2025-03-26 12:57:52 - INFO - 普通key被查询
2025-03-26 12:57:52 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 32
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 38
2025-03-26 12:57:52 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 12:57:52 - DEBUG - <==      Total: 1
2025-03-26 12:57:52 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:00:49 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:00:49 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:00:49 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:00:49 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:00:49 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:00:52 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 28940 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:00:52 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:00:52 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:00:53 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:00:53 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:00:53 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 13:00:53 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:00:53 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:00:53 - INFO - Starting service [Tomcat]
2025-03-26 13:00:53 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:00:53 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:00:53 - INFO - Root WebApplicationContext: initialization completed in 992 ms
2025-03-26 13:00:54 - INFO - HikariPool-1 - Starting...
2025-03-26 13:00:54 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:00:54 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:00:54 - DEBUG - ==> Parameters: 
2025-03-26 13:00:54 - DEBUG - <==      Total: 14
2025-03-26 13:00:55 - INFO - Redisson 3.13.6
2025-03-26 13:00:55 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:00:56 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:00:56 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:00:56 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:00:56 - INFO - Started FoodieOdysseyApplication in 3.816 seconds (JVM running for 4.238)
2025-03-26 13:00:57 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:00:57 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:00:57 - INFO - Completed initialization in 0 ms
2025-03-26 13:00:57 - INFO - 刷新token有效期耗时: 107
2025-03-26 13:00:57 - INFO - 刷新token有效期耗时: 107
2025-03-26 13:00:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:00:57 - DEBUG - ==> Parameters: 
2025-03-26 13:00:57 - DEBUG - <==      Total: 1
2025-03-26 13:00:57 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:00:57 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:00:57 - DEBUG - <==      Total: 5
2025-03-26 13:00:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:00:57 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:00:57 - DEBUG - <==      Total: 1
2025-03-26 13:00:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:00:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:00:57 - DEBUG - <==      Total: 1
2025-03-26 13:00:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:00:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:00:57 - DEBUG - <==      Total: 1
2025-03-26 13:00:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:00:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:00:58 - DEBUG - <==      Total: 1
2025-03-26 13:00:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:00:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:00:58 - DEBUG - <==      Total: 1
2025-03-26 13:00:59 - INFO - 刷新token有效期耗时: 69
2025-03-26 13:00:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:00:59 - DEBUG - ==> Parameters: 
2025-03-26 13:00:59 - DEBUG - <==      Total: 1
2025-03-26 13:01:00 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:01:00 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:01:00 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:01:00 - DEBUG - <==    Updates: 1
2025-03-26 13:01:00 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:01:00 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:00 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:01:00 - DEBUG - <==      Total: 1
2025-03-26 13:01:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:00 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:01:00 - DEBUG - <==      Total: 1
2025-03-26 13:01:01 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:01:01 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:01:01 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:01:01 - DEBUG - <==    Updates: 1
2025-03-26 13:01:01 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:01:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:01 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:01:01 - DEBUG - <==      Total: 1
2025-03-26 13:01:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:01:01 - DEBUG - <==      Total: 1
2025-03-26 13:01:04 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:01:04 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:01:04 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:04 - DEBUG - <==    Updates: 1
2025-03-26 13:01:04 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:01:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:04 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:04 - DEBUG - <==      Total: 1
2025-03-26 13:01:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:04 - DEBUG - <==      Total: 1
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:01:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:05 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:05 - DEBUG - <==      Total: 1
2025-03-26 13:01:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:05 - DEBUG - <==      Total: 1
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 37
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 34
2025-03-26 13:01:05 - INFO - 普通key被查询
2025-03-26 13:01:05 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 34
2025-03-26 13:01:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:01:05 - DEBUG - <==      Total: 1
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 41
2025-03-26 13:01:05 - INFO - 刷新token有效期耗时: 74
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 92
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:38 - DEBUG - <==    Updates: 1
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 111
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:38 - DEBUG - <==      Total: 1
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:38 - DEBUG - <==      Total: 1
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:38 - DEBUG - <==    Updates: 1
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 63
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 39
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:38 - DEBUG - <==      Total: 1
2025-03-26 13:01:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:38 - DEBUG - <==      Total: 1
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:01:38 - INFO - 刷新token有效期耗时: 43
2025-03-26 13:01:39 - INFO - 刷新token有效期耗时: 84
2025-03-26 13:01:40 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:01:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:40 - DEBUG - <==    Updates: 1
2025-03-26 13:01:40 - INFO - 刷新token有效期耗时: 68
2025-03-26 13:01:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:40 - DEBUG - <==      Total: 1
2025-03-26 13:01:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:40 - DEBUG - <==      Total: 1
2025-03-26 13:01:40 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:01:40 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:01:42 - INFO - 刷新token有效期耗时: 79
2025-03-26 13:01:42 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:01:42 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:42 - DEBUG - <==    Updates: 1
2025-03-26 13:01:43 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:01:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:43 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:43 - DEBUG - <==      Total: 1
2025-03-26 13:01:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:43 - DEBUG - <==      Total: 1
2025-03-26 13:01:43 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:01:43 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:01:50 - INFO - 刷新token有效期耗时: 34
2025-03-26 13:01:50 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:01:50 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:50 - DEBUG - <==    Updates: 1
2025-03-26 13:01:51 - INFO - 刷新token有效期耗时: 53
2025-03-26 13:01:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:51 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:51 - DEBUG - <==      Total: 1
2025-03-26 13:01:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:51 - DEBUG - <==      Total: 1
2025-03-26 13:01:51 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:01:51 - INFO - 刷新token有效期耗时: 40
2025-03-26 13:01:52 - INFO - 刷新token有效期耗时: 41
2025-03-26 13:01:52 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:01:52 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:52 - DEBUG - <==    Updates: 1
2025-03-26 13:01:53 - INFO - 刷新token有效期耗时: 59
2025-03-26 13:01:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:01:53 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:01:53 - DEBUG - <==      Total: 1
2025-03-26 13:01:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:01:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:01:53 - DEBUG - <==      Total: 1
2025-03-26 13:01:53 - INFO - 刷新token有效期耗时: 90
2025-03-26 13:01:53 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:02:09 - INFO - 刷新token有效期耗时: 62
2025-03-26 13:02:09 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:02:09 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:02:09 - DEBUG - <==    Updates: 1
2025-03-26 13:02:09 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:02:09 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:02:09 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:02:09 - DEBUG - <==      Total: 1
2025-03-26 13:02:09 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:02:09 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:02:09 - DEBUG - <==      Total: 1
2025-03-26 13:02:09 - INFO - 刷新token有效期耗时: 81
2025-03-26 13:02:09 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:02:20 - INFO - 刷新token有效期耗时: 39
2025-03-26 13:02:20 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:02:20 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:02:20 - DEBUG - <==    Updates: 1
2025-03-26 13:02:20 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:02:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:02:20 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:02:20 - DEBUG - <==      Total: 1
2025-03-26 13:02:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:02:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:02:20 - DEBUG - <==      Total: 1
2025-03-26 13:02:20 - INFO - 刷新token有效期耗时: 37
2025-03-26 13:02:20 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:06:44 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:06:44 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:06:44 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:06:44 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:06:44 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:06:47 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 30260 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:06:47 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:06:47 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:06:48 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:06:48 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:06:48 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 13:06:48 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:06:48 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:06:48 - INFO - Starting service [Tomcat]
2025-03-26 13:06:48 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:06:48 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:06:48 - INFO - Root WebApplicationContext: initialization completed in 975 ms
2025-03-26 13:06:49 - INFO - HikariPool-1 - Starting...
2025-03-26 13:06:49 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:06:49 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:06:49 - DEBUG - ==> Parameters: 
2025-03-26 13:06:49 - DEBUG - <==      Total: 14
2025-03-26 13:06:50 - INFO - Redisson 3.13.6
2025-03-26 13:06:50 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:06:51 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:06:51 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:06:51 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:06:51 - INFO - Started FoodieOdysseyApplication in 3.71 seconds (JVM running for 4.129)
2025-03-26 13:07:54 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:07:54 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:07:54 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:07:54 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:07:55 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:07:58 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 11812 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:07:58 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:07:58 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:07:58 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:07:58 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:07:58 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 13:07:59 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:07:59 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:07:59 - INFO - Starting service [Tomcat]
2025-03-26 13:07:59 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:07:59 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:07:59 - INFO - Root WebApplicationContext: initialization completed in 940 ms
2025-03-26 13:07:59 - INFO - HikariPool-1 - Starting...
2025-03-26 13:07:59 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:07:59 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:07:59 - DEBUG - ==> Parameters: 
2025-03-26 13:07:59 - DEBUG - <==      Total: 14
2025-03-26 13:08:00 - INFO - Redisson 3.13.6
2025-03-26 13:08:01 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:08:01 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:08:01 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:08:01 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:08:01 - INFO - Started FoodieOdysseyApplication in 3.81 seconds (JVM running for 4.232)
2025-03-26 13:08:19 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:08:19 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:08:19 - INFO - Completed initialization in 1 ms
2025-03-26 13:08:19 - INFO - 刷新token有效期耗时: 87
2025-03-26 13:08:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:08:19 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:08:19 - DEBUG - <==      Total: 1
2025-03-26 13:08:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:08:19 - DEBUG - <==      Total: 1
2025-03-26 13:08:19 - INFO - 刷新token有效期耗时: 43
2025-03-26 13:08:19 - INFO - 刷新token有效期耗时: 45
2025-03-26 13:08:19 - INFO - 刷新token有效期耗时: 43
2025-03-26 13:08:19 - INFO - 普通key被查询
2025-03-26 13:08:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:19 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:08:19 - DEBUG - <==      Total: 1
2025-03-26 13:08:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:08:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:08:19 - DEBUG - <==      Total: 1
2025-03-26 13:08:19 - INFO - 刷新token有效期耗时: 42
2025-03-26 13:08:20 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 75
2025-03-26 13:08:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:08:26 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:08:26 - DEBUG - <==      Total: 1
2025-03-26 13:08:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:26 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:08:26 - DEBUG - <==      Total: 1
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 57
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 47
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 47
2025-03-26 13:08:26 - INFO - 普通key被查询
2025-03-26 13:08:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:08:26 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:08:26 - DEBUG - <==      Total: 1
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:08:26 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:08:30 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:08:30 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:08:30 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:08:30 - DEBUG - <==    Updates: 1
2025-03-26 13:08:31 - INFO - 刷新token有效期耗时: 57
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:31 - INFO - 刷新token有效期耗时: 70
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:31 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:08:31 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:08:31 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:08:31 - INFO - 普通key被查询
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:08:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:31 - DEBUG - <==      Total: 1
2025-03-26 13:08:36 - INFO - 刷新token有效期耗时: 50
2025-03-26 13:08:36 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:08:36 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:08:36 - DEBUG - <==    Updates: 1
2025-03-26 13:08:36 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:08:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:08:36 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:08:36 - DEBUG - <==      Total: 1
2025-03-26 13:08:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:08:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:08:36 - DEBUG - <==      Total: 1
2025-03-26 13:12:07 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:12:07 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:12:07 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 13:12:07 - DEBUG - <==      Total: 1
2025-03-26 13:12:07 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:12:07 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:12:07 - DEBUG - <==      Total: 1
2025-03-26 13:12:07 - INFO - 刷新token有效期耗时: 20
2025-03-26 13:12:07 - INFO - 刷新token有效期耗时: 20
2025-03-26 13:12:07 - INFO - 普通key被查询
2025-03-26 13:12:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:12:07 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:12:07 - DEBUG - <==      Total: 1
2025-03-26 13:12:07 - INFO - 刷新token有效期耗时: 102
2025-03-26 13:12:08 - INFO - 刷新token有效期耗时: 66
2025-03-26 13:12:08 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:12:18 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:12:18 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:12:18 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:12:18 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:12:18 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:12:22 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 32496 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:12:22 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:12:22 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:12:22 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:12:22 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:12:22 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 13:12:23 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:12:23 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:12:23 - INFO - Starting service [Tomcat]
2025-03-26 13:12:23 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:12:23 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:12:23 - INFO - Root WebApplicationContext: initialization completed in 1126 ms
2025-03-26 13:12:24 - INFO - HikariPool-1 - Starting...
2025-03-26 13:12:24 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:12:24 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:12:24 - DEBUG - ==> Parameters: 
2025-03-26 13:12:24 - DEBUG - <==      Total: 14
2025-03-26 13:12:25 - INFO - Redisson 3.13.6
2025-03-26 13:12:25 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:12:25 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:12:26 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:12:26 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:12:26 - INFO - Started FoodieOdysseyApplication in 4.239 seconds (JVM running for 4.737)
2025-03-26 13:12:29 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:12:29 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:12:29 - INFO - Completed initialization in 1 ms
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 71
2025-03-26 13:12:29 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:12:29 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 13:12:29 - DEBUG - <==      Total: 1
2025-03-26 13:12:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:12:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:12:29 - DEBUG - <==      Total: 1
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:12:29 - INFO - 普通key被查询
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 43
2025-03-26 13:12:29 - INFO - 刷新token有效期耗时: 45
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 100
2025-03-26 13:12:34 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:12:34 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:12:34 - DEBUG - <==      Total: 1
2025-03-26 13:12:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:12:34 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:12:34 - DEBUG - <==      Total: 1
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:12:34 - INFO - 普通key被查询
2025-03-26 13:12:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:12:34 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:12:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:12:34 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:12:34 - DEBUG - <==      Total: 1
2025-03-26 13:12:34 - DEBUG - <==      Total: 1
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:12:34 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:13:11 - INFO - 刷新token有效期耗时: 24
2025-03-26 13:13:11 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:11 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:11 - DEBUG - <==      Total: 1
2025-03-26 13:13:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:11 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:11 - DEBUG - <==      Total: 1
2025-03-26 13:13:11 - INFO - 刷新token有效期耗时: 42
2025-03-26 13:13:11 - INFO - 刷新token有效期耗时: 42
2025-03-26 13:13:11 - INFO - 普通key被查询
2025-03-26 13:13:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:13:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:11 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:11 - DEBUG - <==      Total: 1
2025-03-26 13:13:11 - DEBUG - <==      Total: 1
2025-03-26 13:13:11 - INFO - 刷新token有效期耗时: 89
2025-03-26 13:13:15 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:13:15 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:13:15 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:15 - DEBUG - <==    Updates: 1
2025-03-26 13:13:15 - INFO - 刷新token有效期耗时: 60
2025-03-26 13:13:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:15 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:15 - DEBUG - <==      Total: 1
2025-03-26 13:13:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:15 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:15 - DEBUG - <==      Total: 1
2025-03-26 13:13:16 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:13:16 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:13:16 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:16 - DEBUG - <==    Updates: 1
2025-03-26 13:13:16 - INFO - 刷新token有效期耗时: 37
2025-03-26 13:13:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:16 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:16 - DEBUG - <==      Total: 1
2025-03-26 13:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:16 - DEBUG - <==      Total: 1
2025-03-26 13:13:17 - INFO - 刷新token有效期耗时: 58
2025-03-26 13:13:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:17 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:13:17 - DEBUG - <==      Total: 1
2025-03-26 13:13:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:17 - DEBUG - <==      Total: 1
2025-03-26 13:13:17 - INFO - 刷新token有效期耗时: 66
2025-03-26 13:13:17 - INFO - 刷新token有效期耗时: 66
2025-03-26 13:13:17 - INFO - 刷新token有效期耗时: 66
2025-03-26 13:13:17 - INFO - 普通key被查询
2025-03-26 13:13:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:17 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:17 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - INFO - 刷新token有效期耗时: 56
2025-03-26 13:13:22 - INFO - 刷新token有效期耗时: 56
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 5
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:22 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:13:22 - DEBUG - <==      Total: 1
2025-03-26 13:13:23 - INFO - 刷新token有效期耗时: 40
2025-03-26 13:13:23 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:23 - DEBUG - ==> Parameters: 
2025-03-26 13:13:23 - DEBUG - <==      Total: 1
2025-03-26 13:13:24 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:13:24 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:24 - DEBUG - ==> Parameters: 
2025-03-26 13:13:24 - DEBUG - <==      Total: 1
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 40
2025-03-26 13:13:25 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:25 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 13:13:25 - DEBUG - <==      Total: 1
2025-03-26 13:13:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:25 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:13:25 - DEBUG - <==      Total: 1
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:13:25 - INFO - 普通key被查询
2025-03-26 13:13:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:13:25 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:13:25 - DEBUG - <==      Total: 1
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:13:25 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:13:30 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:13:30 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:13:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:13:30 - DEBUG - <==    Updates: 1
2025-03-26 13:13:30 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:13:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:13:30 - DEBUG - <==      Total: 1
2025-03-26 13:13:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:30 - DEBUG - <==      Total: 1
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:13:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:13:31 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:13:31 - DEBUG - <==      Total: 1
2025-03-26 13:13:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:31 - DEBUG - <==      Total: 1
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 73
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 73
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 75
2025-03-26 13:13:31 - INFO - 普通key被查询
2025-03-26 13:13:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 45
2025-03-26 13:13:31 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:13:31 - DEBUG - <==      Total: 1
2025-03-26 13:13:31 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:13:34 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:13:34 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:34 - DEBUG - ==> Parameters: 
2025-03-26 13:13:34 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:13:36 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 5
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:36 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:13:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:36 - DEBUG - ==> Parameters: 
2025-03-26 13:13:36 - DEBUG - <==      Total: 1
2025-03-26 13:13:43 - INFO - 刷新token有效期耗时: 38
2025-03-26 13:13:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:43 - DEBUG - ==> Parameters: 
2025-03-26 13:13:43 - DEBUG - <==      Total: 1
2025-03-26 13:13:46 - INFO - 刷新token有效期耗时: 71
2025-03-26 13:13:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:13:46 - DEBUG - ==> Parameters: 
2025-03-26 13:13:46 - DEBUG - <==      Total: 1
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:14:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:14:44 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 13:14:44 - DEBUG - <==      Total: 1
2025-03-26 13:14:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:14:44 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:14:44 - DEBUG - <==      Total: 1
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 110
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 110
2025-03-26 13:14:44 - INFO - 普通key被查询
2025-03-26 13:14:44 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:14:44 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:14:44 - DEBUG - <==      Total: 1
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 42
2025-03-26 13:14:44 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:23:46 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:23:46 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:23:46 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:23:46 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:23:46 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:23:49 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 24780 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:23:49 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:23:49 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:23:49 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:23:49 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:23:49 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 13:23:50 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:23:50 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:23:50 - INFO - Starting service [Tomcat]
2025-03-26 13:23:50 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:23:50 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:23:50 - INFO - Root WebApplicationContext: initialization completed in 1012 ms
2025-03-26 13:23:51 - INFO - HikariPool-1 - Starting...
2025-03-26 13:23:51 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:23:51 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:23:51 - DEBUG - ==> Parameters: 
2025-03-26 13:23:51 - DEBUG - <==      Total: 14
2025-03-26 13:23:52 - INFO - Redisson 3.13.6
2025-03-26 13:23:52 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:23:52 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:23:52 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:23:53 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:23:53 - INFO - Started FoodieOdysseyApplication in 3.808 seconds (JVM running for 4.231)
2025-03-26 13:24:02 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:24:02 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:24:02 - INFO - Completed initialization in 0 ms
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 5
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:02 - DEBUG - <==      Total: 1
2025-03-26 13:24:13 - DEBUG - send success: 028529
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 18361460327(String)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - INFO - 刷新token有效期耗时: 38
2025-03-26 13:24:20 - INFO - 刷新token有效期耗时: 38
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 5
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:20 - DEBUG - <==      Total: 1
2025-03-26 13:24:23 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:24:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:23 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:24:23 - DEBUG - <==      Total: 1
2025-03-26 13:24:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:23 - DEBUG - <==      Total: 1
2025-03-26 13:24:23 - INFO - 刷新token有效期耗时: 82
2025-03-26 13:24:23 - INFO - 刷新token有效期耗时: 82
2025-03-26 13:24:23 - INFO - 刷新token有效期耗时: 82
2025-03-26 13:24:23 - INFO - 普通key被查询
2025-03-26 13:24:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1011)
2025-03-26 13:24:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:23 - DEBUG - <==      Total: 1
2025-03-26 13:24:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:24:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:23 - DEBUG - <==      Total: 1
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 79
2025-03-26 13:24:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:30 - DEBUG - <==      Total: 1
2025-03-26 13:24:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:30 - DEBUG - <==      Total: 1
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 44
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 44
2025-03-26 13:24:30 - INFO - 普通key被查询
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 79
2025-03-26 13:24:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:24:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 13:24:30 - DEBUG - ==> Parameters: 
2025-03-26 13:24:30 - DEBUG - <==      Total: 1
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:24:30 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 13:24:30 - INFO - 刷新token有效期耗时: 27
2025-03-26 13:24:36 - INFO - 刷新token有效期耗时: 20
2025-03-26 13:24:36 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:24:36 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:36 - DEBUG - <==    Updates: 1
2025-03-26 13:24:36 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:24:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:36 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:36 - DEBUG - <==      Total: 1
2025-03-26 13:24:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:36 - DEBUG - <==      Total: 1
2025-03-26 13:24:36 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:24:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1011)
2025-03-26 13:24:36 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:36 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:24:44 - INFO - 刷新token有效期耗时: 33
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 5
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:44 - INFO - 刷新token有效期耗时: 110
2025-03-26 13:24:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:24:44 - DEBUG - ==> Parameters: 
2025-03-26 13:24:44 - DEBUG - <==      Total: 1
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 70
2025-03-26 13:24:46 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:46 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:46 - DEBUG - <==      Total: 1
2025-03-26 13:24:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:46 - DEBUG - <==      Total: 1
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:24:46 - INFO - 普通key被查询
2025-03-26 13:24:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1011)
2025-03-26 13:24:46 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:46 - DEBUG - <==      Total: 1
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:24:46 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:24:50 - INFO - 刷新token有效期耗时: 21
2025-03-26 13:24:50 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 13:24:50 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:50 - DEBUG - <==    Updates: 1
2025-03-26 13:24:50 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:24:50 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:50 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:50 - DEBUG - <==      Total: 1
2025-03-26 13:24:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:50 - DEBUG - <==      Total: 1
2025-03-26 13:24:50 - INFO - 刷新token有效期耗时: 37
2025-03-26 13:24:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 13:24:50 - DEBUG - ==> Parameters: 
2025-03-26 13:24:50 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 13:24:51 - INFO - 刷新token有效期耗时: 22
2025-03-26 13:24:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:24:51 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 13:24:51 - DEBUG - <==      Total: 1
2025-03-26 13:24:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:24:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:24:51 - DEBUG - <==      Total: 1
2025-03-26 13:24:52 - INFO - 刷新token有效期耗时: 103
2025-03-26 13:24:52 - INFO - 刷新token有效期耗时: 103
2025-03-26 13:24:52 - INFO - 刷新token有效期耗时: 103
2025-03-26 13:24:52 - INFO - 普通key被查询
2025-03-26 13:24:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 13:24:52 - DEBUG - ==> Parameters: 
2025-03-26 13:24:52 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 13:24:52 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:24:52 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:24:55 - INFO - 刷新token有效期耗时: 27
2025-03-26 13:24:55 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:24:55 - INFO - 刷新token有效期耗时: 38
2025-03-26 13:24:55 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 13:24:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:55 - DEBUG - <==      Total: 0
2025-03-26 13:24:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 13:24:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:24:55 - DEBUG - <==      Total: 1
2025-03-26 13:24:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 13:24:55 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 13:24:55 - DEBUG - <==      Total: 1
2025-03-26 13:25:01 - INFO - 刷新token有效期耗时: 22
2025-03-26 13:25:01 - INFO - 刷新token有效期耗时: 22
2025-03-26 13:25:01 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 13:25:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:25:01 - DEBUG - <==      Total: 0
2025-03-26 13:25:01 - INFO - 刷新token有效期耗时: 22
2025-03-26 13:25:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 13:25:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:25:01 - DEBUG - <==      Total: 1
2025-03-26 13:25:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 13:25:01 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 13:25:01 - DEBUG - <==      Total: 1
2025-03-26 13:25:09 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:29:45 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:29:45 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:29:45 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:29:45 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:29:45 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:29:50 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 27384 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:29:50 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:29:50 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:29:50 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:29:50 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:29:50 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 13:29:51 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:29:51 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:29:51 - INFO - Starting service [Tomcat]
2025-03-26 13:29:51 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:29:51 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:29:51 - INFO - Root WebApplicationContext: initialization completed in 962 ms
2025-03-26 13:29:51 - INFO - HikariPool-1 - Starting...
2025-03-26 13:29:51 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:29:51 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:29:51 - DEBUG - ==> Parameters: 
2025-03-26 13:29:51 - DEBUG - <==      Total: 14
2025-03-26 13:29:52 - INFO - Redisson 3.13.6
2025-03-26 13:29:52 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:29:53 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:29:53 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:29:53 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:29:53 - INFO - Started FoodieOdysseyApplication in 3.541 seconds (JVM running for 3.953)
2025-03-26 13:29:57 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:29:57 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:29:57 - INFO - Completed initialization in 0 ms
2025-03-26 13:29:58 - INFO - 刷新token有效期耗时: 138
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 5
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:29:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:29:58 - DEBUG - <==      Total: 1
2025-03-26 13:30:11 - DEBUG - send success: 432011
2025-03-26 13:30:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 13:30:18 - DEBUG - ==> Parameters: 13072270550(String)
2025-03-26 13:30:18 - DEBUG - <==      Total: 1
2025-03-26 13:30:18 - INFO - 刷新token有效期耗时: 61
2025-03-26 13:30:18 - INFO - 刷新token有效期耗时: 61
2025-03-26 13:30:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:30:18 - DEBUG - ==> Parameters: 
2025-03-26 13:30:18 - DEBUG - <==      Total: 1
2025-03-26 13:30:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:30:18 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:30:18 - DEBUG - <==      Total: 5
2025-03-26 13:30:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:18 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:18 - DEBUG - <==      Total: 1
2025-03-26 13:30:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:19 - DEBUG - <==      Total: 1
2025-03-26 13:30:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:19 - DEBUG - <==      Total: 1
2025-03-26 13:30:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:19 - DEBUG - <==      Total: 1
2025-03-26 13:30:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:19 - DEBUG - <==      Total: 1
2025-03-26 13:30:20 - INFO - 刷新token有效期耗时: 48
2025-03-26 13:30:20 - INFO - 刷新token有效期耗时: 36
2025-03-26 13:30:20 - INFO - 刷新token有效期耗时: 35
2025-03-26 13:30:20 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 13:30:20 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:30:20 - DEBUG - <==      Total: 0
2025-03-26 13:30:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 13:30:20 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:30:20 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:30:22 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 5
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:22 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:22 - DEBUG - <==      Total: 1
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:30:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:30:23 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:30:23 - DEBUG - <==      Total: 1
2025-03-26 13:30:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:23 - DEBUG - <==      Total: 1
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:30:23 - INFO - 普通key被查询
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 54
2025-03-26 13:30:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:30:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:23 - DEBUG - <==      Total: 1
2025-03-26 13:30:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1011)
2025-03-26 13:30:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:23 - DEBUG - <==      Total: 1
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 25
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 67
2025-03-26 13:30:23 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:30:26 - INFO - 刷新token有效期耗时: 27
2025-03-26 13:30:26 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:30:26 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:30:26 - DEBUG - <==    Updates: 1
2025-03-26 13:30:26 - INFO - 刷新token有效期耗时: 23
2025-03-26 13:30:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:30:26 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:30:26 - DEBUG - <==      Total: 1
2025-03-26 13:30:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:26 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:26 - DEBUG - <==      Total: 1
2025-03-26 13:30:26 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:30:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 13:30:26 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 13:30:26 - DEBUG - <==      Total: 2
2025-03-26 13:30:31 - INFO - 刷新token有效期耗时: 19
2025-03-26 13:30:31 - INFO - 刷新token有效期耗时: 21
2025-03-26 13:30:31 - INFO - 刷新token有效期耗时: 21
2025-03-26 13:30:31 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 13:30:31 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:30:31 - DEBUG - <==      Total: 0
2025-03-26 13:30:31 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 13:30:31 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:30:31 - DEBUG - <==      Total: 1
2025-03-26 13:30:32 - INFO - 刷新token有效期耗时: 27
2025-03-26 13:30:43 - INFO - 刷新token有效期耗时: 69
2025-03-26 13:30:43 - INFO - 刷新token有效期耗时: 69
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 5
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:30:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:30:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:30:43 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:31:38 - INFO - 刷新token有效期耗时: 29
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 5
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:31:38 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:31:38 - DEBUG - <==      Total: 1
2025-03-26 13:31:40 - INFO - 刷新token有效期耗时: 21
2025-03-26 13:31:40 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:31:40 - DEBUG - ==> Parameters: 
2025-03-26 13:31:40 - DEBUG - <==      Total: 1
2025-03-26 13:31:42 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:31:42 - INFO - 刷新token有效期耗时: 44
2025-03-26 13:31:42 - INFO - 刷新token有效期耗时: 44
2025-03-26 13:31:42 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 13:31:42 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:31:42 - DEBUG - <==      Total: 0
2025-03-26 13:31:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 13:31:42 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 13:31:42 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - ERROR - org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:36:04 - INFO - Reconnecting, last destination was /49.235.142.165:6379
2025-03-26 13:36:04 - INFO - Reconnected to 49.235.142.165/<unresolved>:6379
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 19339
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 5940
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 14606
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 14606
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 7083
2025-03-26 13:36:04 - INFO - 刷新token有效期耗时: 5940
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 5
2025-03-26 13:36:04 - DEBUG - <==      Total: 5
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:04 - DEBUG - <==      Total: 1
2025-03-26 13:36:14 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 13:36:14 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 13:36:14 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 13:36:14 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:36:14 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 13:36:14 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 13:36:19 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 23144 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 13:36:19 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 13:36:19 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 13:36:19 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 13:36:19 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 13:36:19 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 13:36:20 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 13:36:20 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 13:36:20 - INFO - Starting service [Tomcat]
2025-03-26 13:36:20 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 13:36:20 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 13:36:20 - INFO - Root WebApplicationContext: initialization completed in 957 ms
2025-03-26 13:36:20 - INFO - HikariPool-1 - Starting...
2025-03-26 13:36:21 - INFO - HikariPool-1 - Start completed.
2025-03-26 13:36:21 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 13:36:21 - DEBUG - ==> Parameters: 
2025-03-26 13:36:21 - DEBUG - <==      Total: 14
2025-03-26 13:36:22 - INFO - Redisson 3.13.6
2025-03-26 13:36:22 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 13:36:22 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 13:36:22 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 13:36:22 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 13:36:22 - INFO - Started FoodieOdysseyApplication in 3.67 seconds (JVM running for 4.099)
2025-03-26 13:36:55 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 13:36:55 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 13:36:55 - INFO - Completed initialization in 1 ms
2025-03-26 13:36:55 - INFO - 刷新token有效期耗时: 94
2025-03-26 13:36:55 - INFO - 刷新token有效期耗时: 94
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 5
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:55 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:36:55 - DEBUG - <==      Total: 1
2025-03-26 13:36:57 - INFO - 刷新token有效期耗时: 24
2025-03-26 13:36:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 13:36:57 - DEBUG - ==> Parameters: 
2025-03-26 13:36:57 - DEBUG - <==      Total: 1
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:36:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:36:58 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 13:36:58 - DEBUG - <==      Total: 1
2025-03-26 13:36:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:36:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:36:58 - DEBUG - <==      Total: 1
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 31
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 32
2025-03-26 13:36:58 - INFO - 普通key被查询
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 80
2025-03-26 13:36:58 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:36:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:36:58 - DEBUG - <==      Total: 1
2025-03-26 13:36:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 13:36:58 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 13:36:58 - DEBUG - <==      Total: 2
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 37
2025-03-26 13:36:58 - INFO - 刷新token有效期耗时: 30
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:37:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:37:43 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:37:43 - DEBUG - <==      Total: 1
2025-03-26 13:37:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:37:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:37:43 - DEBUG - <==      Total: 1
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 74
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 75
2025-03-26 13:37:43 - INFO - 普通key被查询
2025-03-26 13:37:43 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 13:37:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1011)
2025-03-26 13:37:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 13:37:43 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 13:37:43 - DEBUG - <==      Total: 1
2025-03-26 13:37:43 - DEBUG - <==      Total: 1
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 59
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 28
2025-03-26 13:37:43 - INFO - 刷新token有效期耗时: 44
2025-03-26 13:37:48 - INFO - 刷新token有效期耗时: 47
2025-03-26 13:37:48 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 13:37:48 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:37:48 - DEBUG - <==    Updates: 1
2025-03-26 13:37:48 - INFO - 刷新token有效期耗时: 19
2025-03-26 13:37:48 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:37:48 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:37:48 - DEBUG - <==      Total: 1
2025-03-26 13:37:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:37:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:37:48 - DEBUG - <==      Total: 1
2025-03-26 13:37:48 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:37:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 13:37:48 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 13:37:48 - DEBUG - <==      Total: 2
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 43
2025-03-26 13:37:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 13:37:53 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 13:37:53 - DEBUG - <==      Total: 1
2025-03-26 13:37:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 13:37:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 13:37:53 - DEBUG - <==      Total: 1
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 35
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 35
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 35
2025-03-26 13:37:53 - INFO - 普通key被查询
2025-03-26 13:37:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 13:37:53 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 13:37:53 - DEBUG - <==      Total: 2
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 48
2025-03-26 13:37:53 - INFO - 刷新token有效期耗时: 26
2025-03-26 13:37:55 - INFO - 刷新token有效期耗时: 48
2025-03-26 13:37:55 - INFO - 刷新token有效期耗时: 77
2025-03-26 14:09:05 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:09:05 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:09:05 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 14:09:05 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:09:05 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:09:09 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 26824 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:09:09 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:09:09 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:09:10 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:09:10 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:09:10 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 14:09:10 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:09:10 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:09:10 - INFO - Starting service [Tomcat]
2025-03-26 14:09:10 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:09:10 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:09:10 - INFO - Root WebApplicationContext: initialization completed in 1003 ms
2025-03-26 14:09:11 - INFO - HikariPool-1 - Starting...
2025-03-26 14:09:11 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:09:11 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:09:11 - DEBUG - ==> Parameters: 
2025-03-26 14:09:11 - DEBUG - <==      Total: 14
2025-03-26 14:09:12 - INFO - Redisson 3.13.6
2025-03-26 14:09:12 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 14:09:12 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 14:09:12 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 14:09:12 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 14:09:12 - INFO - Started FoodieOdysseyApplication in 3.349 seconds (JVM running for 3.767)
2025-03-26 14:09:20 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 14:09:20 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 14:09:20 - INFO - Completed initialization in 1 ms
2025-03-26 14:09:20 - INFO - 刷新token有效期耗时: 84
2025-03-26 14:09:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:09:20 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 14:09:20 - DEBUG - <==      Total: 1
2025-03-26 14:09:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:09:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:09:20 - DEBUG - <==      Total: 1
2025-03-26 14:09:20 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:20 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:20 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:20 - INFO - 普通key被查询
2025-03-26 14:09:20 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:09:20 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:09:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:09:20 - DEBUG - <==      Total: 1
2025-03-26 14:09:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 14:09:20 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:09:20 - DEBUG - <==      Total: 2
2025-03-26 14:09:20 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:20 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:20 - DEBUG - <==      Total: 0
2025-03-26 14:09:22 - INFO - 刷新token有效期耗时: 28
2025-03-26 14:09:22 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:09:22 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:22 - DEBUG - <==    Updates: 1
2025-03-26 14:09:25 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:09:25 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:09:25 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 14:09:25 - DEBUG - <==      Total: 1
2025-03-26 14:09:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:09:25 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:09:25 - DEBUG - <==      Total: 1
2025-03-26 14:09:25 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:25 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:25 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:25 - INFO - 普通key被查询
2025-03-26 14:09:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 14:09:25 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:09:25 - DEBUG - <==      Total: 2
2025-03-26 14:09:25 - INFO - 刷新token有效期耗时: 30
2025-03-26 14:09:25 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:25 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:25 - DEBUG - <==      Total: 1
2025-03-26 14:09:27 - INFO - 刷新token有效期耗时: 28
2025-03-26 14:09:27 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:27 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:27 - DEBUG - <==    Updates: 1
2025-03-26 14:09:30 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:09:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:09:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 14:09:30 - DEBUG - <==      Total: 1
2025-03-26 14:09:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:09:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:09:30 - DEBUG - <==      Total: 1
2025-03-26 14:09:30 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:09:30 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:09:30 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:09:30 - INFO - 普通key被查询
2025-03-26 14:09:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:09:30 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 14:09:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 14:09:30 - DEBUG - <==      Total: 1
2025-03-26 14:09:30 - DEBUG - ==> Parameters: 
2025-03-26 14:09:30 - INFO - 刷新token有效期耗时: 20
2025-03-26 14:09:30 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:30 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:30 - DEBUG - <==      Total: 0
2025-03-26 14:09:30 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 14:09:31 - INFO - 刷新token有效期耗时: 23
2025-03-26 14:09:31 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:09:31 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:31 - DEBUG - <==    Updates: 1
2025-03-26 14:09:32 - INFO - 刷新token有效期耗时: 20
2025-03-26 14:09:32 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:32 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:32 - DEBUG - <==    Updates: 1
2025-03-26 14:09:34 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:09:34 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:09:34 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 14:09:34 - DEBUG - <==      Total: 1
2025-03-26 14:09:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:09:34 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:09:34 - DEBUG - <==      Total: 1
2025-03-26 14:09:35 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:09:35 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:09:35 - INFO - 普通key被查询
2025-03-26 14:09:35 - INFO - 刷新token有效期耗时: 20
2025-03-26 14:09:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 14:09:35 - DEBUG - ==> Parameters: 
2025-03-26 14:09:35 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 14:09:35 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:09:35 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:09:35 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:09:35 - DEBUG - <==      Total: 0
2025-03-26 14:10:04 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:10:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 14:10:05 - DEBUG - ==> Parameters: 
2025-03-26 14:10:05 - DEBUG - <==      Total: 1
2025-03-26 14:10:06 - INFO - 刷新token有效期耗时: 23
2025-03-26 14:10:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:10:06 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 14:10:06 - DEBUG - <==      Total: 1
2025-03-26 14:10:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:10:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:10:06 - DEBUG - <==      Total: 1
2025-03-26 14:10:06 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:10:06 - INFO - 普通key被查询
2025-03-26 14:10:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:10:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 14:10:06 - DEBUG - <==      Total: 1
2025-03-26 14:10:06 - INFO - 刷新token有效期耗时: 27
2025-03-26 14:10:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN ()) order by field(id, )
2025-03-26 14:10:06 - DEBUG - ==> Parameters: 
2025-03-26 14:10:06 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/UserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,phone,password,nick_name,icon,create_time,update_time  FROM tb_user     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy103.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.BlogServiceImpl.queryBlogLikes(BlogServiceImpl.java:126)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ba1f2114.queryBlogLikes(<generated>)
	at org.jwj.fo.controller.BlogController.queryBlogLikes(BlogController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 14:10:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:10:06 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:10:06 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:10:06 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:10:06 - DEBUG - <==      Total: 0
2025-03-26 14:12:13 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:12:13 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:12:13 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 14:12:13 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:12:13 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:12:17 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 17716 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:12:17 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:12:17 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:12:17 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:12:17 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:12:17 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 14:12:18 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:12:18 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:12:18 - INFO - Starting service [Tomcat]
2025-03-26 14:12:18 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:12:18 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:12:18 - INFO - Root WebApplicationContext: initialization completed in 975 ms
2025-03-26 14:12:18 - INFO - HikariPool-1 - Starting...
2025-03-26 14:12:18 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:12:18 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:12:18 - DEBUG - ==> Parameters: 
2025-03-26 14:12:18 - DEBUG - <==      Total: 14
2025-03-26 14:12:19 - INFO - Redisson 3.13.6
2025-03-26 14:12:19 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 14:12:19 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 14:12:20 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 14:12:20 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 14:12:20 - INFO - Started FoodieOdysseyApplication in 3.321 seconds (JVM running for 3.754)
2025-03-26 14:12:26 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 14:12:26 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 14:12:26 - INFO - Completed initialization in 1 ms
2025-03-26 14:12:26 - INFO - 刷新token有效期耗时: 70
2025-03-26 14:12:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:12:26 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 14:12:26 - DEBUG - <==      Total: 1
2025-03-26 14:12:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:12:26 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:12:26 - DEBUG - <==      Total: 1
2025-03-26 14:12:26 - INFO - 刷新token有效期耗时: 30
2025-03-26 14:12:26 - INFO - 刷新token有效期耗时: 29
2025-03-26 14:12:26 - INFO - 刷新token有效期耗时: 29
2025-03-26 14:12:26 - INFO - 普通key被查询
2025-03-26 14:12:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:12:26 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 14:12:26 - DEBUG - <==      Total: 1
2025-03-26 14:12:26 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:12:26 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:12:26 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:12:26 - DEBUG - <==      Total: 0
2025-03-26 14:12:29 - INFO - 刷新token有效期耗时: 20
2025-03-26 14:12:29 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:12:29 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:12:29 - DEBUG - <==    Updates: 1
2025-03-26 14:12:33 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:12:33 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:12:33 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:12:33 - DEBUG - <==    Updates: 1
2025-03-26 14:12:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:12:38 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:12:38 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 14:12:38 - DEBUG - <==      Total: 1
2025-03-26 14:12:38 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:12:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:12:38 - DEBUG - <==      Total: 1
2025-03-26 14:12:38 - INFO - 刷新token有效期耗时: 23
2025-03-26 14:12:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:12:38 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:12:38 - INFO - 普通key被查询
2025-03-26 14:12:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:12:38 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 14:12:38 - DEBUG - <==      Total: 1
2025-03-26 14:12:38 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:12:38 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:12:38 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:12:38 - DEBUG - <==      Total: 0
2025-03-26 14:12:39 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:12:39 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:12:39 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:12:39 - DEBUG - <==    Updates: 1
2025-03-26 14:12:47 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:12:47 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:12:47 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 14:12:47 - DEBUG - <==      Total: 1
2025-03-26 14:12:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:12:47 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:12:47 - DEBUG - <==      Total: 1
2025-03-26 14:12:47 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:12:47 - INFO - 普通key被查询
2025-03-26 14:12:47 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:12:47 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:12:47 - INFO - 刷新token有效期耗时: 23
2025-03-26 14:12:47 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:12:47 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:12:47 - DEBUG - <==      Total: 0
2025-03-26 14:12:48 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:12:48 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:12:48 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 14:12:48 - DEBUG - <==    Updates: 1
2025-03-26 14:12:52 - INFO - 刷新token有效期耗时: 20
2025-03-26 14:12:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:12:52 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 14:12:52 - DEBUG - <==      Total: 1
2025-03-26 14:12:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:12:52 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 14:12:52 - DEBUG - <==      Total: 1
2025-03-26 14:12:53 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:12:53 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:12:53 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:12:53 - INFO - 普通key被查询
2025-03-26 14:12:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:12:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:12:53 - DEBUG - <==      Total: 1
2025-03-26 14:12:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 14:12:53 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:12:53 - DEBUG - <==      Total: 2
2025-03-26 14:12:53 - INFO - 刷新token有效期耗时: 16
2025-03-26 14:12:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:12:53 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:12:53 - DEBUG - <==      Total: 0
2025-03-26 14:12:54 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:12:54 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 14:12:54 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:12:54 - DEBUG - <==    Updates: 1
2025-03-26 14:12:57 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:12:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 14:12:57 - DEBUG - ==> Parameters: 
2025-03-26 14:12:57 - DEBUG - <==      Total: 1
2025-03-26 14:12:59 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:12:59 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:12:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 14:12:59 - DEBUG - ==> Parameters: 
2025-03-26 14:12:59 - DEBUG - <==      Total: 1
2025-03-26 14:12:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 14:12:59 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 14:12:59 - DEBUG - <==      Total: 10
2025-03-26 14:13:05 - INFO - 刷新token有效期耗时: 19
2025-03-26 14:13:05 - DEBUG - 文件上传成功，/blogs/10/12/1b9a8cec-fb0d-4e31-bdf2-ff8bef15e1fb.jpg
2025-03-26 14:13:14 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:14 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 14:13:14 - DEBUG - ==> Parameters: 3(Long), 1474(Long), 测试(String), /imgs/blogs/10/12/1b9a8cec-fb0d-4e31-bdf2-ff8bef15e1fb.jpg(String), 测试(String)
2025-03-26 14:13:14 - DEBUG - <==    Updates: 1
2025-03-26 14:13:14 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:13:15 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:15 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:15 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 14:13:15 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 14:13:15 - DEBUG - <==      Total: 0
2025-03-26 14:13:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 14:13:15 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 14:13:15 - DEBUG - <==      Total: 1
2025-03-26 14:13:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 14:13:15 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 14:13:15 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:16 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 6
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:16 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 14:13:16 - DEBUG - <==      Total: 1
2025-03-26 14:13:17 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:13:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 14:13:17 - DEBUG - ==> Parameters: 
2025-03-26 14:13:17 - DEBUG - <==      Total: 1
2025-03-26 14:13:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:13:18 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 14:13:18 - DEBUG - <==      Total: 1
2025-03-26 14:13:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:13:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 14:13:18 - DEBUG - <==      Total: 1
2025-03-26 14:13:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:13:18 - INFO - 普通key被查询
2025-03-26 14:13:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:13:18 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 14:13:18 - DEBUG - <==      Total: 1
2025-03-26 14:16:30 - INFO - 刷新token有效期耗时: 25
2025-03-26 14:16:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:16:30 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 14:16:30 - DEBUG - <==      Total: 1
2025-03-26 14:16:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:16:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:16:30 - DEBUG - <==      Total: 1
2025-03-26 14:16:31 - INFO - 刷新token有效期耗时: 22
2025-03-26 14:16:31 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:16:31 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:16:31 - INFO - 普通key被查询
2025-03-26 14:16:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:16:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:16:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 14:16:31 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:16:31 - DEBUG - <==      Total: 1
2025-03-26 14:16:31 - DEBUG - <==      Total: 2
2025-03-26 14:16:31 - INFO - 刷新token有效期耗时: 23
2025-03-26 14:16:31 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:16:31 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:16:31 - DEBUG - <==      Total: 1
2025-03-26 14:16:32 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:16:32 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:16:32 - INFO - 刷新token有效期耗时: 16
2025-03-26 14:34:35 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:34:35 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:34:35 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 14:34:35 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:34:41 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 5104 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:34:41 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:34:41 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:34:41 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:34:41 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:34:41 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 14:34:41 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:34:41 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:34:41 - INFO - Starting service [Tomcat]
2025-03-26 14:34:41 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:34:42 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:34:42 - INFO - Root WebApplicationContext: initialization completed in 948 ms
2025-03-26 14:34:42 - INFO - HikariPool-1 - Starting...
2025-03-26 14:34:42 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:34:42 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:34:42 - DEBUG - ==> Parameters: 
2025-03-26 14:34:42 - DEBUG - <==      Total: 14
2025-03-26 14:34:43 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'blogServiceImpl': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-03-26 14:34:43 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:34:43 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:34:43 - INFO - Stopping service [Tomcat]
2025-03-26 14:34:43 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 14:34:43 - ERROR - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   blogController
┌─────┐
|  blogServiceImpl (field private org.jwj.fo.service.IUserService org.jwj.fo.service.impl.BlogServiceImpl.userService)
↑     ↓
|  userServiceImpl
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-03-26 14:35:13 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 2224 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:35:13 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:35:13 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:35:13 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:35:13 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:35:13 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 14:35:14 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:35:14 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:35:14 - INFO - Starting service [Tomcat]
2025-03-26 14:35:14 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:35:14 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:35:14 - INFO - Root WebApplicationContext: initialization completed in 970 ms
2025-03-26 14:35:14 - INFO - HikariPool-1 - Starting...
2025-03-26 14:35:15 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:35:15 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:35:15 - DEBUG - ==> Parameters: 
2025-03-26 14:35:15 - DEBUG - <==      Total: 14
2025-03-26 14:35:15 - INFO - Redisson 3.13.6
2025-03-26 14:35:15 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 14:35:16 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 14:35:16 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 14:35:16 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 14:35:16 - INFO - Started FoodieOdysseyApplication in 3.28 seconds (JVM running for 3.692)
2025-03-26 14:35:23 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 14:35:23 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 14:35:23 - INFO - Completed initialization in 0 ms
2025-03-26 14:35:24 - INFO - 刷新token有效期耗时: 74
2025-03-26 14:35:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 14:35:24 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 14:35:24 - DEBUG - <==      Total: 1
2025-03-26 14:35:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:35:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:35:24 - DEBUG - <==      Total: 1
2025-03-26 14:35:24 - INFO - 刷新token有效期耗时: 26
2025-03-26 14:35:24 - INFO - 刷新token有效期耗时: 27
2025-03-26 14:35:24 - INFO - 刷新token有效期耗时: 27
2025-03-26 14:35:24 - INFO - 普通key被查询
2025-03-26 14:35:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 14:35:24 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 14:35:24 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 14:35:24 - DEBUG - <==      Total: 2
2025-03-26 14:35:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 14:35:24 - DEBUG - <==      Total: 1
2025-03-26 14:35:24 - INFO - 刷新token有效期耗时: 28
2025-03-26 14:35:24 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:35:24 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:35:24 - DEBUG - <==      Total: 1
2025-03-26 14:35:25 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:35:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:35:25 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:35:25 - DEBUG - <==      Total: 1
2025-03-26 14:35:25 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:35:26 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:35:26 - INFO - 刷新token有效期耗时: 21
2025-03-26 14:35:26 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:35:26 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:35:26 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:35:26 - DEBUG - <==      Total: 1
2025-03-26 14:35:26 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 14:35:26 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:35:26 - DEBUG - <==      Total: 0
2025-03-26 14:35:26 - INFO - 刷新token有效期耗时: 32
2025-03-26 14:36:40 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:36:40 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:36:40 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 14:36:40 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:36:40 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:36:44 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 12848 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:36:44 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:36:44 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:36:45 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:36:45 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:36:45 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 14:36:45 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:36:45 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:36:45 - INFO - Starting service [Tomcat]
2025-03-26 14:36:45 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:36:45 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:36:45 - INFO - Root WebApplicationContext: initialization completed in 979 ms
2025-03-26 14:36:46 - INFO - HikariPool-1 - Starting...
2025-03-26 14:36:46 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:36:46 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:36:46 - DEBUG - ==> Parameters: 
2025-03-26 14:36:46 - DEBUG - <==      Total: 14
2025-03-26 14:36:47 - INFO - Redisson 3.13.6
2025-03-26 14:36:47 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 14:36:47 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 14:36:47 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 14:36:47 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 14:36:47 - INFO - Started FoodieOdysseyApplication in 3.307 seconds (JVM running for 3.744)
2025-03-26 14:36:53 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 14:36:53 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 14:36:53 - INFO - Completed initialization in 1 ms
2025-03-26 14:36:53 - INFO - 刷新token有效期耗时: 71
2025-03-26 14:36:53 - INFO - 刷新token有效期耗时: 71
2025-03-26 14:36:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:36:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:36:53 - DEBUG - <==      Total: 1
2025-03-26 14:36:53 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:36:53 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:36:53 - INFO - 刷新token有效期耗时: 24
2025-03-26 14:36:53 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 14:36:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:36:53 - DEBUG - <==      Total: 0
2025-03-26 14:36:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:36:53 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:36:53 - DEBUG - <==      Total: 1
2025-03-26 14:36:53 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 14:36:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:36:53 - DEBUG - <==      Total: 1
2025-03-26 14:36:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 14:36:53 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 14:36:53 - DEBUG - <==      Total: 2
2025-03-26 14:36:54 - WARN - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-03-26 14:36:54 - INFO - 刷新token有效期耗时: 15
2025-03-26 14:42:28 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 14:42:28 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 14:42:28 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 14:42:28 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 14:42:28 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 14:42:28 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 14:42:28 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 14:42:28 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 14:42:28 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 14:42:28 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 14:42:28 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 14:42:28 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:42:28 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 14:42:30 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 4624 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 14:42:30 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 14:42:30 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 14:42:31 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 14:42:31 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 14:42:31 - INFO - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-03-26 14:42:31 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 14:42:31 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 14:42:31 - INFO - Starting service [Tomcat]
2025-03-26 14:42:31 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 14:42:31 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 14:42:31 - INFO - Root WebApplicationContext: initialization completed in 1022 ms
2025-03-26 14:42:32 - INFO - HikariPool-1 - Starting...
2025-03-26 14:42:32 - INFO - HikariPool-1 - Start completed.
2025-03-26 14:42:32 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 14:42:32 - DEBUG - ==> Parameters: 
2025-03-26 14:42:32 - DEBUG - <==      Total: 14
2025-03-26 14:42:33 - INFO - Redisson 3.13.6
2025-03-26 14:42:33 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 14:42:33 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 14:42:34 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 14:42:34 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 14:42:34 - INFO - Started FoodieOdysseyApplication in 3.396 seconds (JVM running for 3.891)
2025-03-26 14:43:11 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 14:43:11 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 14:43:11 - INFO - Completed initialization in 0 ms
2025-03-26 14:43:11 - INFO - 刷新token有效期耗时: 71
2025-03-26 14:43:11 - INFO - 刷新token有效期耗时: 71
2025-03-26 14:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 14:43:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:43:11 - DEBUG - <==      Total: 1
2025-03-26 14:43:11 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:43:11 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:43:11 - INFO - 刷新token有效期耗时: 18
2025-03-26 14:43:11 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 14:43:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:43:11 - DEBUG - <==      Total: 0
2025-03-26 14:43:11 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 14:43:11 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 14:43:11 - DEBUG - <==      Total: 1
2025-03-26 14:43:11 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 14:43:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 14:43:11 - DEBUG - <==      Total: 1
2025-03-26 14:43:11 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 14:43:11 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 14:43:11 - DEBUG - <==      Total: 2
2025-03-26 14:43:13 - WARN - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2025-03-26 14:43:13 - INFO - 刷新token有效期耗时: 14
2025-03-26 15:03:29 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 15:03:29 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 15:03:29 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 15:03:29 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:03:29 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:03:36 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 22652 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 15:03:36 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 15:03:36 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 15:03:37 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 15:03:37 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 15:03:37 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 15:03:38 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 15:03:38 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 15:03:38 - INFO - Starting service [Tomcat]
2025-03-26 15:03:38 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 15:03:38 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 15:03:38 - INFO - Root WebApplicationContext: initialization completed in 1368 ms
2025-03-26 15:03:38 - INFO - HikariPool-1 - Starting...
2025-03-26 15:03:38 - INFO - HikariPool-1 - Start completed.
2025-03-26 15:03:38 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 15:03:38 - DEBUG - ==> Parameters: 
2025-03-26 15:03:38 - DEBUG - <==      Total: 14
2025-03-26 15:03:39 - INFO - Redisson 3.13.6
2025-03-26 15:03:39 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 15:03:49 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'voucherOrderController': Unsatisfied dependency expressed through field 'voucherOrderService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
2025-03-26 15:03:49 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 15:03:49 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 15:03:49 - INFO - Stopping service [Tomcat]
2025-03-26 15:03:49 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 15:03:50 - ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'voucherOrderController': Unsatisfied dependency expressed through field 'voucherOrderService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 31 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 47 common frames omitted
Caused by: org.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 23 of 24 were initialized. Redis server: /49.235.142.165:6379
	at org.redisson.connection.pool.ConnectionPool$1.lambda$run$0(ConnectionPool.java:159)
	at org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:183)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:96)
	at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:329)
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$1(ConnectionPool.java:295)
	at org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:183)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:96)
	at org.redisson.client.RedisClient$2$2.run(RedisClient.java:248)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /49.235.142.165:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	... 8 common frames omitted
2025-03-26 15:04:37 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 12892 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 15:04:37 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 15:04:37 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 15:04:38 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 15:04:38 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 15:04:38 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 15:04:38 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 15:04:38 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 15:04:38 - INFO - Starting service [Tomcat]
2025-03-26 15:04:38 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 15:04:38 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 15:04:38 - INFO - Root WebApplicationContext: initialization completed in 914 ms
2025-03-26 15:04:39 - INFO - HikariPool-1 - Starting...
2025-03-26 15:04:39 - INFO - HikariPool-1 - Start completed.
2025-03-26 15:04:39 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 15:04:39 - DEBUG - ==> Parameters: 
2025-03-26 15:04:39 - DEBUG - <==      Total: 14
2025-03-26 15:04:40 - INFO - Redisson 3.13.6
2025-03-26 15:04:40 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 15:04:40 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 15:04:40 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 15:04:40 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 15:04:40 - INFO - Started FoodieOdysseyApplication in 3.216 seconds (JVM running for 3.639)
2025-03-26 15:04:46 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 15:04:46 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 15:04:46 - INFO - Completed initialization in 0 ms
2025-03-26 15:04:46 - INFO - 刷新token有效期耗时: 84
2025-03-26 15:04:46 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:04:46 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:04:46 - DEBUG - <==      Total: 1
2025-03-26 15:04:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:04:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:04:46 - DEBUG - <==      Total: 1
2025-03-26 15:04:46 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:04:46 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:04:46 - INFO - 普通key被查询
2025-03-26 15:04:46 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:04:46 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:04:46 - DEBUG - <==      Total: 1
2025-03-26 15:04:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:04:46 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:04:46 - DEBUG - <==      Total: 2
2025-03-26 15:04:46 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:04:46 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:04:46 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:04:46 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:04:46 - DEBUG - <==      Total: 1
2025-03-26 15:04:47 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:04:47 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:04:47 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:04:47 - DEBUG - <==    Updates: 1
2025-03-26 15:04:49 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:04:49 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:04:49 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:04:49 - DEBUG - <==    Updates: 1
2025-03-26 15:05:18 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:05:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:05:18 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 15:05:18 - DEBUG - <==      Total: 1
2025-03-26 15:05:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:05:18 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:05:18 - DEBUG - <==      Total: 1
2025-03-26 15:05:18 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:05:18 - INFO - 刷新token有效期耗时: 18
2025-03-26 15:05:18 - INFO - 普通key被查询
2025-03-26 15:05:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:05:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:05:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:05:18 - DEBUG - <==      Total: 1
2025-03-26 15:05:18 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:18 - DEBUG - <==      Total: 2
2025-03-26 15:05:18 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:05:18 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:05:18 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:18 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:18 - DEBUG - <==      Total: 1
2025-03-26 15:05:20 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:05:20 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:20 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:20 - DEBUG - <==    Updates: 1
2025-03-26 15:05:20 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:05:20 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:05:20 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:20 - DEBUG - <==    Updates: 1
2025-03-26 15:05:34 - INFO - 刷新token有效期耗时: 66
2025-03-26 15:05:34 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:05:34 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 15:05:34 - DEBUG - <==      Total: 1
2025-03-26 15:05:34 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:05:34 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:05:34 - DEBUG - <==      Total: 1
2025-03-26 15:05:35 - INFO - 刷新token有效期耗时: 59
2025-03-26 15:05:35 - INFO - 刷新token有效期耗时: 59
2025-03-26 15:05:35 - INFO - 刷新token有效期耗时: 60
2025-03-26 15:05:35 - INFO - 普通key被查询
2025-03-26 15:05:35 - INFO - 刷新token有效期耗时: 189
2025-03-26 15:05:35 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:05:35 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:35 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:35 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:35 - DEBUG - <==      Total: 2
2025-03-26 15:05:35 - DEBUG - <==      Total: 1
2025-03-26 15:05:40 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:05:40 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:40 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:40 - DEBUG - <==    Updates: 1
2025-03-26 15:05:46 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:05:46 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:05:46 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:05:46 - DEBUG - <==    Updates: 1
2025-03-26 15:05:53 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:05:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:05:53 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 15:05:53 - DEBUG - <==      Total: 1
2025-03-26 15:05:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:05:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:05:53 - DEBUG - <==      Total: 1
2025-03-26 15:05:53 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:05:53 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:05:53 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:05:53 - INFO - 普通key被查询
2025-03-26 15:05:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:05:53 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 15:05:53 - DEBUG - <==      Total: 1
2025-03-26 15:05:53 - INFO - 刷新token有效期耗时: 41
2025-03-26 15:05:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:53 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:05:53 - DEBUG - <==      Total: 1
2025-03-26 15:05:54 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:05:54 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:05:54 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:05:54 - DEBUG - <==    Updates: 1
2025-03-26 15:05:55 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:05:55 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:05:55 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:05:55 - DEBUG - <==    Updates: 1
2025-03-26 15:06:04 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:06:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:06:04 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 15:06:04 - DEBUG - <==      Total: 1
2025-03-26 15:06:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:06:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:06:04 - DEBUG - <==      Total: 1
2025-03-26 15:06:04 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:06:04 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:06:04 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:06:04 - INFO - 普通key被查询
2025-03-26 15:06:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:06:04 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:06:04 - DEBUG - <==      Total: 1
2025-03-26 15:06:04 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:06:04 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:06:04 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:06:04 - DEBUG - <==      Total: 1
2025-03-26 15:06:05 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:06:05 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:06:05 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:06:05 - DEBUG - <==    Updates: 1
2025-03-26 15:06:06 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:06:06 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:06:06 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:06:06 - DEBUG - <==    Updates: 1
2025-03-26 15:07:06 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:07:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:07:06 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 15:07:06 - DEBUG - <==      Total: 1
2025-03-26 15:07:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:07:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:07:06 - DEBUG - <==      Total: 1
2025-03-26 15:07:06 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:07:06 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:07:06 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:07:06 - INFO - 普通key被查询
2025-03-26 15:07:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:07:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:07:06 - DEBUG - <==      Total: 1
2025-03-26 15:07:06 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:07:06 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:07:06 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:07:06 - DEBUG - <==      Total: 0
2025-03-26 15:07:07 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:07:07 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:07:07 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:07:07 - DEBUG - <==    Updates: 1
2025-03-26 15:07:16 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:07:16 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:07:16 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:07:16 - DEBUG - <==    Updates: 1
2025-03-26 15:07:17 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:07:17 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:07:17 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:07:17 - DEBUG - <==    Updates: 1
2025-03-26 15:07:25 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:07:25 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:07:25 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:07:25 - DEBUG - <==      Total: 1
2025-03-26 15:07:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:07:25 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:07:25 - DEBUG - <==      Total: 1
2025-03-26 15:07:26 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:07:26 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:07:26 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:07:26 - INFO - 普通key被查询
2025-03-26 15:07:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:07:26 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:07:26 - DEBUG - <==      Total: 1
2025-03-26 15:07:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:07:26 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:07:26 - DEBUG - <==      Total: 2
2025-03-26 15:07:26 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:07:26 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:07:26 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:07:26 - DEBUG - <==      Total: 0
2025-03-26 15:07:26 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:07:26 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:07:26 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:07:26 - DEBUG - <==    Updates: 1
2025-03-26 15:08:17 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:08:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:08:17 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 15:08:17 - DEBUG - <==      Total: 1
2025-03-26 15:08:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:08:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:08:17 - DEBUG - <==      Total: 1
2025-03-26 15:08:17 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:08:17 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:08:17 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:08:17 - INFO - 普通key被查询
2025-03-26 15:08:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:08:17 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:08:17 - DEBUG - <==      Total: 1
2025-03-26 15:08:17 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:08:17 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:08:17 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:08:17 - DEBUG - <==      Total: 1
2025-03-26 15:08:21 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:08:21 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:08:21 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:08:21 - DEBUG - <==    Updates: 1
2025-03-26 15:08:24 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:08:24 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:08:24 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:08:24 - DEBUG - <==    Updates: 1
2025-03-26 15:09:03 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 15:09:03 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 15:09:03 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 15:09:03 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:09:04 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:09:05 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 19332 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 15:09:05 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 15:09:05 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 15:09:06 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 15:09:06 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 15:09:06 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 15:09:06 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 15:09:06 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 15:09:06 - INFO - Starting service [Tomcat]
2025-03-26 15:09:06 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 15:09:06 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 15:09:06 - INFO - Root WebApplicationContext: initialization completed in 936 ms
2025-03-26 15:09:07 - INFO - HikariPool-1 - Starting...
2025-03-26 15:09:07 - INFO - HikariPool-1 - Start completed.
2025-03-26 15:09:07 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 15:09:07 - DEBUG - ==> Parameters: 
2025-03-26 15:09:07 - DEBUG - <==      Total: 14
2025-03-26 15:09:08 - INFO - Redisson 3.13.6
2025-03-26 15:09:08 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 15:09:08 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 15:09:08 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 15:09:08 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 15:09:08 - INFO - Started FoodieOdysseyApplication in 3.238 seconds (JVM running for 3.648)
2025-03-26 15:09:15 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 15:09:15 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 15:09:15 - INFO - Completed initialization in 1 ms
2025-03-26 15:09:15 - INFO - 刷新token有效期耗时: 78
2025-03-26 15:09:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:09:15 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 15:09:15 - DEBUG - <==      Total: 1
2025-03-26 15:09:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:09:15 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:09:15 - DEBUG - <==      Total: 1
2025-03-26 15:09:15 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:09:15 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:09:15 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:09:15 - INFO - 普通key被查询
2025-03-26 15:09:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:09:15 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:09:15 - DEBUG - <==      Total: 1
2025-03-26 15:09:15 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:09:15 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:09:15 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:09:15 - DEBUG - <==      Total: 0
2025-03-26 15:09:16 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:09:16 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:09:16 - DEBUG - ==> Parameters: 1474(Long), 1(Long)
2025-03-26 15:09:16 - DEBUG - <==    Updates: 1
2025-03-26 15:09:27 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:09:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:09:27 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:09:27 - DEBUG - <==      Total: 1
2025-03-26 15:09:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:09:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:09:27 - DEBUG - <==      Total: 1
2025-03-26 15:09:27 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:09:27 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:09:27 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:09:27 - INFO - 普通key被查询
2025-03-26 15:09:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:09:27 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:09:27 - DEBUG - <==      Total: 1
2025-03-26 15:09:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:09:27 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:09:27 - DEBUG - <==      Total: 2
2025-03-26 15:09:27 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:09:27 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:09:27 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:09:27 - DEBUG - <==      Total: 0
2025-03-26 15:09:28 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:09:28 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:09:28 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:09:28 - DEBUG - <==    Updates: 1
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 15:09:36 - DEBUG - <==      Total: 1
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:09:36 - DEBUG - <==      Total: 1
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:09:36 - INFO - 普通key被查询
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:09:36 - DEBUG - <==      Total: 2
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:09:36 - DEBUG - <==      Total: 1
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:09:36 - DEBUG - <==      Total: 0
2025-03-26 15:09:36 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:09:36 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:09:36 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:09:36 - DEBUG - <==    Updates: 1
2025-03-26 15:32:27 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 15:32:27 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 15:32:27 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 15:32:27 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:32:27 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:32:32 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 8620 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 15:32:32 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 15:32:32 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 15:32:33 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 15:32:33 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 15:32:33 - INFO - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-03-26 15:32:33 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 15:32:33 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 15:32:33 - INFO - Starting service [Tomcat]
2025-03-26 15:32:33 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 15:32:33 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 15:32:33 - INFO - Root WebApplicationContext: initialization completed in 938 ms
2025-03-26 15:32:34 - INFO - HikariPool-1 - Starting...
2025-03-26 15:32:34 - INFO - HikariPool-1 - Start completed.
2025-03-26 15:32:34 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 15:32:34 - DEBUG - ==> Parameters: 
2025-03-26 15:32:34 - DEBUG - <==      Total: 14
2025-03-26 15:32:35 - INFO - Redisson 3.13.6
2025-03-26 15:32:35 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 15:32:35 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 15:32:35 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 15:32:35 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 15:32:35 - INFO - Started FoodieOdysseyApplication in 3.27 seconds (JVM running for 3.679)
2025-03-26 15:32:42 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 15:32:42 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 15:32:42 - INFO - Completed initialization in 1 ms
2025-03-26 15:32:42 - INFO - 刷新token有效期耗时: 67
2025-03-26 15:32:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:32:42 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:32:42 - DEBUG - <==      Total: 1
2025-03-26 15:32:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:32:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:32:42 - DEBUG - <==      Total: 1
2025-03-26 15:32:42 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:32:42 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:32:42 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:32:42 - INFO - 普通key被查询
2025-03-26 15:32:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:32:42 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:32:42 - DEBUG - <==      Total: 1
2025-03-26 15:32:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:32:42 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:32:42 - DEBUG - <==      Total: 2
2025-03-26 15:32:42 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:32:42 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:32:42 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:32:42 - DEBUG - <==      Total: 1
2025-03-26 15:32:44 - INFO - 刷新token有效期耗时: 43
2025-03-26 15:32:44 - INFO - 刷新token有效期耗时: 43
2025-03-26 15:32:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:32:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:32:44 - DEBUG - <==      Total: 1
2025-03-26 15:32:44 - INFO - 刷新token有效期耗时: 74
2025-03-26 15:32:44 - INFO - 刷新token有效期耗时: 74
2025-03-26 15:32:44 - INFO - 刷新token有效期耗时: 74
2025-03-26 15:32:44 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:32:44 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:32:44 - DEBUG - <==      Total: 1
2025-03-26 15:32:44 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:32:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:32:44 - DEBUG - <==      Total: 0
2025-03-26 15:32:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:32:44 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:32:44 - DEBUG - <==      Total: 1
2025-03-26 15:32:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:32:44 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 15:32:44 - DEBUG - <==      Total: 2
2025-03-26 15:32:45 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:32:53 - INFO - 刷新token有效期耗时: 67
2025-03-26 15:32:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:32:53 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 15:32:53 - DEBUG - <==      Total: 1
2025-03-26 15:32:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:32:53 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:32:53 - DEBUG - <==      Total: 1
2025-03-26 15:32:53 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:32:53 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:32:53 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:32:53 - INFO - 普通key被查询
2025-03-26 15:32:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:32:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:32:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:32:53 - DEBUG - <==      Total: 1
2025-03-26 15:32:53 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:32:53 - DEBUG - <==      Total: 2
2025-03-26 15:32:53 - INFO - 刷新token有效期耗时: 66
2025-03-26 15:32:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:32:53 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:32:53 - DEBUG - <==      Total: 1
2025-03-26 15:32:55 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:32:55 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:32:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:32:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:32:55 - DEBUG - <==      Total: 1
2025-03-26 15:32:55 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:32:55 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:32:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:32:55 - DEBUG - <==      Total: 0
2025-03-26 15:32:55 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:32:55 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:32:55 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:32:55 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:32:55 - DEBUG - <==      Total: 1
2025-03-26 15:32:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:32:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:32:55 - DEBUG - <==      Total: 1
2025-03-26 15:32:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:32:55 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 15:32:55 - DEBUG - <==      Total: 1
2025-03-26 15:32:56 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:33:03 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:33:03 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:33:03 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:33:03 - DEBUG - <==      Total: 1
2025-03-26 15:33:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:03 - DEBUG - <==      Total: 1
2025-03-26 15:33:04 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:33:04 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:33:04 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:33:04 - INFO - 普通key被查询
2025-03-26 15:33:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:33:04 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:33:04 - DEBUG - <==      Total: 2
2025-03-26 15:33:04 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:33:04 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:33:04 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:33:04 - DEBUG - <==      Total: 1
2025-03-26 15:33:07 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:33:07 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:33:07 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:33:07 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:33:07 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:07 - DEBUG - <==      Total: 0
2025-03-26 15:33:07 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:33:07 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:07 - DEBUG - <==      Total: 1
2025-03-26 15:33:07 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:33:07 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 15:33:07 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 6
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:08 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:08 - DEBUG - <==      Total: 1
2025-03-26 15:33:13 - DEBUG - send success: 362745
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 13072270550(String)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:33:20 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 6
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:20 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:20 - DEBUG - <==      Total: 1
2025-03-26 15:33:22 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:33:22 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:33:22 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:33:22 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:33:22 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:22 - DEBUG - <==      Total: 0
2025-03-26 15:33:22 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:33:22 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:22 - DEBUG - <==      Total: 1
2025-03-26 15:33:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:33:22 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 15:33:22 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:33:28 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 6
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:28 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:28 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:28 - DEBUG - <==      Total: 1
2025-03-26 15:33:29 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:33:29 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:29 - DEBUG - ==> Parameters: 
2025-03-26 15:33:29 - DEBUG - <==      Total: 1
2025-03-26 15:33:33 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:33:33 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:33:33 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:33:33 - DEBUG - <==      Total: 1
2025-03-26 15:33:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:33 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:33 - DEBUG - <==      Total: 1
2025-03-26 15:33:33 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:33:33 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:33:33 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:33:33 - INFO - 普通key被查询
2025-03-26 15:33:33 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:33:33 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:33:33 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:33:33 - DEBUG - <==      Total: 1
2025-03-26 15:33:33 - DEBUG - <==      Total: 2
2025-03-26 15:33:33 - INFO - 刷新token有效期耗时: 18
2025-03-26 15:33:33 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:33:33 - DEBUG - ==> Parameters: 1474(Long), 2(Long)
2025-03-26 15:33:33 - DEBUG - <==      Total: 1
2025-03-26 15:33:35 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:33:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:35 - DEBUG - ==> Parameters: 
2025-03-26 15:33:35 - DEBUG - <==      Total: 1
2025-03-26 15:33:36 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:33:36 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:33:36 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:33:36 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:33:36 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:36 - DEBUG - <==      Total: 0
2025-03-26 15:33:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:33:36 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:36 - DEBUG - <==      Total: 1
2025-03-26 15:33:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:33:36 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 15:33:36 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 6
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:33:42 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:33:42 - DEBUG - <==      Total: 1
2025-03-26 15:33:51 - DEBUG - send success: 811726
2025-03-26 15:34:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 15:34:01 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 15:34:01 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:34:02 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 6
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:02 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:02 - DEBUG - <==      Total: 1
2025-03-26 15:34:03 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:03 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:34:03 - DEBUG - ==> Parameters: 
2025-03-26 15:34:03 - DEBUG - <==      Total: 1
2025-03-26 15:34:06 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:34:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:34:06 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:34:06 - DEBUG - <==      Total: 1
2025-03-26 15:34:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:06 - DEBUG - <==      Total: 1
2025-03-26 15:34:06 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:06 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:06 - INFO - 普通key被查询
2025-03-26 15:34:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:34:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:34:06 - DEBUG - <==      Total: 1
2025-03-26 15:34:06 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:34:06 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:34:06 - DEBUG - <==      Total: 2
2025-03-26 15:34:06 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:34:06 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:34:06 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:34:06 - DEBUG - <==      Total: 0
2025-03-26 15:34:09 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:09 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:34:09 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:34:09 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:34:09 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 15:34:09 - DEBUG - <==      Total: 0
2025-03-26 15:34:09 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:34:09 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 15:34:09 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:34:12 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 6
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:12 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:34:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:34:12 - DEBUG - ==> Parameters: 
2025-03-26 15:34:12 - DEBUG - <==      Total: 1
2025-03-26 15:34:13 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:34:13 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:34:13 - DEBUG - <==      Total: 1
2025-03-26 15:34:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:13 - DEBUG - <==      Total: 1
2025-03-26 15:34:13 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:34:13 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:34:13 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:34:13 - INFO - 普通key被查询
2025-03-26 15:34:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:34:13 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:34:13 - DEBUG - <==      Total: 2
2025-03-26 15:34:13 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:34:13 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:34:13 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:34:13 - DEBUG - <==      Total: 0
2025-03-26 15:34:14 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:34:14 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 15:34:14 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:34:14 - DEBUG - <==    Updates: 1
2025-03-26 15:34:16 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:34:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:34:16 - DEBUG - ==> Parameters: 
2025-03-26 15:34:16 - DEBUG - <==      Total: 1
2025-03-26 15:34:17 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:34:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:34:17 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 15:34:17 - DEBUG - <==      Total: 1
2025-03-26 15:34:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:17 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:17 - DEBUG - <==      Total: 1
2025-03-26 15:34:17 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:34:17 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:34:17 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:34:17 - INFO - 普通key被查询
2025-03-26 15:34:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:34:17 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 15:34:17 - DEBUG - <==      Total: 1
2025-03-26 15:34:17 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:34:17 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:34:17 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 15:34:17 - DEBUG - <==      Total: 0
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:18 - DEBUG - <==      Total: 1
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 15:34:18 - DEBUG - <==      Total: 0
2025-03-26 15:34:18 - DEBUG - <==      Total: 0
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:34:18 - DEBUG - <==      Total: 1
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 15:34:18 - DEBUG - <==      Total: 1
2025-03-26 15:34:18 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:34:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id IN ( ? )
2025-03-26 15:34:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:18 - DEBUG - <==      Total: 1
2025-03-26 15:34:21 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:21 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:34:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:34:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:21 - DEBUG - <==      Total: 1
2025-03-26 15:34:21 - INFO - 刷新token有效期耗时: 31
2025-03-26 15:34:21 - INFO - 刷新token有效期耗时: 31
2025-03-26 15:34:21 - INFO - 刷新token有效期耗时: 31
2025-03-26 15:34:21 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:34:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:21 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:34:21 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:34:21 - DEBUG - <==      Total: 0
2025-03-26 15:34:21 - DEBUG - <==      Total: 1
2025-03-26 15:34:21 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:34:21 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:34:21 - DEBUG - <==      Total: 1
2025-03-26 15:34:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:34:21 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 15:34:21 - DEBUG - <==      Total: 2
2025-03-26 15:51:48 - ERROR - org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 15:51:49 - INFO - Reconnecting, last destination was /49.235.142.165:6379
2025-03-26 15:51:49 - INFO - Reconnected to 49.235.142.165/<unresolved>:6379
2025-03-26 15:51:49 - INFO - 刷新token有效期耗时: 12349
2025-03-26 15:51:49 - INFO - 刷新token有效期耗时: 12353
2025-03-26 15:51:49 - INFO - 刷新token有效期耗时: 19436
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 6
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:51:49 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 6
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:49 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:51:49 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:51:53 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 6
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:53 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:51:53 - DEBUG - <==      Total: 1
2025-03-26 15:51:54 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:51:54 - INFO - 刷新token有效期耗时: 32
2025-03-26 15:51:54 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:51:54 - DEBUG - ==> Parameters: 
2025-03-26 15:51:54 - DEBUG - <==      Total: 1
2025-03-26 15:51:54 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:51:54 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:51:54 - DEBUG - <==      Total: 6
2025-03-26 15:51:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:54 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:51:54 - DEBUG - <==      Total: 1
2025-03-26 15:51:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:55 - DEBUG - <==      Total: 1
2025-03-26 15:51:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:51:55 - DEBUG - <==      Total: 1
2025-03-26 15:51:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:55 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:55 - DEBUG - <==      Total: 1
2025-03-26 15:51:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:55 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:51:55 - DEBUG - <==      Total: 1
2025-03-26 15:51:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:51:55 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:51:55 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:06 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 6
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:06 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:52:06 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:52:08 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 6
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:08 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 15:52:08 - DEBUG - <==      Total: 1
2025-03-26 15:52:11 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:52:11 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:52:11 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:52:11 - DEBUG - <==      Total: 1
2025-03-26 15:52:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:52:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:52:11 - DEBUG - <==      Total: 1
2025-03-26 15:52:11 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:52:11 - INFO - 刷新token有效期耗时: 30
2025-03-26 15:52:11 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:52:11 - INFO - 普通key被查询
2025-03-26 15:52:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:52:11 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:11 - DEBUG - <==      Total: 1
2025-03-26 15:52:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:52:11 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:52:11 - DEBUG - <==      Total: 2
2025-03-26 15:52:11 - INFO - 刷新token有效期耗时: 34
2025-03-26 15:52:11 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:52:11 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:52:11 - DEBUG - <==      Total: 1
2025-03-26 15:52:15 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:52:15 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:52:15 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 15:52:15 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 15:52:15 - DEBUG - <==      Total: 1
2025-03-26 15:52:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 15:52:15 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 15:52:15 - DEBUG - <==      Total: 5
2025-03-26 15:52:17 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:52:17 - INFO - 刷新token有效期耗时: 25
2025-03-26 15:52:17 - INFO - 普通key被查询
2025-03-26 15:52:17 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:17 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:17 - DEBUG - <==      Total: 6
2025-03-26 15:52:18 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:52:18 - INFO - 普通key被查询
2025-03-26 15:52:18 - INFO - 刷新token有效期耗时: 29
2025-03-26 15:52:18 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:18 - DEBUG - <==      Total: 6
2025-03-26 15:52:22 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:22 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:22 - INFO - 普通key被查询
2025-03-26 15:52:22 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:22 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 15:52:22 - DEBUG - <==      Total: 2
2025-03-26 15:52:22 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:52:22 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 15:52:22 - DEBUG - <==      Total: 1
2025-03-26 15:52:25 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:52:25 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:52:25 - INFO - 普通key被查询
2025-03-26 15:52:25 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:25 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 15:52:25 - DEBUG - <==      Total: 2
2025-03-26 15:52:28 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:28 - INFO - 刷新token有效期耗时: 23
2025-03-26 15:52:28 - INFO - 普通key被查询
2025-03-26 15:52:28 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:28 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 15:52:28 - DEBUG - <==      Total: 2
2025-03-26 15:52:28 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:52:28 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 15:52:28 - DEBUG - <==      Total: 1
2025-03-26 15:52:31 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:52:31 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:52:31 - INFO - 普通key被查询
2025-03-26 15:52:31 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:31 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 15:52:31 - DEBUG - <==      Total: 2
2025-03-26 15:52:34 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:52:34 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:52:34 - INFO - 普通key被查询
2025-03-26 15:52:34 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:34 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:34 - DEBUG - <==      Total: 6
2025-03-26 15:52:38 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:52:38 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 15:52:38 - DEBUG - ==> Parameters: 1010(Long), 22(Long)
2025-03-26 15:52:38 - DEBUG - <==      Total: 1
2025-03-26 15:52:38 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 15:52:38 - DEBUG - ==> Parameters: 22(Long), 0(Integer)
2025-03-26 15:52:38 - DEBUG - <==    Updates: 1
2025-03-26 15:52:38 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 15:52:38 - DEBUG - ==> Parameters: 31416646388154672(Long), 1010(Long), 22(Long)
2025-03-26 15:52:38 - DEBUG - <==    Updates: 1
2025-03-26 15:52:43 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:52:43 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:52:43 - INFO - 普通key被查询
2025-03-26 15:52:43 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 15:52:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:43 - DEBUG - <==      Total: 6
2025-03-26 15:52:43 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:52:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:52:43 - DEBUG - <==      Total: 1
2025-03-26 15:56:15 - INFO - 刷新token有效期耗时: 24
2025-03-26 15:56:15 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 15:56:15 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 15:56:15 - DEBUG - <==      Total: 1
2025-03-26 15:56:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:56:15 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:56:15 - DEBUG - <==      Total: 1
2025-03-26 15:56:15 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:56:15 - INFO - 刷新token有效期耗时: 27
2025-03-26 15:56:15 - INFO - 刷新token有效期耗时: 28
2025-03-26 15:56:15 - INFO - 普通key被查询
2025-03-26 15:56:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 15:56:15 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 15:56:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 15:56:15 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 15:56:15 - DEBUG - <==      Total: 1
2025-03-26 15:56:15 - DEBUG - <==      Total: 2
2025-03-26 15:56:15 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:56:15 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:56:15 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:56:15 - DEBUG - <==      Total: 1
2025-03-26 15:56:17 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:56:17 - INFO - 刷新token有效期耗时: 22
2025-03-26 15:56:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 15:56:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:56:17 - DEBUG - <==      Total: 1
2025-03-26 15:56:17 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:56:17 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:56:17 - INFO - 刷新token有效期耗时: 19
2025-03-26 15:56:17 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:56:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:56:17 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 15:56:17 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 15:56:17 - DEBUG - <==      Total: 0
2025-03-26 15:56:17 - DEBUG - <==      Total: 1
2025-03-26 15:56:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:56:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 15:56:17 - DEBUG - <==      Total: 1
2025-03-26 15:56:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 15:56:17 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 15:56:17 - DEBUG - <==      Total: 2
2025-03-26 15:56:20 - INFO - 刷新token有效期耗时: 21
2025-03-26 15:56:20 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:56:20 - INFO - 刷新token有效期耗时: 26
2025-03-26 15:56:20 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 15:56:20 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 15:56:20 - DEBUG - <==      Total: 0
2025-03-26 15:56:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 15:56:20 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 15:56:20 - DEBUG - <==      Total: 1
2025-03-26 15:56:21 - INFO - 刷新token有效期耗时: 20
2025-03-26 15:56:21 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:01:11 - ERROR - org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:01:11 - INFO - Reconnecting, last destination was /49.235.142.165:6379
2025-03-26 16:01:11 - INFO - Reconnected to 49.235.142.165/<unresolved>:6379
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 15854
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 11062
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 15123
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 7625
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 17529
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 12385
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:01:11 - INFO - 刷新token有效期耗时: 24
2025-03-26 16:01:14 - INFO - 刷新token有效期耗时: 28
2025-03-26 16:01:14 - DEBUG - send success: 751830
2025-03-26 16:01:23 - INFO - 刷新token有效期耗时: 19
2025-03-26 16:01:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 16:01:23 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 16:01:23 - DEBUG - <==      Total: 1
2025-03-26 16:01:23 - INFO - 刷新token有效期耗时: 29
2025-03-26 16:01:23 - INFO - 刷新token有效期耗时: 19
2025-03-26 16:01:23 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:01:23 - DEBUG - ==> Parameters: 
2025-03-26 16:01:23 - DEBUG - <==      Total: 1
2025-03-26 16:01:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:01:23 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:01:23 - DEBUG - <==      Total: 6
2025-03-26 16:01:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:01:23 - DEBUG - <==      Total: 1
2025-03-26 16:01:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:01:23 - DEBUG - <==      Total: 1
2025-03-26 16:01:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:01:24 - DEBUG - <==      Total: 1
2025-03-26 16:01:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:01:24 - DEBUG - <==      Total: 1
2025-03-26 16:01:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:01:24 - DEBUG - <==      Total: 1
2025-03-26 16:01:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:01:24 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:01:24 - DEBUG - <==      Total: 1
2025-03-26 16:01:28 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:01:28 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:01:28 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:01:28 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 16:01:28 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 16:01:28 - DEBUG - <==      Total: 0
2025-03-26 16:01:28 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 16:01:28 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 16:01:28 - DEBUG - <==      Total: 1
2025-03-26 16:01:29 - INFO - 刷新token有效期耗时: 26
2025-03-26 16:01:29 - INFO - 刷新token有效期耗时: 20
2025-03-26 16:31:04 - ERROR - org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:31:04 - INFO - Reconnecting, last destination was /49.235.142.165:6379
2025-03-26 16:31:04 - INFO - Reconnected to 49.235.142.165/<unresolved>:6379
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 10279
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 11300
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 16938
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 6756
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 14400
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 2621
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 16938
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 8503
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 5921
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 14400
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 9973
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 5923
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 2621
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 2122
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 6783
2025-03-26 16:31:05 - INFO - 刷新token有效期耗时: 8196
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 16:31:05 - DEBUG - <==      Total: 6
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 10
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:31:05 - DEBUG - <==      Total: 1
2025-03-26 16:37:22 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 16:37:22 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 16:37:22 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 16:37:22 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 16:37:22 - ERROR - org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
org.springframework.data.redis.RedisSystemException: Redis command interrupted; nested exception is io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:62)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandInterruptedException: Command interrupted
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:87)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:244)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at io.lettuce.core.protocol.AsyncCommand.await(AsyncCommand.java:83)
	... 56 common frames omitted
2025-03-26 16:37:22 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 16:37:22 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 16:37:22 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 16:37:22 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 16:37:22 - WARN - Failure in @ExceptionHandler org.jwj.fo.config.WebExceptionAdvice#handleRuntimeException(RuntimeException)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:273)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1187)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1009)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1390)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 59 common frames omitted
2025-03-26 16:37:22 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 16:37:22 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 16:37:22 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 16:37:22 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:37:22 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 16:37:22 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:37:24 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 18240 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 16:37:24 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 16:37:24 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 16:37:25 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 16:37:25 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 16:37:25 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 16:37:25 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 16:37:25 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 16:37:25 - INFO - Starting service [Tomcat]
2025-03-26 16:37:25 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 16:37:25 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 16:37:25 - INFO - Root WebApplicationContext: initialization completed in 1004 ms
2025-03-26 16:37:26 - INFO - HikariPool-1 - Starting...
2025-03-26 16:37:26 - INFO - HikariPool-1 - Start completed.
2025-03-26 16:37:26 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 16:37:26 - DEBUG - ==> Parameters: 
2025-03-26 16:37:26 - DEBUG - <==      Total: 14
2025-03-26 16:37:27 - INFO - Redisson 3.13.6
2025-03-26 16:37:27 - INFO - 1 connections initialized for /49.235.142.165:6379
2025-03-26 16:37:27 - INFO - 24 connections initialized for /49.235.142.165:6379
2025-03-26 16:37:27 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 16:37:27 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 16:37:27 - INFO - Started FoodieOdysseyApplication in 3.405 seconds (JVM running for 3.845)
2025-03-26 16:37:44 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 16:37:44 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 16:37:44 - INFO - Completed initialization in 1 ms
2025-03-26 16:37:44 - INFO - 刷新token有效期耗时: 107
2025-03-26 16:37:44 - INFO - 刷新token有效期耗时: 108
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 6
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:45 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:37:45 - DEBUG - <==      Total: 1
2025-03-26 16:37:46 - INFO - 刷新token有效期耗时: 26
2025-03-26 16:37:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:37:46 - DEBUG - ==> Parameters: 
2025-03-26 16:37:46 - DEBUG - <==      Total: 1
2025-03-26 16:37:47 - INFO - 刷新token有效期耗时: 20
2025-03-26 16:37:47 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 16:37:47 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 16:37:47 - DEBUG - <==      Total: 1
2025-03-26 16:37:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:47 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:47 - DEBUG - <==      Total: 1
2025-03-26 16:37:48 - INFO - 刷新token有效期耗时: 22
2025-03-26 16:37:48 - INFO - 刷新token有效期耗时: 22
2025-03-26 16:37:48 - INFO - 刷新token有效期耗时: 22
2025-03-26 16:37:48 - INFO - 普通key被查询
2025-03-26 16:37:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 16:37:48 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:37:48 - DEBUG - <==      Total: 1
2025-03-26 16:37:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 16:37:48 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 16:37:48 - DEBUG - <==      Total: 2
2025-03-26 16:37:48 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:48 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 16:37:48 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 16:37:48 - DEBUG - <==      Total: 1
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:49 - DEBUG - <==      Total: 1
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 28
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 28
2025-03-26 16:37:49 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 16:37:49 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 16:37:49 - DEBUG - <==      Total: 1
2025-03-26 16:37:49 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 16:37:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:49 - DEBUG - <==      Total: 0
2025-03-26 16:37:49 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 16:37:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:49 - DEBUG - <==      Total: 1
2025-03-26 16:37:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 16:37:49 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 16:37:49 - DEBUG - <==      Total: 2
2025-03-26 16:37:49 - INFO - 刷新token有效期耗时: 21
2025-03-26 16:37:52 - INFO - 刷新token有效期耗时: 23
2025-03-26 16:37:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 16:37:52 - DEBUG - ==> Parameters: 
2025-03-26 16:37:52 - DEBUG - <==      Total: 1
2025-03-26 16:37:54 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:54 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 16:37:54 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 16:37:54 - DEBUG - <==      Total: 1
2025-03-26 16:37:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:54 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:37:54 - DEBUG - <==      Total: 1
2025-03-26 16:37:54 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:54 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:54 - INFO - 刷新token有效期耗时: 30
2025-03-26 16:37:54 - INFO - 普通key被查询
2025-03-26 16:37:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 16:37:54 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 16:37:54 - DEBUG - <==      Total: 1
2025-03-26 16:37:54 - INFO - 刷新token有效期耗时: 30
2025-03-26 16:37:54 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 16:37:54 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 16:37:54 - DEBUG - <==      Total: 0
2025-03-26 16:37:55 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:55 - INFO - 刷新token有效期耗时: 27
2025-03-26 16:37:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:37:55 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:37:55 - DEBUG - <==      Total: 1
2025-03-26 16:37:55 - INFO - 刷新token有效期耗时: 20
2025-03-26 16:37:55 - INFO - 刷新token有效期耗时: 19
2025-03-26 16:37:55 - INFO - 刷新token有效期耗时: 19
2025-03-26 16:37:55 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 16:37:55 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:37:55 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 16:37:55 - DEBUG - <==      Total: 0
2025-03-26 16:37:55 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 16:37:55 - DEBUG - <==      Total: 0
2025-03-26 16:37:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 16:37:55 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 16:37:55 - DEBUG - <==      Total: 1
2025-03-26 16:37:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 16:37:55 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 16:37:55 - DEBUG - <==      Total: 1
2025-03-26 16:37:56 - INFO - 刷新token有效期耗时: 21
2025-03-26 16:37:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id IN ( ? )
2025-03-26 16:37:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:37:56 - DEBUG - <==      Total: 1
2025-03-26 16:37:58 - INFO - 刷新token有效期耗时: 28
2025-03-26 16:37:59 - INFO - 刷新token有效期耗时: 21
2025-03-26 16:37:59 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 16:37:59 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 16:37:59 - DEBUG - <==      Total: 0
2025-03-26 16:37:59 - INFO - 刷新token有效期耗时: 29
2025-03-26 16:37:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 16:37:59 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 16:37:59 - DEBUG - <==      Total: 1
2025-03-26 16:38:00 - INFO - 刷新token有效期耗时: 22
2025-03-26 16:38:00 - INFO - 刷新token有效期耗时: 26
2025-03-26 16:38:05 - INFO - 刷新token有效期耗时: 26
2025-03-26 16:39:12 - INFO - 刷新token有效期耗时: 26
2025-03-26 16:39:12 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 16:39:12 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 16:39:12 - DEBUG - <==      Total: 1
2025-03-26 16:39:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 16:39:12 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 16:39:12 - DEBUG - <==      Total: 1
2025-03-26 16:39:12 - INFO - 刷新token有效期耗时: 21
2025-03-26 16:39:12 - INFO - 刷新token有效期耗时: 21
2025-03-26 16:39:12 - INFO - 普通key被查询
2025-03-26 16:39:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?,?)) order by field(id, 1474,1011)
2025-03-26 16:39:12 - DEBUG - ==> Parameters: 1474(Long), 1011(Long)
2025-03-26 16:39:12 - DEBUG - <==      Total: 2
2025-03-26 16:39:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 16:39:12 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 16:39:12 - DEBUG - <==      Total: 1
2025-03-26 16:39:12 - INFO - 刷新token有效期耗时: 33
2025-03-26 16:39:12 - INFO - 刷新token有效期耗时: 28
2025-03-26 16:39:12 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 16:39:12 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 16:39:12 - DEBUG - <==      Total: 1
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x8b0437e1, L:/192.168.3.2:59508 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xd63367c3, L:/192.168.3.2:59513 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xfc2c6509, L:/192.168.3.2:59514 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xbc2d9f32, L:/192.168.3.2:59510 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x801ea252, L:/192.168.3.2:59515 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x8d7d87d5, L:/192.168.3.2:59512 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x658aac0b, L:/192.168.3.2:59517 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x546ea6d7, L:/192.168.3.2:59519 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x6a1e922e, L:/192.168.3.2:59516 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x8dbdff4e, L:/192.168.3.2:59509 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xdb3e495c, L:/192.168.3.2:59518 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x6357f214, L:/192.168.3.2:59522 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xad4da25c, L:/192.168.3.2:59523 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xf8a6fa9b, L:/192.168.3.2:59528 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x7679f255, L:/192.168.3.2:59526 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x67740f10, L:/192.168.3.2:59529 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x92da3cab, L:/192.168.3.2:59520 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x67d6c15c, L:/192.168.3.2:59521 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x19a247c5, L:/192.168.3.2:59524 ! R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x83c68d23, L:/192.168.3.2:59525 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x2b5585c4, L:/192.168.3.2:59527 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x5c16500c, L:/192.168.3.2:59533 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x748da78f, L:/192.168.3.2:59531 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0x54e64a71, L:/192.168.3.2:59532 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:43:58 - ERROR - Unable to send PING command over channel: [id: 0xcababc17, L:/192.168.3.2:59530 - R:/49.235.142.165:6379]
org.redisson.client.RedisTimeoutException: Command execution timeout for command: (PING), params: [], Redis client: [addr=redis://49.235.142.165:6379]
	at org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 16:44:59 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 16:45:59 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:46:59 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:47:59 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:49:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:50:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:51:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:52:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:52:40 - ERROR - org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:52:40 - INFO - Reconnecting, last destination was /49.235.142.165:6379
2025-03-26 16:52:50 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:52:50 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 20 common frames omitted
2025-03-26 16:53:00 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:00 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:10 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:10 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:20 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:20 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:21 - ERROR - org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:126)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1367)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:568)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$18(DefaultHashOperations.java:307)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:307)
	at org.jwj.fo.interceptor.RefreshTokenInterceptor.preHandle(RefreshTokenInterceptor.java:35)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1066)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 53 common frames omitted
2025-03-26 16:53:30 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:30 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:40 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:40 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:53:51 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:53:51 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:00 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:176)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:54:01 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:54:01 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:11 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:54:12 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:22 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:54:23 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:33 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:54:35 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:45 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: connection timed out: /49.235.142.165:6379
2025-03-26 16:54:49 - INFO - Reconnecting, last destination was 49.235.142.165/<unresolved>:6379
2025-03-26 16:54:55 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 16:54:55 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 16:54:55 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 16:54:55 - WARN - Cannot reconnect to [49.235.142.165/<unresolved>:6379]: java.util.concurrent.CancellationException
2025-03-26 16:54:55 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:54:55 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 16:54:58 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 29660 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 16:54:58 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 16:54:58 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 16:54:59 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 16:54:59 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 16:54:59 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 16:54:59 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 16:54:59 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 16:54:59 - INFO - Starting service [Tomcat]
2025-03-26 16:54:59 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 16:55:00 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 16:55:00 - INFO - Root WebApplicationContext: initialization completed in 1066 ms
2025-03-26 16:55:00 - INFO - HikariPool-1 - Starting...
2025-03-26 16:55:00 - INFO - HikariPool-1 - Start completed.
2025-03-26 16:55:00 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 16:55:00 - DEBUG - ==> Parameters: 
2025-03-26 16:55:00 - DEBUG - <==      Total: 14
2025-03-26 16:55:10 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
2025-03-26 16:55:10 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 16:55:10 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 16:55:20 - INFO - Stopping service [Tomcat]
2025-03-26 16:55:20 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 16:55:20 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:212)
	at org.jwj.fo.config.RedisConfig.initVoucherStock(RedisConfig.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 18 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 37 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 49.235.142.165/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 38 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /49.235.142.165:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 17:11:45 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 29944 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:11:45 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:11:45 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:11:46 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:11:46 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:11:46 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 17:11:46 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:11:46 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:11:46 - INFO - Starting service [Tomcat]
2025-03-26 17:11:46 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:11:46 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:11:46 - INFO - Root WebApplicationContext: initialization completed in 1037 ms
2025-03-26 17:11:47 - INFO - HikariPool-1 - Starting...
2025-03-26 17:11:47 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:11:47 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:11:47 - DEBUG - ==> Parameters: 
2025-03-26 17:11:47 - DEBUG - <==      Total: 14
2025-03-26 17:11:47 - INFO - Redisson 3.13.6
2025-03-26 17:11:58 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'voucherOrderController': Unsatisfied dependency expressed through field 'voucherOrderService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
2025-03-26 17:11:58 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:11:58 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:11:58 - INFO - Stopping service [Tomcat]
2025-03-26 17:11:58 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 17:11:58 - ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'voucherOrderController': Unsatisfied dependency expressed through field 'voucherOrderService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'voucherOrderServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [org/jwj/fo/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 31 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 47 common frames omitted
Caused by: org.redisson.client.RedisConnectionException: Unable to connect to Redis server: /49.235.142.165:6379
	at org.redisson.connection.pool.ConnectionPool$1.lambda$run$0(ConnectionPool.java:159)
	at org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:183)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:96)
	at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:329)
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$1(ConnectionPool.java:295)
	at org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:183)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:96)
	at org.redisson.client.RedisClient$2$2.run(RedisClient.java:248)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /49.235.142.165:6379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	... 8 common frames omitted
2025-03-26 17:19:43 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 35700 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:19:43 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:19:43 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:19:43 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:19:43 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:19:43 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 17:19:44 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:19:44 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:19:44 - INFO - Starting service [Tomcat]
2025-03-26 17:19:44 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:19:44 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:19:44 - INFO - Root WebApplicationContext: initialization completed in 985 ms
2025-03-26 17:19:45 - INFO - HikariPool-1 - Starting...
2025-03-26 17:19:45 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:19:45 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:19:45 - DEBUG - ==> Parameters: 
2025-03-26 17:19:45 - DEBUG - <==      Total: 14
2025-03-26 17:19:45 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
2025-03-26 17:19:45 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:19:45 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:19:45 - INFO - Stopping service [Tomcat]
2025-03-26 17:19:45 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 17:19:45 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:212)
	at org.jwj.fo.config.RedisConfig.initVoucherStock(RedisConfig.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 18 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 37 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 38 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: NOAUTH HELLO must be called with the client already authenticated, otherwise the HELLO <proto> AUTH <user> <pass> option can be used to authenticate the client and select the RESP protocol version at the same time
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 17:20:40 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 1672 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:20:40 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:20:40 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:20:41 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:20:41 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:20:41 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 17:20:41 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:20:41 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:20:41 - INFO - Starting service [Tomcat]
2025-03-26 17:20:41 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:20:41 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:20:41 - INFO - Root WebApplicationContext: initialization completed in 946 ms
2025-03-26 17:20:42 - INFO - HikariPool-1 - Starting...
2025-03-26 17:20:42 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:20:42 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:20:42 - DEBUG - ==> Parameters: 
2025-03-26 17:20:42 - DEBUG - <==      Total: 14
2025-03-26 17:20:42 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
2025-03-26 17:20:42 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:20:42 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:20:42 - INFO - Stopping service [Tomcat]
2025-03-26 17:20:42 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 17:20:42 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:212)
	at org.jwj.fo.config.RedisConfig.initVoucherStock(RedisConfig.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 18 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 37 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 38 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: NOAUTH HELLO must be called with the client already authenticated, otherwise the HELLO <proto> AUTH <user> <pass> option can be used to authenticate the client and select the RESP protocol version at the same time
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 17:24:48 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 7968 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:24:48 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:24:48 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:24:48 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:24:48 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:24:48 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 17:24:49 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:24:49 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:24:49 - INFO - Starting service [Tomcat]
2025-03-26 17:24:49 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:24:49 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:24:49 - INFO - Root WebApplicationContext: initialization completed in 945 ms
2025-03-26 17:24:49 - INFO - HikariPool-1 - Starting...
2025-03-26 17:24:49 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:24:50 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:24:50 - DEBUG - ==> Parameters: 
2025-03-26 17:24:50 - DEBUG - <==      Total: 14
2025-03-26 17:24:50 - WARN - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
2025-03-26 17:24:50 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:24:50 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:24:50 - INFO - Stopping service [Tomcat]
2025-03-26 17:24:50 - INFO - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-26 17:24:50 - ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.jwj.fo.FoodieOdysseyApplication.main(FoodieOdysseyApplication.java:14)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:212)
	at org.jwj.fo.config.RedisConfig.initVoucherStock(RedisConfig.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 18 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 37 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 38 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: NOAUTH HELLO must be called with the client already authenticated, otherwise the HELLO <proto> AUTH <user> <pass> option can be used to authenticate the client and select the RESP protocol version at the same time
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-26 17:28:35 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 32628 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:28:35 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:28:35 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:28:36 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:28:36 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:28:36 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 17:28:36 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:28:36 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:28:36 - INFO - Starting service [Tomcat]
2025-03-26 17:28:36 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:28:36 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:28:36 - INFO - Root WebApplicationContext: initialization completed in 936 ms
2025-03-26 17:28:37 - INFO - HikariPool-1 - Starting...
2025-03-26 17:28:37 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:28:37 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:28:37 - DEBUG - ==> Parameters: 
2025-03-26 17:28:37 - DEBUG - <==      Total: 14
2025-03-26 17:28:37 - INFO - Redisson 3.13.6
2025-03-26 17:28:38 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:28:38 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:28:38 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 17:28:38 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 17:28:38 - INFO - Started FoodieOdysseyApplication in 2.717 seconds (JVM running for 3.133)
2025-03-26 17:28:57 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 17:28:57 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 17:28:57 - INFO - Completed initialization in 1 ms
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,name,icon,sort,create_time,update_time FROM tb_shop_type ORDER BY sort ASC
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 
2025-03-26 17:28:57 - DEBUG - <==      Total: 10
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 6
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:28:57 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:28:57 - DEBUG - <==      Total: 1
2025-03-26 17:28:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:28:59 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 17:28:59 - DEBUG - <==      Total: 1
2025-03-26 17:28:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:28:59 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 17:28:59 - DEBUG - <==      Total: 5
2025-03-26 17:29:00 - INFO - 普通key被查询
2025-03-26 17:29:00 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:29:00 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:00 - DEBUG - <==      Total: 1
2025-03-26 17:29:00 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:29:00 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:00 - DEBUG - <==      Total: 6
2025-03-26 17:29:22 - DEBUG - send success: 639091
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - INFO - 刷新token有效期耗时: 3
2025-03-26 17:29:29 - INFO - 刷新token有效期耗时: 3
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 6
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:29 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:29 - DEBUG - <==      Total: 1
2025-03-26 17:29:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:31 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 17:29:31 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:29:31 - DEBUG - <==    Updates: 1
2025-03-26 17:29:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:31 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:29:31 - DEBUG - <==      Total: 1
2025-03-26 17:29:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:29:31 - DEBUG - <==      Total: 1
2025-03-26 17:29:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:32 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:32 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:29:32 - DEBUG - <==      Total: 1
2025-03-26 17:29:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:32 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:29:32 - DEBUG - <==      Total: 1
2025-03-26 17:29:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:32 - INFO - 普通key被查询
2025-03-26 17:29:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:29:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:32 - DEBUG - <==      Total: 1
2025-03-26 17:29:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:29:32 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:29:32 - DEBUG - <==      Total: 1
2025-03-26 17:29:32 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:32 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:32 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 17:29:32 - DEBUG - <==      Total: 0
2025-03-26 17:29:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 6
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:36 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:36 - DEBUG - <==      Total: 1
2025-03-26 17:29:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:39 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 17:29:39 - DEBUG - <==      Total: 1
2025-03-26 17:29:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:39 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:39 - DEBUG - <==      Total: 1
2025-03-26 17:29:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:39 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:39 - INFO - 普通key被查询
2025-03-26 17:29:39 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:29:39 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:29:39 - DEBUG - <==      Total: 1
2025-03-26 17:29:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:39 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:39 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:29:39 - DEBUG - <==      Total: 1
2025-03-26 17:29:40 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:40 - DEBUG - <==      Total: 1
2025-03-26 17:29:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:40 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:40 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:29:40 - DEBUG - <==      Total: 1
2025-03-26 17:29:40 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:29:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:40 - DEBUG - <==      Total: 0
2025-03-26 17:29:40 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:29:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:40 - DEBUG - <==      Total: 1
2025-03-26 17:29:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:29:40 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:29:40 - DEBUG - <==      Total: 2
2025-03-26 17:29:41 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:29:44 - DEBUG - ==> Parameters: 
2025-03-26 17:29:44 - DEBUG - <==      Total: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:44 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 17:29:44 - DEBUG - <==      Total: 1
2025-03-26 17:29:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:44 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:44 - DEBUG - <==      Total: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:44 - INFO - 普通key被查询
2025-03-26 17:29:44 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:29:44 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:29:44 - DEBUG - <==      Total: 1
2025-03-26 17:29:44 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:44 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:44 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 17:29:44 - DEBUG - <==      Total: 0
2025-03-26 17:29:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:45 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:45 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:45 - DEBUG - <==      Total: 1
2025-03-26 17:29:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:46 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:46 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:29:46 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:46 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:46 - DEBUG - <==      Total: 0
2025-03-26 17:29:46 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 17:29:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:29:46 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:29:46 - DEBUG - <==      Total: 0
2025-03-26 17:29:46 - DEBUG - <==      Total: 1
2025-03-26 17:29:46 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:29:46 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 17:29:46 - DEBUG - <==      Total: 1
2025-03-26 17:29:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:48 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:48 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:29:48 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 17:29:49 - DEBUG - <==    Updates: 1
2025-03-26 17:29:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:50 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:50 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 17:29:50 - DEBUG - <==      Total: 1
2025-03-26 17:29:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:50 - DEBUG - <==      Total: 1
2025-03-26 17:29:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:50 - INFO - 普通key被查询
2025-03-26 17:29:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:50 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:50 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:29:50 - DEBUG - <==      Total: 1
2025-03-26 17:29:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:53 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:29:53 - DEBUG - <==      Total: 1
2025-03-26 17:29:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:53 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:53 - DEBUG - <==      Total: 1
2025-03-26 17:29:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:53 - INFO - 普通key被查询
2025-03-26 17:29:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:29:53 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:29:53 - DEBUG - <==      Total: 1
2025-03-26 17:29:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:53 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:29:53 - DEBUG - <==      Total: 1
2025-03-26 17:29:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:55 - DEBUG - <==      Total: 1
2025-03-26 17:29:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:55 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:29:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:55 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:55 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:29:55 - DEBUG - <==      Total: 0
2025-03-26 17:29:55 - DEBUG - <==      Total: 1
2025-03-26 17:29:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:29:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:29:55 - DEBUG - <==      Total: 1
2025-03-26 17:29:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:29:55 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:29:55 - DEBUG - <==      Total: 2
2025-03-26 17:29:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:29:58 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:29:58 - DEBUG - <==      Total: 1
2025-03-26 17:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:29:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:29:58 - DEBUG - <==      Total: 1
2025-03-26 17:29:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:58 - INFO - 普通key被查询
2025-03-26 17:29:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:29:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:29:58 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:29:58 - DEBUG - <==      Total: 1
2025-03-26 17:29:58 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:29:58 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:29:58 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 17:29:58 - DEBUG - <==      Total: 0
2025-03-26 17:30:00 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:30:00 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:30:00 - DEBUG - ==> Parameters: 
2025-03-26 17:30:00 - DEBUG - <==      Total: 1
2025-03-26 17:30:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:30:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:30:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:30:01 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:30:01 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:30:01 - DEBUG - <==      Total: 0
2025-03-26 17:30:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:30:01 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:30:01 - DEBUG - <==      Total: 1
2025-03-26 17:30:07 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:31:05 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:05 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:31:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:31:08 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 17:31:08 - DEBUG - <==      Total: 1
2025-03-26 17:31:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:08 - DEBUG - <==      Total: 1
2025-03-26 17:31:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:08 - INFO - 普通key被查询
2025-03-26 17:31:08 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:31:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:31:08 - DEBUG - <==      Total: 1
2025-03-26 17:31:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:08 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:31:08 - DEBUG - ==> Parameters: 1010(Long), 1(Long)
2025-03-26 17:31:08 - DEBUG - <==      Total: 0
2025-03-26 17:31:10 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:10 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:31:10 - DEBUG - ==> Parameters: 1010(Long), 1(Long)
2025-03-26 17:31:10 - DEBUG - <==    Updates: 1
2025-03-26 17:31:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:12 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:31:12 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:31:12 - DEBUG - <==      Total: 0
2025-03-26 17:31:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:31:12 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:31:12 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 6
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:13 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:31:13 - DEBUG - <==      Total: 1
2025-03-26 17:31:26 - DEBUG - send success: 727117
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 19851991582(String)
2025-03-26 17:31:31 - DEBUG - <==      Total: 0
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 19851991582(String), foodie_yy8nbwwwwz(String), (String)
2025-03-26 17:31:31 - DEBUG - <==    Updates: 1
2025-03-26 17:31:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 6
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:31 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:31:31 - DEBUG - <==      Total: 1
2025-03-26 17:31:33 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:33 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:31:33 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:31:33 - DEBUG - <==      Total: 1
2025-03-26 17:31:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:33 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:31:33 - DEBUG - <==      Total: 1
2025-03-26 17:31:33 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:31:33 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:31:33 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:33 - INFO - 普通key被查询
2025-03-26 17:31:33 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:31:33 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:33 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:31:33 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:31:33 - DEBUG - <==      Total: 1
2025-03-26 17:31:33 - DEBUG - <==      Total: 1
2025-03-26 17:31:33 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:33 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:31:33 - DEBUG - ==> Parameters: 1494(Long), 1011(Long)
2025-03-26 17:31:33 - DEBUG - <==      Total: 0
2025-03-26 17:31:34 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:31:34 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:31:34 - DEBUG - ==> Parameters: 1494(Long), 1011(Long)
2025-03-26 17:31:34 - DEBUG - <==    Updates: 1
2025-03-26 17:31:36 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:31:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:31:36 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 17:31:36 - DEBUG - <==      Total: 1
2025-03-26 17:31:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:31:36 - DEBUG - <==      Total: 1
2025-03-26 17:31:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:36 - INFO - 普通key被查询
2025-03-26 17:31:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:31:36 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:31:36 - DEBUG - <==      Total: 1
2025-03-26 17:31:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:36 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:31:36 - DEBUG - ==> Parameters: 1494(Long), 2(Long)
2025-03-26 17:31:36 - DEBUG - <==      Total: 0
2025-03-26 17:31:38 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:38 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:31:38 - DEBUG - ==> Parameters: 1494(Long), 2(Long)
2025-03-26 17:31:38 - DEBUG - <==    Updates: 1
2025-03-26 17:31:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:39 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:31:39 - DEBUG - ==> Parameters: 
2025-03-26 17:31:39 - DEBUG - <==      Total: 1
2025-03-26 17:31:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:31:40 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 17:31:40 - DEBUG - <==      Total: 1
2025-03-26 17:31:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:31:40 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:31:40 - DEBUG - <==      Total: 1
2025-03-26 17:31:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:40 - INFO - 普通key被查询
2025-03-26 17:31:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:31:40 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:31:40 - DEBUG - <==      Total: 1
2025-03-26 17:31:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:40 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:31:40 - DEBUG - ==> Parameters: 1494(Long), 1474(Long)
2025-03-26 17:31:40 - DEBUG - <==      Total: 0
2025-03-26 17:31:41 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:41 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:31:41 - DEBUG - ==> Parameters: 1494(Long), 1474(Long)
2025-03-26 17:31:41 - DEBUG - <==    Updates: 1
2025-03-26 17:31:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:31:43 - DEBUG - ==> Parameters: 
2025-03-26 17:31:43 - DEBUG - <==      Total: 1
2025-03-26 17:31:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:45 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:31:45 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:31:45 - DEBUG - <==      Total: 0
2025-03-26 17:31:45 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:31:45 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:31:45 - DEBUG - <==      Total: 1
2025-03-26 17:31:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:50 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:31:50 - DEBUG - ==> Parameters: 
2025-03-26 17:31:50 - DEBUG - <==      Total: 1
2025-03-26 17:31:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:31:52 - DEBUG - ==> Parameters: 
2025-03-26 17:31:52 - DEBUG - <==      Total: 1
2025-03-26 17:31:52 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:31:52 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:31:52 - DEBUG - <==      Total: 10
2025-03-26 17:31:57 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:31:57 - DEBUG - 文件上传成功，/blogs/15/8/2f19130f-49a5-4b10-a3bf-4b55d2303f5f.jpg
2025-03-26 17:32:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:02 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:32:02 - DEBUG - ==> Parameters: 4(Long), 1494(Long), 测试(String), /imgs/blogs/15/8/2f19130f-49a5-4b10-a3bf-4b55d2303f5f.jpg(String), 测试(String)
2025-03-26 17:32:02 - DEBUG - <==    Updates: 1
2025-03-26 17:32:02 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:32:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:02 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:32:02 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:02 - DEBUG - <==      Total: 0
2025-03-26 17:32:02 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:32:02 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:02 - DEBUG - <==      Total: 1
2025-03-26 17:32:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:32:02 - DEBUG - ==> Parameters: 1494(Long), 10(Long)
2025-03-26 17:32:02 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 7
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:04 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:04 - DEBUG - <==      Total: 1
2025-03-26 17:32:09 - DEBUG - send success: 059092
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 7
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:14 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:14 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:14 - DEBUG - <==      Total: 1
2025-03-26 17:32:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:32:16 - DEBUG - ==> Parameters: 25(Long)
2025-03-26 17:32:16 - DEBUG - <==      Total: 1
2025-03-26 17:32:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:16 - DEBUG - <==      Total: 1
2025-03-26 17:32:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:16 - INFO - 普通key被查询
2025-03-26 17:32:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:32:16 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:32:16 - DEBUG - <==      Total: 1
2025-03-26 17:32:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:16 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:32:16 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:32:16 - DEBUG - <==      Total: 0
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:18 - DEBUG - <==      Total: 1
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:32:18 - DEBUG - <==      Total: 0
2025-03-26 17:32:18 - DEBUG - <==      Total: 0
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:32:18 - DEBUG - <==      Total: 1
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1494(Long), 10(Long)
2025-03-26 17:32:18 - DEBUG - <==      Total: 1
2025-03-26 17:32:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id IN ( ? )
2025-03-26 17:32:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:18 - DEBUG - <==      Total: 1
2025-03-26 17:32:21 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:21 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:32:21 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:32:21 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:21 - DEBUG - <==      Total: 1
2025-03-26 17:32:21 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:32:21 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:32:21 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:32:21 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:32:21 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:21 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:32:21 - DEBUG - <==      Total: 0
2025-03-26 17:32:21 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 17:32:21 - DEBUG - <==      Total: 1
2025-03-26 17:32:21 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:32:21 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:32:21 - DEBUG - <==      Total: 1
2025-03-26 17:32:21 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:32:21 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 17:32:21 - DEBUG - <==      Total: 1
2025-03-26 17:32:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:32:26 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:32:26 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 17:32:26 - DEBUG - <==      Total: 1
2025-03-26 17:32:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:32:26 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 17:32:26 - DEBUG - <==      Total: 5
2025-03-26 17:32:28 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:32:28 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:32:28 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:32:28 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 17:32:28 - DEBUG - <==      Total: 1
2025-03-26 17:32:28 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:32:28 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 17:32:28 - DEBUG - <==      Total: 5
2025-03-26 17:34:12 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:36:19 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:176)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:38:08 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:38:34 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:38:34 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:38:34 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 17:38:34 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:38:34 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:38:39 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21676 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:38:39 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:38:39 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:38:39 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:38:39 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:38:39 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 17:38:40 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:38:40 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:38:40 - INFO - Starting service [Tomcat]
2025-03-26 17:38:40 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:38:40 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:38:40 - INFO - Root WebApplicationContext: initialization completed in 1092 ms
2025-03-26 17:38:40 - INFO - HikariPool-1 - Starting...
2025-03-26 17:38:41 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:38:41 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:38:41 - DEBUG - ==> Parameters: 
2025-03-26 17:38:41 - DEBUG - <==      Total: 14
2025-03-26 17:38:41 - INFO - Redisson 3.13.6
2025-03-26 17:38:41 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:38:41 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:38:41 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 17:38:41 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 17:38:41 - INFO - Started FoodieOdysseyApplication in 2.957 seconds (JVM running for 3.403)
2025-03-26 17:39:18 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 17:39:18 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 17:39:18 - INFO - Completed initialization in 2 ms
2025-03-26 17:39:18 - INFO - 刷新token有效期耗时: 75
2025-03-26 17:39:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:39:18 - DEBUG - ==> Parameters: 
2025-03-26 17:39:18 - DEBUG - <==      Total: 1
2025-03-26 17:39:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:22 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:22 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:22 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:39:22 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:39:22 - DEBUG - <==      Total: 0
2025-03-26 17:39:22 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:39:22 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:39:22 - DEBUG - <==      Total: 1
2025-03-26 17:39:25 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:25 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:39:25 - DEBUG - ==> Parameters: 
2025-03-26 17:39:25 - DEBUG - <==      Total: 1
2025-03-26 17:39:26 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:39:26 - DEBUG - ==> Parameters: 25(Long)
2025-03-26 17:39:26 - DEBUG - <==      Total: 1
2025-03-26 17:39:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:39:26 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:39:26 - DEBUG - <==      Total: 1
2025-03-26 17:39:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:27 - INFO - 普通key被查询
2025-03-26 17:39:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:39:27 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:39:27 - DEBUG - <==      Total: 1
2025-03-26 17:39:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:27 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:39:27 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:39:27 - DEBUG - <==      Total: 0
2025-03-26 17:39:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:29 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:39:29 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:39:29 - DEBUG - <==    Updates: 1
2025-03-26 17:39:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:47 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:47 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:39:47 - DEBUG - ==> Parameters: 
2025-03-26 17:39:47 - DEBUG - <==      Total: 1
2025-03-26 17:39:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:39:47 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:39:47 - DEBUG - <==      Total: 10
2025-03-26 17:39:50 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:50 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:39:50 - DEBUG - ==> Parameters: 
2025-03-26 17:39:50 - DEBUG - <==      Total: 1
2025-03-26 17:39:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:53 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:39:53 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 17:39:53 - DEBUG - <==      Total: 1
2025-03-26 17:39:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:39:53 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:39:53 - DEBUG - <==      Total: 1
2025-03-26 17:39:53 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:53 - INFO - 普通key被查询
2025-03-26 17:39:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:39:53 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:39:53 - DEBUG - <==      Total: 1
2025-03-26 17:39:53 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:53 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:39:53 - DEBUG - ==> Parameters: 1010(Long), 1474(Long)
2025-03-26 17:39:53 - DEBUG - <==      Total: 1
2025-03-26 17:39:55 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:39:55 - DEBUG - ==> Parameters: 
2025-03-26 17:39:55 - DEBUG - <==      Total: 1
2025-03-26 17:39:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:56 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:39:56 - DEBUG - ==> Parameters: 25(Long)
2025-03-26 17:39:56 - DEBUG - <==      Total: 1
2025-03-26 17:39:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:39:56 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:39:56 - DEBUG - <==      Total: 1
2025-03-26 17:39:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:56 - INFO - 普通key被查询
2025-03-26 17:39:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:56 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:39:56 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:39:56 - DEBUG - <==      Total: 1
2025-03-26 17:39:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:39:58 - DEBUG - ==> Parameters: 
2025-03-26 17:39:58 - DEBUG - <==      Total: 1
2025-03-26 17:39:59 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:39:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:59 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:39:59 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:39:59 - DEBUG - <==      Total: 0
2025-03-26 17:39:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:39:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:39:59 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:39:59 - DEBUG - <==      Total: 1
2025-03-26 17:40:00 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:00 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:00 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 7
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:01 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:01 - DEBUG - <==      Total: 1
2025-03-26 17:40:05 - DEBUG - send success: 420151
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:12 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 7
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:12 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:12 - DEBUG - <==      Total: 1
2025-03-26 17:40:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:14 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:40:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:14 - DEBUG - <==      Total: 0
2025-03-26 17:40:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:40:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:14 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:16 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 7
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:16 - DEBUG - <==      Total: 1
2025-03-26 17:40:18 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:18 - DEBUG - ==> Parameters: 
2025-03-26 17:40:18 - DEBUG - <==      Total: 1
2025-03-26 17:40:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:40:19 - DEBUG - ==> Parameters: 25(Long)
2025-03-26 17:40:19 - DEBUG - <==      Total: 1
2025-03-26 17:40:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:19 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:19 - DEBUG - <==      Total: 1
2025-03-26 17:40:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:19 - INFO - 普通key被查询
2025-03-26 17:40:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:40:19 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:40:19 - DEBUG - <==      Total: 1
2025-03-26 17:40:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:19 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:40:19 - DEBUG - ==> Parameters: 1010(Long), 1494(Long)
2025-03-26 17:40:19 - DEBUG - <==      Total: 1
2025-03-26 17:40:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:40:24 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:40:24 - DEBUG - <==      Total: 1
2025-03-26 17:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:24 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:24 - DEBUG - <==      Total: 1
2025-03-26 17:40:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:24 - INFO - 普通key被查询
2025-03-26 17:40:24 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:40:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:24 - DEBUG - <==      Total: 1
2025-03-26 17:40:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:40:24 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:24 - DEBUG - <==      Total: 1
2025-03-26 17:40:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:24 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:40:24 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 17:40:24 - DEBUG - <==      Total: 0
2025-03-26 17:40:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:27 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:27 - DEBUG - ==> Parameters: 
2025-03-26 17:40:27 - DEBUG - <==      Total: 1
2025-03-26 17:40:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:29 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:40:29 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:29 - DEBUG - <==      Total: 0
2025-03-26 17:40:29 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:40:29 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:29 - DEBUG - <==      Total: 1
2025-03-26 17:40:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:29 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:40:29 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 7
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:30 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:30 - DEBUG - <==      Total: 1
2025-03-26 17:40:37 - DEBUG - send success: 646879
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 19851991582(String)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:43 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 7
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:43 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:43 - DEBUG - <==      Total: 1
2025-03-26 17:40:44 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:44 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:44 - DEBUG - ==> Parameters: 
2025-03-26 17:40:44 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 0
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1494(Long), 10(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 7
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:40:46 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:40:46 - DEBUG - <==      Total: 1
2025-03-26 17:40:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:47 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:40:47 - DEBUG - ==> Parameters: 
2025-03-26 17:40:47 - DEBUG - <==      Total: 1
2025-03-26 17:40:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:40:51 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:40:51 - DEBUG - ==> Parameters: 
2025-03-26 17:40:51 - DEBUG - <==      Total: 1
2025-03-26 17:40:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:40:51 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:40:51 - DEBUG - <==      Total: 10
2025-03-26 17:40:53 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:40:53 - DEBUG - 文件上传成功，/blogs/3/14/ddd8d66e-df3e-40f7-88e9-bf7ceaf340d8.jpg
2025-03-26 17:41:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:02 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:41:02 - DEBUG - ==> Parameters: 6(Long), 1494(Long), 推送测试(String), /imgs/blogs/3/14/ddd8d66e-df3e-40f7-88e9-bf7ceaf340d8.jpg(String), 测试(String)
2025-03-26 17:41:02 - DEBUG - <==    Updates: 1
2025-03-26 17:41:02 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ?)
2025-03-26 17:41:02 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:02 - DEBUG - <==      Total: 3
2025-03-26 17:41:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:02 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:41:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:02 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:41:02 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:02 - DEBUG - <==      Total: 0
2025-03-26 17:41:02 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:41:02 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:02 - DEBUG - <==      Total: 1
2025-03-26 17:41:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:41:02 - DEBUG - ==> Parameters: 1494(Long), 10(Long)
2025-03-26 17:41:02 - DEBUG - <==      Total: 2
2025-03-26 17:41:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 8
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:05 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:05 - DEBUG - <==      Total: 1
2025-03-26 17:41:08 - DEBUG - send success: 360675
2025-03-26 17:41:12 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:41:12 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 17:41:12 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 8
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:41:13 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:41:13 - DEBUG - <==      Total: 1
2025-03-26 17:41:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:41:14 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:41:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:41:14 - DEBUG - <==      Total: 0
2025-03-26 17:41:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:41:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:41:14 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 8
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:11 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:11 - DEBUG - <==      Total: 1
2025-03-26 17:43:14 - DEBUG - send success: 264296
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 13838411438(String)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:20 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 8
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:20 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:20 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:20 - DEBUG - <==      Total: 1
2025-03-26 17:43:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:23 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:43:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:23 - DEBUG - <==      Total: 0
2025-03-26 17:43:23 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:43:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:23 - DEBUG - <==      Total: 1
2025-03-26 17:43:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:43:23 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:43:23 - DEBUG - <==      Total: 2
2025-03-26 17:43:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 8
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:43:24 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:43:24 - DEBUG - <==      Total: 1
2025-03-26 17:43:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:26 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:43:26 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:43:26 - DEBUG - ==> Parameters: 
2025-03-26 17:43:26 - DEBUG - <==      Total: 1
2025-03-26 17:43:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:43:26 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:43:26 - DEBUG - <==      Total: 10
2025-03-26 17:43:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:28 - DEBUG - 文件上传成功，/blogs/2/7/093b22be-ed91-4c9a-8174-3da2f6c586f1.jpg
2025-03-26 17:43:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:35 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:43:35 - DEBUG - ==> Parameters: 2(Long), 2(Long), 推送测试2(String), /imgs/blogs/2/7/093b22be-ed91-4c9a-8174-3da2f6c586f1.jpg(String), 测试(String)
2025-03-26 17:43:35 - DEBUG - <==    Updates: 1
2025-03-26 17:43:35 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ?)
2025-03-26 17:43:35 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:35 - DEBUG - <==      Total: 0
2025-03-26 17:43:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:35 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:43:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:43:35 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:35 - DEBUG - <==      Total: 0
2025-03-26 17:43:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:43:35 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:43:35 - DEBUG - <==      Total: 1
2025-03-26 17:43:35 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:43:35 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:43:35 - DEBUG - <==      Total: 3
2025-03-26 17:44:55 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:45:39 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:45:39 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:45:39 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 17:45:39 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:45:39 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:45:44 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 17228 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:45:44 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:45:44 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:45:44 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:45:44 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:45:44 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 17:45:45 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:45:45 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:45:45 - INFO - Starting service [Tomcat]
2025-03-26 17:45:45 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:45:45 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:45:45 - INFO - Root WebApplicationContext: initialization completed in 989 ms
2025-03-26 17:45:46 - INFO - HikariPool-1 - Starting...
2025-03-26 17:45:46 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:45:46 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:45:46 - DEBUG - ==> Parameters: 
2025-03-26 17:45:46 - DEBUG - <==      Total: 14
2025-03-26 17:45:46 - INFO - Redisson 3.13.6
2025-03-26 17:45:46 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:45:46 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:45:47 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 17:45:47 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 17:45:47 - INFO - Started FoodieOdysseyApplication in 2.89 seconds (JVM running for 3.375)
2025-03-26 17:45:51 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 17:45:51 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 17:45:51 - INFO - Completed initialization in 1 ms
2025-03-26 17:45:51 - INFO - 刷新token有效期耗时: 45
2025-03-26 17:45:51 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:45:51 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:45:51 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:45:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:45:51 - DEBUG - <==      Total: 0
2025-03-26 17:45:51 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:45:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:45:51 - DEBUG - <==      Total: 1
2025-03-26 17:45:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:45:51 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:45:51 - DEBUG - <==      Total: 3
2025-03-26 17:45:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:45:54 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:45:54 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:45:54 - DEBUG - ==> Parameters: 
2025-03-26 17:45:54 - DEBUG - <==      Total: 1
2025-03-26 17:45:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:45:54 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:45:54 - DEBUG - <==      Total: 10
2025-03-26 17:45:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:45:56 - DEBUG - 文件上传成功，/blogs/12/5/22cfcb29-c333-4ee2-8ccf-888a197fb797.jpg
2025-03-26 17:46:03 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:46:03 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:46:03 - DEBUG - ==> Parameters: 6(Long), 2(Long), 推送测试3(String), /imgs/blogs/12/5/22cfcb29-c333-4ee2-8ccf-888a197fb797.jpg(String), 测试(String)
2025-03-26 17:46:03 - DEBUG - <==    Updates: 1
2025-03-26 17:46:03 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ?)
2025-03-26 17:46:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:46:03 - DEBUG - <==      Total: 0
2025-03-26 17:46:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:46:04 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:46:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:46:04 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:46:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:46:04 - DEBUG - <==      Total: 0
2025-03-26 17:46:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:46:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:46:04 - DEBUG - <==      Total: 1
2025-03-26 17:46:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:46:04 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:46:04 - DEBUG - <==      Total: 4
2025-03-26 17:47:15 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:47:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:47:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:47:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:47:30 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:47:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:30 - DEBUG - <==      Total: 0
2025-03-26 17:47:30 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:47:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:30 - DEBUG - <==      Total: 1
2025-03-26 17:47:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:47:30 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:47:30 - DEBUG - <==      Total: 4
2025-03-26 17:47:55 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:55 - DEBUG - <==      Total: 1
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 
2025-03-26 17:47:55 - DEBUG - <==      Total: 1
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:47:55 - DEBUG - <==      Total: 10
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:47:55 - DEBUG - <==      Total: 1
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:55 - DEBUG - <==      Total: 1
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:55 - DEBUG - <==      Total: 1
2025-03-26 17:47:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:47:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:47:56 - DEBUG - <==      Total: 1
2025-03-26 17:47:59 - DEBUG - send success: 541489
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 13838411438(String)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 10
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:48:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:06 - DEBUG - <==      Total: 1
2025-03-26 17:48:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:25 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:48:25 - DEBUG - ==> Parameters: 
2025-03-26 17:48:25 - DEBUG - <==      Total: 1
2025-03-26 17:48:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:48:25 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:48:25 - DEBUG - <==      Total: 10
2025-03-26 17:48:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:28 - DEBUG - 文件上传成功，/blogs/1/2/cb015782-e378-4a2c-8161-c4dcdd745e9f.jpg
2025-03-26 17:48:37 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:48:37 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:48:37 - DEBUG - ==> Parameters: 1(Long), 2(Long), 测试推送(String), /imgs/blogs/1/2/cb015782-e378-4a2c-8161-c4dcdd745e9f.jpg(String), 测试(String)
2025-03-26 17:48:37 - DEBUG - <==    Updates: 1
2025-03-26 17:48:37 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ?)
2025-03-26 17:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:37 - DEBUG - <==      Total: 0
2025-03-26 17:48:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:37 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:37 - DEBUG - <==      Total: 0
2025-03-26 17:48:37 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:37 - DEBUG - <==      Total: 1
2025-03-26 17:48:37 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:48:37 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:48:37 - DEBUG - <==      Total: 5
2025-03-26 17:48:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:48:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:48:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:48:42 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:48:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:42 - DEBUG - <==      Total: 0
2025-03-26 17:48:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:48:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:48:42 - DEBUG - <==      Total: 1
2025-03-26 17:48:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:48:42 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:48:42 - DEBUG - <==      Total: 5
2025-03-26 17:49:04 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:49:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 10
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:49:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:49:05 - DEBUG - <==      Total: 1
2025-03-26 17:49:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:49:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:49:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:49:06 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 17:49:06 - DEBUG - <==      Total: 1
2025-03-26 17:49:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:49:06 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 17:49:06 - DEBUG - <==      Total: 5
2025-03-26 17:49:07 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:07 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:07 - INFO - 普通key被查询
2025-03-26 17:49:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:49:07 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:49:07 - DEBUG - <==      Total: 1
2025-03-26 17:49:07 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:49:07 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:49:07 - DEBUG - <==      Total: 6
2025-03-26 17:49:09 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:09 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:09 - INFO - 普通key被查询
2025-03-26 17:49:09 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:49:09 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:49:09 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:49:09 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:49:09 - DEBUG - <==      Total: 2
2025-03-26 17:49:09 - DEBUG - <==      Total: 1
2025-03-26 17:49:11 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:11 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:49:11 - INFO - 普通key被查询
2025-03-26 17:49:11 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:49:11 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:49:11 - DEBUG - <==      Total: 2
2025-03-26 17:49:15 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher ( shop_id, title, sub_title, rules, pay_value, actual_value, type ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-03-26 17:49:15 - DEBUG - ==> Parameters: 1(Long), 100元代金券(String), 周一至周五可用(String), 全场通用\n无需预约(String), 8000(Long), 10000(Long), 1(Integer)
2025-03-26 17:49:15 - DEBUG - <==    Updates: 1
2025-03-26 17:49:15 - DEBUG - ==>  Preparing: INSERT INTO tb_seckill_voucher ( voucher_id, stock, begin_time, end_time ) VALUES ( ?, ?, ?, ? )
2025-03-26 17:49:15 - DEBUG - ==> Parameters: 24(Long), 100(Integer), 2025-03-22T18:01:23(LocalDateTime), 2025-03-28T18:03:23(LocalDateTime)
2025-03-26 17:49:15 - DEBUG - <==    Updates: 1
2025-03-26 17:49:23 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:49:23 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:49:23 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 17:49:23 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:49:23 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 17:49:24 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:49:38 - INFO - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.jwj.fo.LoginTest], using SpringBootContextLoader
2025-03-26 17:49:38 - INFO - Could not detect default resource locations for test class [org.jwj.fo.LoginTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2025-03-26 17:49:38 - INFO - Could not detect default configuration classes for test class [org.jwj.fo.LoginTest]: LoginTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-26 17:49:38 - INFO - Found @SpringBootConfiguration org.jwj.fo.FoodieOdysseyApplication for test class org.jwj.fo.LoginTest
2025-03-26 17:49:39 - INFO - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2025-03-26 17:49:39 - INFO - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@319bc845, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c5474f5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2f4205be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54e22bdd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd418e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544820b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b98a075, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e61d218, org.springframework.test.context.event.EventPublishingTestExecutionListener@3569fc08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@20b12f8a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e84a8e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e554a3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54a67a45, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7d42c224, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56aaaecd]
2025-03-26 17:49:39 - INFO - Starting LoginTest using Java 17.0.12 on jwj with PID 18116 (started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:49:39 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:49:39 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:49:40 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:49:40 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:49:40 - INFO - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-03-26 17:49:41 - INFO - HikariPool-1 - Starting...
2025-03-26 17:49:41 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:49:41 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:49:41 - DEBUG - ==> Parameters: 
2025-03-26 17:49:41 - DEBUG - <==      Total: 15
2025-03-26 17:49:42 - INFO - Redisson 3.13.6
2025-03-26 17:49:42 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:49:42 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:49:44 - INFO - Started LoginTest in 5.239 seconds (JVM running for 6.169)
2025-03-26 17:49:44 - DEBUG - send success: 458888
2025-03-26 17:49:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:44 - DEBUG - ==> Parameters: 13381036439(String)
2025-03-26 17:49:44 - DEBUG - <==      Total: 0
2025-03-26 17:49:44 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:44 - DEBUG - ==> Parameters: 13381036439(String), foodie_t2u419mtlz(String), (String)
2025-03-26 17:49:44 - DEBUG - <==    Updates: 1
2025-03-26 17:49:44 - DEBUG - send success: 404771
2025-03-26 17:49:44 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:44 - DEBUG - ==> Parameters: 13986738325(String)
2025-03-26 17:49:44 - DEBUG - <==      Total: 0
2025-03-26 17:49:44 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:44 - DEBUG - ==> Parameters: 13986738325(String), foodie_kk70fvdhsv(String), (String)
2025-03-26 17:49:44 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 631693
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13364323729(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13364323729(String), foodie_4f6lza1b6w(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 932505
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17116526901(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17116526901(String), foodie_42s291oysv(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 047609
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17331320166(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17331320166(String), foodie_l9v7ojjlgl(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 652544
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 18865437932(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 18865437932(String), foodie_0kignfakdm(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 776796
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17199886091(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 17199886091(String), foodie_ns7pxrpidf(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 600637
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13870838041(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13870838041(String), foodie_pd83ddne0e(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 967396
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13171778774(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 13171778774(String), foodie_g5pssrtzui(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:45 - DEBUG - send success: 828706
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 15749376853(String)
2025-03-26 17:49:45 - DEBUG - <==      Total: 0
2025-03-26 17:49:45 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:45 - DEBUG - ==> Parameters: 15749376853(String), foodie_zqpbgmqpw6(String), (String)
2025-03-26 17:49:45 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 470772
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13551233469(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13551233469(String), foodie_7beo4cneak(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 010484
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 17897162122(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 17897162122(String), foodie_gq7tl97ucv(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 771301
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13873644543(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13873644543(String), foodie_uiyrtqbtd7(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 894026
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 17381229198(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 17381229198(String), foodie_py05c7ocnw(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 654879
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 14720767137(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 14720767137(String), foodie_qtdncaxmpt(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 855661
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 18087402047(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 18087402047(String), foodie_zlp3b2rn27(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 908920
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13602613822(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 13602613822(String), foodie_5evcj6tdle(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:46 - DEBUG - send success: 371558
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 15602757536(String)
2025-03-26 17:49:46 - DEBUG - <==      Total: 0
2025-03-26 17:49:46 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:46 - DEBUG - ==> Parameters: 15602757536(String), foodie_6ddezb0uz3(String), (String)
2025-03-26 17:49:46 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 500077
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 13934629774(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 13934629774(String), foodie_45x01ksmm8(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 360384
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 18274039457(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 18274039457(String), foodie_v0gti773zg(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 242334
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 13941462413(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 13941462413(String), foodie_eod0hrbhvq(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 661162
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 18130790620(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 18130790620(String), foodie_dv648t632j(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 035887
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 15080734852(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 15080734852(String), foodie_9okff7tjfg(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 477947
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 14503898286(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 14503898286(String), foodie_s7z2nm5936(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:47 - DEBUG - send success: 043366
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 15874521521(String)
2025-03-26 17:49:47 - DEBUG - <==      Total: 0
2025-03-26 17:49:47 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:47 - DEBUG - ==> Parameters: 15874521521(String), foodie_3790yfshl9(String), (String)
2025-03-26 17:49:47 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 429079
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 15269277478(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 15269277478(String), foodie_wj4zncdj08(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 686829
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13990817047(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13990817047(String), foodie_3ufykritk9(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 087019
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13595945997(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13595945997(String), foodie_0s3j6rxeu3(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 888481
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 17026789214(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 17026789214(String), foodie_h7m9yic1a6(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 185262
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13532492330(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 13532492330(String), foodie_tdlt14gph7(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 161889
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 18794337850(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 18794337850(String), foodie_vpcoxxyhwy(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 203505
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 14730966450(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 14730966450(String), foodie_u072n2wjex(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:48 - DEBUG - send success: 536325
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 19936673234(String)
2025-03-26 17:49:48 - DEBUG - <==      Total: 0
2025-03-26 17:49:48 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:48 - DEBUG - ==> Parameters: 19936673234(String), foodie_pw5eg83efw(String), (String)
2025-03-26 17:49:48 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 553027
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 15837768841(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 15837768841(String), foodie_2junmzof9d(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 847473
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 13476987009(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 13476987009(String), foodie_gosy88q5fd(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 582617
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 17606672744(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 17606672744(String), foodie_544f58mtiz(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 953290
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 15348483253(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 15348483253(String), foodie_zgnhx64d3w(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 324909
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18904397085(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18904397085(String), foodie_mlwujsuq39(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 061517
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18058422696(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18058422696(String), foodie_yu9et635f7(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 728493
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18602483063(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 18602483063(String), foodie_jwazmse9jf(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:49 - DEBUG - send success: 471223
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 13408594922(String)
2025-03-26 17:49:49 - DEBUG - <==      Total: 0
2025-03-26 17:49:49 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:49 - DEBUG - ==> Parameters: 13408594922(String), foodie_ohoo8varek(String), (String)
2025-03-26 17:49:49 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 063987
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 16617948989(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 16617948989(String), foodie_mc12e85aq1(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 989864
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 17155548329(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 17155548329(String), foodie_uu4ogk84hz(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 912634
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 19994015200(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 19994015200(String), foodie_o8ip2sy1r2(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 087827
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 15009733526(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 15009733526(String), foodie_zt3xhozrbb(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 066294
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 15702407372(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 15702407372(String), foodie_hifqraw5js(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 786316
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 13072041339(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 13072041339(String), foodie_4pje1gxmka(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 473189
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 18892965019(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 18892965019(String), foodie_hhzbuz0he7(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:50 - DEBUG - send success: 695240
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 17000610050(String)
2025-03-26 17:49:50 - DEBUG - <==      Total: 0
2025-03-26 17:49:50 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:50 - DEBUG - ==> Parameters: 17000610050(String), foodie_isldj4pan5(String), (String)
2025-03-26 17:49:50 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 752778
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 13226180620(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 13226180620(String), foodie_jm9rgunegw(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 457921
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 17639112543(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 17639112543(String), foodie_zg81bdaim5(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 558263
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 14743325552(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 14743325552(String), foodie_iuxootb5zq(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 581241
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 18341640617(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 18341640617(String), foodie_dems7ypxf1(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 598389
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 15728911609(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 15728911609(String), foodie_3uyvxrkrlc(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 618313
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 13098724070(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 13098724070(String), foodie_51uvpxhxwu(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 840311
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 18357980300(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 18357980300(String), foodie_usee9qgrdk(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:51 - DEBUG - send success: 421548
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 16631456834(String)
2025-03-26 17:49:51 - DEBUG - <==      Total: 0
2025-03-26 17:49:51 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:51 - DEBUG - ==> Parameters: 16631456834(String), foodie_a8kfm6xij9(String), (String)
2025-03-26 17:49:51 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 313566
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 17191377971(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 17191377971(String), foodie_wp1mjammtc(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 705025
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13435146579(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13435146579(String), foodie_pubjtl7spx(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 087306
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13374110788(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13374110788(String), foodie_os8okf23jt(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 228096
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13010618799(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 13010618799(String), foodie_r1ycmyypa9(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 620563
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 18491917632(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 18491917632(String), foodie_r4194p1q7i(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 866209
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 15883104718(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 15883104718(String), foodie_aj69c183p5(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 391060
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 19896874251(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 19896874251(String), foodie_hcjzldnw3d(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:52 - DEBUG - send success: 002988
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 18705034303(String)
2025-03-26 17:49:52 - DEBUG - <==      Total: 0
2025-03-26 17:49:52 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:52 - DEBUG - ==> Parameters: 18705034303(String), foodie_n16qx458tr(String), (String)
2025-03-26 17:49:52 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 275429
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 13000479206(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 13000479206(String), foodie_u5yc3oi1hk(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 937811
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 17536309658(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 17536309658(String), foodie_hy2dy6xsp0(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 743183
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18766873928(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18766873928(String), foodie_zxa93x636p(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 324582
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 13604344797(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 13604344797(String), foodie_xe9oxy33st(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 935141
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 15050153998(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 15050153998(String), foodie_v8bc2907k5(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 179055
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 15864500616(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 15864500616(String), foodie_gga5qwdop4(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 899695
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18403732848(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18403732848(String), foodie_1aa96uxet7(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:53 - DEBUG - send success: 709036
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18577383001(String)
2025-03-26 17:49:53 - DEBUG - <==      Total: 0
2025-03-26 17:49:53 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:53 - DEBUG - ==> Parameters: 18577383001(String), foodie_di5pivu7tu(String), (String)
2025-03-26 17:49:53 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 730906
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 15807827669(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 15807827669(String), foodie_pj47harg67(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 398581
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 15093226377(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 15093226377(String), foodie_4z8zrahq0f(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 998437
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 17623859519(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 17623859519(String), foodie_svja1m8e14(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 872601
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18558709536(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18558709536(String), foodie_for2ooh8w3(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 434674
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 13219907344(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 13219907344(String), foodie_jl499j1wj1(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 708189
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18906607276(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18906607276(String), foodie_75rk284gwm(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 301503
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 13597669577(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 13597669577(String), foodie_99q59fx5b9(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:54 - DEBUG - send success: 283229
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18837168581(String)
2025-03-26 17:49:54 - DEBUG - <==      Total: 0
2025-03-26 17:49:54 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:54 - DEBUG - ==> Parameters: 18837168581(String), foodie_u2qxcr11mw(String), (String)
2025-03-26 17:49:54 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 554139
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 18938319905(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 18938319905(String), foodie_uc73q2xpii(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 996299
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 15060718253(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 15060718253(String), foodie_7zzze3va26(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 944582
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17673928754(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17673928754(String), foodie_0ca7ri1m23(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 857240
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17519686722(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17519686722(String), foodie_lgdxs75ipo(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 078176
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 13181359558(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 13181359558(String), foodie_qskbmz25pr(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 273588
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17720196226(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 17720196226(String), foodie_g29vf4vmzn(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 606356
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 13236060151(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 13236060151(String), foodie_34wg4nhr8v(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:55 - DEBUG - send success: 602418
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 18929731635(String)
2025-03-26 17:49:55 - DEBUG - <==      Total: 0
2025-03-26 17:49:55 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:55 - DEBUG - ==> Parameters: 18929731635(String), foodie_fspfmwrafq(String), (String)
2025-03-26 17:49:55 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 031572
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18639326500(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18639326500(String), foodie_kqorbspird(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 161246
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 15749174275(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 15749174275(String), foodie_fbk0nrjc1f(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 879390
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18577619985(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18577619985(String), foodie_qypdncui95(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 225203
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18605614305(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18605614305(String), foodie_1xrz1n2j0e(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 884894
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 14965448731(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 14965448731(String), foodie_9vj8ooa3jn(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 879842
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 17140858986(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 17140858986(String), foodie_u5o2121g3v(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 859165
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18754140362(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 18754140362(String), foodie_bf67t18j26(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:56 - DEBUG - send success: 646848
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 19928171484(String)
2025-03-26 17:49:56 - DEBUG - <==      Total: 0
2025-03-26 17:49:56 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:56 - DEBUG - ==> Parameters: 19928171484(String), foodie_zrn6kotnzx(String), (String)
2025-03-26 17:49:56 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 334050
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 15734494848(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 15734494848(String), foodie_lgncn0uza4(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 798823
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 18718445240(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 18718445240(String), foodie_mtpcpu1ifz(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 217008
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 19869299115(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 19869299115(String), foodie_49x8tmf0g9(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 881280
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 13783556048(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 13783556048(String), foodie_kbn0nl0lzf(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 245498
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 13226510421(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 13226510421(String), foodie_aamy1cuo1t(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 609756
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 18863421413(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 18863421413(String), foodie_ilqrvgrfy0(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 218520
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 15291969732(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 15291969732(String), foodie_mo4r9a8mt8(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:57 - DEBUG - send success: 379817
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 19895714906(String)
2025-03-26 17:49:57 - DEBUG - <==      Total: 0
2025-03-26 17:49:57 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:57 - DEBUG - ==> Parameters: 19895714906(String), foodie_k1l1qulwqn(String), (String)
2025-03-26 17:49:57 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 711497
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18625254851(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18625254851(String), foodie_l8ucxog1xg(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 668348
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 19969544057(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 19969544057(String), foodie_inrkfzadam(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 116090
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18446724246(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18446724246(String), foodie_km57l750t5(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 744391
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13064573956(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13064573956(String), foodie_74rgr3bxmb(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 580938
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13168927502(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13168927502(String), foodie_3ahteedoys(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 174531
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 17651359305(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 17651359305(String), foodie_0ouokdemif(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 253313
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18141586253(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 18141586253(String), foodie_eqmiak9n6m(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:58 - DEBUG - send success: 802185
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13974335137(String)
2025-03-26 17:49:58 - DEBUG - <==      Total: 0
2025-03-26 17:49:58 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:58 - DEBUG - ==> Parameters: 13974335137(String), foodie_ouvahnk7ci(String), (String)
2025-03-26 17:49:58 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 436734
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17022778306(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17022778306(String), foodie_fjdq4997s4(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 673227
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18142532232(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18142532232(String), foodie_gx6ucdlu6r(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 452860
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17854871678(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17854871678(String), foodie_6djvzkdq3v(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 499327
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18421529416(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18421529416(String), foodie_3exmfew38a(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 057203
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17569289808(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17569289808(String), foodie_kilox4xb3s(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 391221
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18721715203(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 18721715203(String), foodie_jts5zp5r0p(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 250197
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17619925507(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 17619925507(String), foodie_huwto54uro(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:49:59 - DEBUG - send success: 503855
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 13106303805(String)
2025-03-26 17:49:59 - DEBUG - <==      Total: 0
2025-03-26 17:49:59 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:49:59 - DEBUG - ==> Parameters: 13106303805(String), foodie_rkrkaercum(String), (String)
2025-03-26 17:49:59 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 903843
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18139634980(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18139634980(String), foodie_yxpzh157sy(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 600324
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 13070695879(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 13070695879(String), foodie_a64jstalc7(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 707958
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 15997959643(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 15997959643(String), foodie_5sjgfkl2cn(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 614144
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 16635694364(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 16635694364(String), foodie_3c0mswplo2(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 024779
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18044032331(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18044032331(String), foodie_0rgw0swtji(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 251808
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 14933964368(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 14933964368(String), foodie_0ceat0isxb(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 937047
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 13671581903(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 13671581903(String), foodie_9bj2l33975(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:00 - DEBUG - send success: 462362
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18195250137(String)
2025-03-26 17:50:00 - DEBUG - <==      Total: 0
2025-03-26 17:50:00 - DEBUG - ==>  Preparing: INSERT INTO tb_user ( phone, nick_name, icon ) VALUES ( ?, ?, ? )
2025-03-26 17:50:00 - DEBUG - ==> Parameters: 18195250137(String), foodie_z622jqmp4o(String), (String)
2025-03-26 17:50:00 - DEBUG - <==    Updates: 1
2025-03-26 17:50:01 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:50:01 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:50:01 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 17:50:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:50:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:50:11 - INFO - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.jwj.fo.LoginTest], using SpringBootContextLoader
2025-03-26 17:50:11 - INFO - Could not detect default resource locations for test class [org.jwj.fo.LoginTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2025-03-26 17:50:11 - INFO - Could not detect default configuration classes for test class [org.jwj.fo.LoginTest]: LoginTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-26 17:50:11 - INFO - Found @SpringBootConfiguration org.jwj.fo.FoodieOdysseyApplication for test class org.jwj.fo.LoginTest
2025-03-26 17:50:11 - INFO - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2025-03-26 17:50:11 - INFO - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@319bc845, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c5474f5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2f4205be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54e22bdd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd418e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544820b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b98a075, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e61d218, org.springframework.test.context.event.EventPublishingTestExecutionListener@3569fc08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@20b12f8a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e84a8e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e554a3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54a67a45, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7d42c224, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56aaaecd]
2025-03-26 17:50:12 - INFO - Starting LoginTest using Java 17.0.12 on jwj with PID 23540 (started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:50:12 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:50:12 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:50:12 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:50:12 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:50:12 - INFO - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-03-26 17:50:14 - INFO - HikariPool-1 - Starting...
2025-03-26 17:50:14 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:50:14 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:50:14 - DEBUG - ==> Parameters: 
2025-03-26 17:50:14 - DEBUG - <==      Total: 15
2025-03-26 17:50:15 - INFO - Redisson 3.13.6
2025-03-26 17:50:15 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:50:15 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:50:16 - INFO - Started LoginTest in 4.95 seconds (JVM running for 5.733)
2025-03-26 17:50:17 - INFO - Token extraction completed. Output file: tokens.txt
2025-03-26 17:50:17 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 17:50:17 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 17:50:17 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 17:50:17 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:50:17 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:51:06 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 32340 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 17:51:06 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 17:51:06 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 17:51:06 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 17:51:06 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 17:51:06 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 17:51:07 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 17:51:07 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 17:51:07 - INFO - Starting service [Tomcat]
2025-03-26 17:51:07 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 17:51:07 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 17:51:07 - INFO - Root WebApplicationContext: initialization completed in 987 ms
2025-03-26 17:51:08 - INFO - HikariPool-1 - Starting...
2025-03-26 17:51:08 - INFO - HikariPool-1 - Start completed.
2025-03-26 17:51:08 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 17:51:08 - DEBUG - ==> Parameters: 
2025-03-26 17:51:08 - DEBUG - <==      Total: 15
2025-03-26 17:51:08 - INFO - Redisson 3.13.6
2025-03-26 17:51:08 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 17:51:08 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 17:51:08 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 17:51:08 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 17:51:08 - INFO - Started FoodieOdysseyApplication in 2.805 seconds (JVM running for 3.256)
2025-03-26 17:51:15 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 17:51:15 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 17:51:15 - INFO - Completed initialization in 1 ms
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 149
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 191
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 179
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 180
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 168
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 163
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 193
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 181
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 180
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 157
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 195
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 171
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 167
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 170
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 196
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 168
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 157
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 181
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 157
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 180
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 173
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 166
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 173
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 172
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 166
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 197
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 185
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 172
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 184
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 165
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 181
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 159
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 184
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 173
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 168
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 198
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 170
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 161
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 183
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 185
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 198
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 183
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 170
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 170
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 168
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 184
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 187
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 169
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 185
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 186
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 166
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 171
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 166
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 173
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 179
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 174
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 199
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 199
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 169
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 188
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 188
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 161
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 163
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 187
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 183
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 169
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 200
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 182
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 178
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 200
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 186
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 175
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 173
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 182
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 189
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 160
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 190
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 186
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 201
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 190
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 163
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 201
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 201
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 183
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 176
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 184
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 190
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 201
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 176
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 184
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 162
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 179
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 178
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 202
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 164
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 170
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 202
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 177
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 202
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 202
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 177
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 174
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 202
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 176
2025-03-26 17:51:15 - INFO - 刷新token有效期耗时: 188
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1599(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400011(Long), 1599(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1502(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400014(Long), 1502(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1598(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400017(Long), 1598(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1584(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400035(Long), 1584(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1587(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400023(Long), 1587(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1585(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400018(Long), 1585(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1499(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400033(Long), 1499(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1557(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400008(Long), 1557(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1610(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400026(Long), 1610(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1607(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400037(Long), 1607(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1521(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400016(Long), 1521(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1592(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400013(Long), 1592(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1522(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400036(Long), 1522(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1589(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400015(Long), 1589(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1556(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400027(Long), 1556(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1560(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400029(Long), 1560(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1576(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400022(Long), 1576(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1534(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400010(Long), 1534(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1510(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400002(Long), 1510(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1622(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400019(Long), 1622(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1568(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400020(Long), 1568(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1555(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400004(Long), 1555(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1552(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400105(Long), 1552(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1580(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400007(Long), 1580(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1504(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400042(Long), 1504(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1519(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400041(Long), 1519(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1529(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400099(Long), 1529(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1514(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400094(Long), 1514(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1513(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400101(Long), 1513(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1498(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400095(Long), 1498(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1523(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400100(Long), 1523(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1581(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400097(Long), 1581(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1548(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400092(Long), 1548(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1575(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400096(Long), 1575(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1593(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400091(Long), 1593(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1600(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400044(Long), 1600(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1613(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400043(Long), 1613(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1601(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400093(Long), 1601(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1505(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400058(Long), 1505(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1520(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400055(Long), 1520(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1525(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400057(Long), 1525(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1497(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400046(Long), 1497(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1537(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400065(Long), 1537(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1517(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400047(Long), 1517(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1571(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400104(Long), 1571(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1515(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400056(Long), 1515(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1533(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400103(Long), 1533(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1605(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400048(Long), 1605(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1541(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400082(Long), 1541(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1551(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 31447213670400081(Long), 1551(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 1558(Long), 24(Long)
2025-03-26 17:51:16 - DEBUG - <==      Total: 1
2025-03-26 17:51:16 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:16 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:16 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400070(Long), 1558(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1590(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400069(Long), 1590(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1550(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400066(Long), 1550(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1566(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400045(Long), 1566(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1509(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400053(Long), 1509(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1621(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400038(Long), 1621(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1616(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400050(Long), 1616(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1559(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400032(Long), 1559(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1594(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400060(Long), 1594(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1623(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400090(Long), 1623(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1526(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400031(Long), 1526(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1573(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400025(Long), 1573(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1530(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400063(Long), 1530(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1501(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400062(Long), 1501(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1512(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400086(Long), 1512(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1545(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400085(Long), 1545(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1536(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400084(Long), 1536(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1620(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400067(Long), 1620(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1612(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400068(Long), 1612(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1539(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400006(Long), 1539(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1554(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400039(Long), 1554(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1591(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400009(Long), 1591(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1496(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400071(Long), 1496(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1528(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400079(Long), 1528(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1495(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400077(Long), 1495(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1516(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400073(Long), 1516(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1574(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400075(Long), 1574(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1597(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400076(Long), 1597(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: SELECT COUNT( * ) FROM tb_voucher_order WHERE (user_id = ? AND voucher_id = ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 1561(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==      Total: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: UPDATE tb_seckill_voucher SET stock = stock - 1 WHERE (voucher_id = ? AND stock > ?)
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 24(Long), 0(Integer)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:17 - DEBUG - ==>  Preparing: INSERT INTO tb_voucher_order ( id, user_id, voucher_id ) VALUES ( ?, ?, ? )
2025-03-26 17:51:17 - DEBUG - ==> Parameters: 31447213670400034(Long), 1561(Long), 24(Long)
2025-03-26 17:51:17 - DEBUG - <==    Updates: 1
2025-03-26 17:51:58 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:53:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:47 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:53:47 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:53:47 - INFO - 普通key被查询
2025-03-26 17:53:47 - DEBUG - <==      Total: 2
2025-03-26 17:53:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:53:47 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:53:47 - DEBUG - <==      Total: 1
2025-03-26 17:53:54 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:53:54 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:53:54 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:53:54 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 17:53:54 - DEBUG - <==      Total: 1
2025-03-26 17:53:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:53:54 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 17:53:54 - DEBUG - <==      Total: 5
2025-03-26 17:53:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:54 - INFO - 普通key被查询
2025-03-26 17:53:54 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:53:54 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:53:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:53:54 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:53:54 - DEBUG - <==      Total: 1
2025-03-26 17:53:54 - DEBUG - <==      Total: 1
2025-03-26 17:53:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:58 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:53:58 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 17:53:58 - DEBUG - <==      Total: 1
2025-03-26 17:53:58 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:53:58 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 17:53:58 - DEBUG - <==      Total: 5
2025-03-26 17:53:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:53:59 - INFO - 普通key被查询
2025-03-26 17:53:59 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:53:59 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:53:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:53:59 - DEBUG - <==      Total: 0
2025-03-26 17:53:59 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:53:59 - DEBUG - <==      Total: 1
2025-03-26 17:54:03 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:03 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:03 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:54:03 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 17:54:03 - INFO - 普通key被查询
2025-03-26 17:54:03 - DEBUG - <==      Total: 0
2025-03-26 17:54:03 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:54:03 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 17:54:03 - DEBUG - <==      Total: 1
2025-03-26 17:54:03 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:54:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:05 - INFO - 普通key被查询
2025-03-26 17:54:05 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:54:05 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 17:54:05 - DEBUG - <==      Total: 0
2025-03-26 17:54:09 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:54:09 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 10
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:10 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:10 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:10 - DEBUG - <==      Total: 1
2025-03-26 17:54:11 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:54:11 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 17:54:11 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 17:54:11 - DEBUG - <==    Updates: 1
2025-03-26 17:54:11 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:11 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:54:11 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 17:54:11 - DEBUG - <==      Total: 1
2025-03-26 17:54:11 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:11 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:11 - DEBUG - <==      Total: 1
2025-03-26 17:54:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:28 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:28 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:54:28 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:28 - DEBUG - <==      Total: 1
2025-03-26 17:54:28 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:54:28 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:54:28 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:54:28 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:28 - DEBUG - <==      Total: 0
2025-03-26 17:54:28 - DEBUG - <==      Total: 5
2025-03-26 17:54:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:29 - DEBUG - <==      Total: 1
2025-03-26 17:54:29 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:54:29 - DEBUG - ==> Parameters: 
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 10
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:30 - DEBUG - <==      Total: 1
2025-03-26 17:54:34 - DEBUG - send success: 042734
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:45 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 10
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:45 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:45 - DEBUG - <==      Total: 1
2025-03-26 17:54:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:47 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:54:47 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:54:47 - DEBUG - <==      Total: 1
2025-03-26 17:54:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:47 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:54:47 - DEBUG - <==      Total: 1
2025-03-26 17:54:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:47 - INFO - 普通key被查询
2025-03-26 17:54:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:54:47 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:47 - DEBUG - <==      Total: 1
2025-03-26 17:54:47 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:54:47 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:54:47 - DEBUG - <==      Total: 1
2025-03-26 17:54:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:47 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:54:47 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 17:54:47 - DEBUG - <==      Total: 0
2025-03-26 17:54:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:48 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:54:48 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 17:54:48 - DEBUG - <==    Updates: 1
2025-03-26 17:54:51 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:51 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:54:51 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 17:54:51 - DEBUG - <==      Total: 1
2025-03-26 17:54:51 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:54:51 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:54:51 - DEBUG - <==      Total: 1
2025-03-26 17:54:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:51 - INFO - 普通key被查询
2025-03-26 17:54:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:54:51 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:54:51 - DEBUG - <==      Total: 1
2025-03-26 17:54:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:51 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:54:51 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:54:51 - DEBUG - <==      Total: 1
2025-03-26 17:54:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:54:52 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:54:52 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:54:52 - DEBUG - <==    Updates: 1
2025-03-26 17:54:53 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:54:53 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:54:53 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 17:54:53 - DEBUG - <==    Updates: 1
2025-03-26 17:55:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:14 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:55:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:55:14 - DEBUG - <==      Total: 0
2025-03-26 17:55:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:55:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:55:14 - DEBUG - <==      Total: 1
2025-03-26 17:55:15 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:15 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:55:15 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 10
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:16 - DEBUG - <==      Total: 1
2025-03-26 17:55:25 - DEBUG - send success: 785578
2025-03-26 17:55:30 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 17:55:30 - DEBUG - ==> Parameters: 13838411438(String)
2025-03-26 17:55:30 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 10
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:31 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:31 - DEBUG - <==      Total: 1
2025-03-26 17:55:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:32 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:55:32 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:55:32 - DEBUG - <==      Total: 1
2025-03-26 17:55:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:55:32 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:55:32 - DEBUG - <==      Total: 1
2025-03-26 17:55:32 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:55:32 - INFO - 普通key被查询
2025-03-26 17:55:32 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:55:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:55:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:32 - DEBUG - <==      Total: 1
2025-03-26 17:55:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:55:32 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:55:32 - DEBUG - <==      Total: 1
2025-03-26 17:55:32 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:55:33 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:33 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:55:33 - DEBUG - ==> Parameters: 2(Long), 1011(Long)
2025-03-26 17:55:33 - DEBUG - <==      Total: 0
2025-03-26 17:55:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 17:55:35 - DEBUG - ==> Parameters: 
2025-03-26 17:55:35 - DEBUG - <==      Total: 1
2025-03-26 17:55:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 17:55:35 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:55:35 - DEBUG - <==      Total: 10
2025-03-26 17:55:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:37 - DEBUG - 文件上传成功，/blogs/3/11/46a5bdc5-5916-4e82-99c8-435d7b600757.jpg
2025-03-26 17:55:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:40 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( user_id, title, images, content ) VALUES ( ?, ?, ?, ? )
2025-03-26 17:55:40 - DEBUG - ==> Parameters: 2(Long), 123(String), /imgs/blogs/3/11/46a5bdc5-5916-4e82-99c8-435d7b600757.jpg(String), 123(String)
2025-03-26 17:55:40 - ERROR - org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'shop_id' doesn't have a default value
### The error may exist in org/jwj/fo/mapper/BlogMapper.java (best guess)
### The error may involve org.jwj.fo.mapper.BlogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO tb_blog  ( user_id, title, images, content )  VALUES  ( ?, ?, ?, ? )
### Cause: java.sql.SQLException: Field 'shop_id' doesn't have a default value
; Field 'shop_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'shop_id' doesn't have a default value
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'shop_id' doesn't have a default value
### The error may exist in org/jwj/fo/mapper/BlogMapper.java (best guess)
### The error may involve org.jwj.fo.mapper.BlogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO tb_blog  ( user_id, title, images, content )  VALUES  ( ?, ?, ?, ? )
### Cause: java.sql.SQLException: Field 'shop_id' doesn't have a default value
; Field 'shop_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'shop_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:251)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy102.insert(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.save(IService.java:63)
	at org.jwj.fo.service.impl.BlogServiceImpl.saveBlog(BlogServiceImpl.java:116)
	at org.jwj.fo.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e40f0ee8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$990f22ab.saveBlog(<generated>)
	at org.jwj.fo.controller.BlogController.saveBlog(BlogController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLException: Field 'shop_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at jdk.internal.reflect.GeneratedMethodAccessor117.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy76.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:106)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy75.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at jdk.internal.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 65 common frames omitted
2025-03-26 17:55:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:43 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 17:55:43 - DEBUG - ==> Parameters: 7(Long), 2(Long), 123(String), /imgs/blogs/3/11/46a5bdc5-5916-4e82-99c8-435d7b600757.jpg(String), 123(String)
2025-03-26 17:55:43 - DEBUG - <==    Updates: 1
2025-03-26 17:55:43 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ?)
2025-03-26 17:55:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:43 - DEBUG - <==      Total: 0
2025-03-26 17:55:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:55:43 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:55:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:43 - DEBUG - <==      Total: 0
2025-03-26 17:55:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:55:43 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:55:43 - DEBUG - <==      Total: 1
2025-03-26 17:55:43 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:55:43 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 17:55:43 - DEBUG - <==      Total: 6
2025-03-26 17:55:50 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 17:57:55 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:176)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 17:58:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:12 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:58:12 - DEBUG - ==> Parameters: 
2025-03-26 17:58:12 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 10
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:13 - INFO - 普通key被查询
2025-03-26 17:58:13 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:58:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:13 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:58:13 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:58:13 - DEBUG - <==      Total: 1
2025-03-26 17:58:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:14 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:14 - DEBUG - ==> Parameters: 2(Long), 1011(Long)
2025-03-26 17:58:14 - DEBUG - <==      Total: 0
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:17 - DEBUG - ==> Parameters: 26(Long)
2025-03-26 17:58:17 - DEBUG - <==      Total: 1
2025-03-26 17:58:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:17 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:17 - DEBUG - <==      Total: 1
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:17 - INFO - 普通key被查询
2025-03-26 17:58:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:58:17 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 17:58:17 - DEBUG - <==      Total: 1
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:17 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:17 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:17 - DEBUG - <==      Total: 0
2025-03-26 17:58:17 - INFO - 刷新token有效期耗时: 2
2025-03-26 17:58:17 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:58:17 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:17 - DEBUG - <==    Updates: 1
2025-03-26 17:58:19 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:19 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:58:19 - DEBUG - <==      Total: 1
2025-03-26 17:58:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:19 - DEBUG - <==      Total: 1
2025-03-26 17:58:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:19 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:19 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:19 - INFO - 普通key被查询
2025-03-26 17:58:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:58:19 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 17:58:19 - DEBUG - <==      Total: 1
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:22 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 17:58:22 - DEBUG - <==      Total: 1
2025-03-26 17:58:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:22 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:22 - DEBUG - <==      Total: 1
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - INFO - 普通key被查询
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 17:58:22 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 17:58:22 - DEBUG - <==      Total: 1
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:22 - DEBUG - ==> Parameters: 2(Long), 1011(Long)
2025-03-26 17:58:22 - DEBUG - <==      Total: 0
2025-03-26 17:58:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:22 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:58:22 - DEBUG - ==> Parameters: 2(Long), 1011(Long)
2025-03-26 17:58:22 - DEBUG - <==    Updates: 1
2025-03-26 17:58:25 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:25 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:25 - DEBUG - ==> Parameters: 24(Long)
2025-03-26 17:58:25 - DEBUG - <==      Total: 1
2025-03-26 17:58:25 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:25 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:25 - DEBUG - <==      Total: 1
2025-03-26 17:58:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:25 - INFO - 普通key被查询
2025-03-26 17:58:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:58:25 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 17:58:25 - DEBUG - <==      Total: 1
2025-03-26 17:58:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:25 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:25 - DEBUG - ==> Parameters: 2(Long), 1474(Long)
2025-03-26 17:58:25 - DEBUG - <==      Total: 0
2025-03-26 17:58:26 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:26 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:58:26 - DEBUG - ==> Parameters: 2(Long), 1474(Long)
2025-03-26 17:58:26 - DEBUG - <==    Updates: 1
2025-03-26 17:58:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:26 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:26 - DEBUG - <==      Total: 1
2025-03-26 17:58:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:27 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:58:27 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:27 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:27 - DEBUG - ==> Parameters: 2(Long), 1474(Long)
2025-03-26 17:58:27 - DEBUG - <==      Total: 0
2025-03-26 17:58:27 - DEBUG - <==      Total: 1
2025-03-26 17:58:27 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:58:27 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:27 - DEBUG - <==      Total: 1
2025-03-26 17:58:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:58:27 - DEBUG - ==> Parameters: 1474(Long), 10(Long)
2025-03-26 17:58:27 - DEBUG - <==      Total: 1
2025-03-26 17:58:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:32 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:32 - DEBUG - ==> Parameters: 27(Long)
2025-03-26 17:58:32 - DEBUG - <==      Total: 1
2025-03-26 17:58:32 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:32 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:32 - DEBUG - <==      Total: 1
2025-03-26 17:58:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:32 - INFO - 普通key被查询
2025-03-26 17:58:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:36 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:36 - DEBUG - ==> Parameters: 28(Long)
2025-03-26 17:58:36 - DEBUG - <==      Total: 1
2025-03-26 17:58:36 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:36 - DEBUG - <==      Total: 1
2025-03-26 17:58:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:36 - INFO - 普通key被查询
2025-03-26 17:58:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:39 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 17:58:39 - DEBUG - ==> Parameters: 26(Long)
2025-03-26 17:58:39 - DEBUG - <==      Total: 1
2025-03-26 17:58:39 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:39 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:39 - DEBUG - <==      Total: 1
2025-03-26 17:58:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:39 - INFO - 普通key被查询
2025-03-26 17:58:39 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:39 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:39 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:39 - DEBUG - <==      Total: 1
2025-03-26 17:58:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:40 - DEBUG - ==>  Preparing: DELETE FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:40 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:40 - DEBUG - <==    Updates: 1
2025-03-26 17:58:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:40 - DEBUG - ==>  Preparing: INSERT INTO tb_follow ( user_id, follow_user_id ) VALUES ( ?, ? )
2025-03-26 17:58:40 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:40 - DEBUG - <==    Updates: 1
2025-03-26 17:58:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:42 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:42 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:42 - DEBUG - <==      Total: 1
2025-03-26 17:58:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:42 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:58:42 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:42 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:42 - DEBUG - ==> Parameters: 2(Long), 1494(Long)
2025-03-26 17:58:42 - DEBUG - <==      Total: 1
2025-03-26 17:58:42 - DEBUG - <==      Total: 0
2025-03-26 17:58:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:58:42 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:42 - DEBUG - <==      Total: 1
2025-03-26 17:58:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:58:42 - DEBUG - ==> Parameters: 1494(Long), 10(Long)
2025-03-26 17:58:42 - DEBUG - <==      Total: 2
2025-03-26 17:58:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:43 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id IN ( ? , ? )
2025-03-26 17:58:43 - DEBUG - ==> Parameters: 1011(Long), 1474(Long)
2025-03-26 17:58:43 - DEBUG - <==      Total: 2
2025-03-26 17:58:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:45 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:45 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:45 - DEBUG - <==      Total: 1
2025-03-26 17:58:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:45 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:45 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 17:58:45 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:45 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 17:58:45 - DEBUG - <==      Total: 0
2025-03-26 17:58:45 - DEBUG - ==> Parameters: 2(Long), 1011(Long)
2025-03-26 17:58:45 - DEBUG - <==      Total: 1
2025-03-26 17:58:45 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 17:58:45 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:45 - DEBUG - <==      Total: 1
2025-03-26 17:58:45 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 17:58:45 - DEBUG - ==> Parameters: 1011(Long), 10(Long)
2025-03-26 17:58:45 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 10
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:50 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 17:58:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 17:58:50 - DEBUG - <==      Total: 1
2025-03-26 17:58:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 17:58:52 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 17:58:52 - DEBUG - <==      Total: 1
2025-03-26 17:58:52 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 17:58:52 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 17:58:52 - DEBUG - <==      Total: 5
2025-03-26 17:58:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 17:58:54 - INFO - 普通key被查询
2025-03-26 17:58:54 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:58:54 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 17:58:54 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:54 - DEBUG - <==      Total: 1
2025-03-26 17:58:54 - DEBUG - <==      Total: 7
2025-03-26 17:58:56 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:56 - INFO - 刷新token有效期耗时: 0
2025-03-26 17:58:56 - INFO - 普通key被查询
2025-03-26 17:58:56 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 17:58:56 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 17:58:56 - DEBUG - <==      Total: 7
2025-03-26 18:00:14 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:02:01 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 18:02:01 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 18:02:01 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 18:02:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 18:02:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 18:02:01 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 18:02:06 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 25124 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 18:02:06 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 18:02:06 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 18:02:06 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 18:02:06 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 18:02:06 - INFO - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-03-26 18:02:07 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 18:02:07 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 18:02:07 - INFO - Starting service [Tomcat]
2025-03-26 18:02:07 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 18:02:07 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 18:02:07 - INFO - Root WebApplicationContext: initialization completed in 1005 ms
2025-03-26 18:02:07 - INFO - HikariPool-1 - Starting...
2025-03-26 18:02:07 - INFO - HikariPool-1 - Start completed.
2025-03-26 18:02:07 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 18:02:07 - DEBUG - ==> Parameters: 
2025-03-26 18:02:07 - DEBUG - <==      Total: 15
2025-03-26 18:02:08 - INFO - Redisson 3.13.6
2025-03-26 18:02:08 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 18:02:08 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 18:02:08 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 18:02:08 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 18:02:08 - INFO - Started FoodieOdysseyApplication in 2.795 seconds (JVM running for 3.23)
2025-03-26 18:02:27 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 18:02:27 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 18:02:27 - INFO - Completed initialization in 1 ms
2025-03-26 18:02:27 - INFO - 刷新token有效期耗时: 62
2025-03-26 18:02:27 - INFO - 刷新token有效期耗时: 63
2025-03-26 18:02:27 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 18:02:27 - INFO - 普通key被查询
2025-03-26 18:02:27 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:02:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 18:02:27 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:02:27 - DEBUG - <==      Total: 1
2025-03-26 18:02:27 - DEBUG - <==      Total: 7
2025-03-26 18:02:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:02:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:02:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:02:31 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:02:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:02:31 - DEBUG - <==      Total: 0
2025-03-26 18:02:31 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:02:31 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:02:31 - DEBUG - <==      Total: 1
2025-03-26 18:02:31 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:02:31 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:02:31 - DEBUG - <==      Total: 6
2025-03-26 18:02:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:02:32 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:02:32 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 18:02:32 - DEBUG - ==> Parameters: 
2025-03-26 18:02:32 - DEBUG - <==      Total: 1
2025-03-26 18:02:32 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 18:02:32 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:02:32 - DEBUG - <==      Total: 10
2025-03-26 18:02:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:02:35 - DEBUG - 文件上传成功，/blogs/1/9/5c672946-cfd4-4ee4-b726-623018331754.jpg
2025-03-26 18:02:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:02:40 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 18:02:40 - DEBUG - ==> Parameters: 4(Long), 2(Long), 推送(String), /imgs/blogs/1/9/5c672946-cfd4-4ee4-b726-623018331754.jpg(String), 1(String)
2025-03-26 18:02:40 - DEBUG - <==    Updates: 1
2025-03-26 18:02:40 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (follow_user_id = ?)
2025-03-26 18:02:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:02:40 - DEBUG - <==      Total: 3
2025-03-26 18:02:40 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:02:40 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:02:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:02:40 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:02:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:02:40 - DEBUG - <==      Total: 0
2025-03-26 18:02:40 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:02:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:02:40 - DEBUG - <==      Total: 1
2025-03-26 18:02:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:02:40 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:02:40 - DEBUG - <==      Total: 7
2025-03-26 18:04:08 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:04:54 - INFO - 刷新token有效期耗时: 7
2025-03-26 18:04:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:04:57 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:04:57 - INFO - 刷新token有效期耗时: 3
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 10
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:57 - DEBUG - <==      Total: 1
2025-03-26 18:04:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 
2025-03-26 18:04:59 - DEBUG - <==      Total: 1
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?,?
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 10(Long), 10(Long)
2025-03-26 18:04:59 - DEBUG - <==      Total: 3
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:59 - DEBUG - <==      Total: 1
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:59 - DEBUG - <==      Total: 1
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:04:59 - DEBUG - <==      Total: 1
2025-03-26 18:04:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:04:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:04:59 - DEBUG - ==> Parameters: 
2025-03-26 18:04:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:00 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:00 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:05:00 - DEBUG - ==> Parameters: 
2025-03-26 18:05:00 - DEBUG - <==      Total: 1
2025-03-26 18:05:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 18:05:02 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 18:05:02 - DEBUG - <==      Total: 1
2025-03-26 18:05:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:02 - DEBUG - <==      Total: 1
2025-03-26 18:05:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:02 - INFO - 普通key被查询
2025-03-26 18:05:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 18:05:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:05:02 - DEBUG - <==      Total: 1
2025-03-26 18:05:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:04 - DEBUG - ==> Parameters: 2(Integer)
2025-03-26 18:05:04 - DEBUG - <==      Total: 1
2025-03-26 18:05:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:04 - DEBUG - ==> Parameters: 2(Integer), 5(Long)
2025-03-26 18:05:04 - DEBUG - <==      Total: 5
2025-03-26 18:05:05 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:05:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:05 - INFO - 普通key被查询
2025-03-26 18:05:05 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 18:05:05 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 18:05:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:05:05 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:05:05 - DEBUG - <==      Total: 0
2025-03-26 18:05:05 - DEBUG - <==      Total: 1
2025-03-26 18:05:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:08 - DEBUG - ==> Parameters: 3(Integer)
2025-03-26 18:05:08 - DEBUG - <==      Total: 1
2025-03-26 18:05:10 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:10 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:10 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:10 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:10 - DEBUG - <==      Total: 1
2025-03-26 18:05:10 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:10 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:10 - DEBUG - <==      Total: 5
2025-03-26 18:05:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:13 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:13 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:13 - DEBUG - <==      Total: 1
2025-03-26 18:05:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:13 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:13 - DEBUG - <==      Total: 5
2025-03-26 18:05:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:13 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:13 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:13 - DEBUG - <==      Total: 1
2025-03-26 18:05:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:13 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:13 - DEBUG - <==      Total: 5
2025-03-26 18:05:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:14 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:14 - DEBUG - <==      Total: 1
2025-03-26 18:05:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?,?
2025-03-26 18:05:14 - DEBUG - ==> Parameters: 1(Integer), 5(Long), 5(Long)
2025-03-26 18:05:14 - DEBUG - <==      Total: 4
2025-03-26 18:05:16 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:05:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:16 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:16 - DEBUG - <==      Total: 1
2025-03-26 18:05:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:19 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:19 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:19 - DEBUG - <==      Total: 1
2025-03-26 18:05:19 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:19 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:19 - DEBUG - <==      Total: 5
2025-03-26 18:05:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:26 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:26 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:26 - DEBUG - <==      Total: 1
2025-03-26 18:05:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:26 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:26 - DEBUG - <==      Total: 5
2025-03-26 18:05:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:28 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:28 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:28 - DEBUG - <==      Total: 1
2025-03-26 18:05:28 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:28 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:28 - DEBUG - <==      Total: 5
2025-03-26 18:05:34 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:34 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:34 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:34 - DEBUG - <==      Total: 1
2025-03-26 18:05:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:34 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:34 - DEBUG - <==      Total: 5
2025-03-26 18:05:35 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:05:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:35 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:35 - DEBUG - <==      Total: 1
2025-03-26 18:05:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:35 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:35 - DEBUG - <==      Total: 5
2025-03-26 18:05:35 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:35 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:35 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:35 - DEBUG - <==      Total: 1
2025-03-26 18:05:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:35 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:35 - DEBUG - <==      Total: 5
2025-03-26 18:05:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:36 - DEBUG - <==      Total: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:36 - DEBUG - <==      Total: 5
2025-03-26 18:05:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:36 - DEBUG - <==      Total: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:36 - DEBUG - <==      Total: 5
2025-03-26 18:05:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:36 - DEBUG - <==      Total: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:36 - DEBUG - <==      Total: 5
2025-03-26 18:05:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:36 - DEBUG - <==      Total: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:36 - DEBUG - <==      Total: 5
2025-03-26 18:05:36 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:36 - DEBUG - <==      Total: 1
2025-03-26 18:05:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:36 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:36 - DEBUG - <==      Total: 5
2025-03-26 18:05:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:39 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:39 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:39 - DEBUG - <==      Total: 1
2025-03-26 18:05:39 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?,?
2025-03-26 18:05:39 - DEBUG - ==> Parameters: 1(Integer), 5(Long), 5(Long)
2025-03-26 18:05:39 - DEBUG - <==      Total: 4
2025-03-26 18:05:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:40 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:40 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:40 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:40 - DEBUG - <==      Total: 1
2025-03-26 18:05:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:40 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:40 - DEBUG - <==      Total: 5
2025-03-26 18:05:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:42 - DEBUG - <==      Total: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:42 - DEBUG - <==      Total: 5
2025-03-26 18:05:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:42 - DEBUG - <==      Total: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:42 - DEBUG - <==      Total: 5
2025-03-26 18:05:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:42 - DEBUG - <==      Total: 1
2025-03-26 18:05:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:42 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:42 - DEBUG - <==      Total: 5
2025-03-26 18:05:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:43 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:43 - DEBUG - <==      Total: 1
2025-03-26 18:05:43 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:43 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:43 - DEBUG - <==      Total: 5
2025-03-26 18:05:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:43 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:43 - DEBUG - <==      Total: 1
2025-03-26 18:05:43 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:43 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:43 - DEBUG - <==      Total: 5
2025-03-26 18:05:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:46 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 18:05:46 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 18:05:46 - DEBUG - <==      Total: 1
2025-03-26 18:05:46 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 18:05:46 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 18:05:46 - DEBUG - <==      Total: 5
2025-03-26 18:05:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:52 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:05:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:52 - DEBUG - <==      Total: 0
2025-03-26 18:05:52 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:05:52 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:52 - DEBUG - <==      Total: 1
2025-03-26 18:05:52 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:05:52 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:05:52 - DEBUG - <==      Total: 7
2025-03-26 18:05:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:55 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:05:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:05:59 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 10
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:05:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:05:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:05:59 - DEBUG - <==      Total: 1
2025-03-26 18:06:00 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:06:00 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:06:00 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 18:06:00 - DEBUG - ==> Parameters: 
2025-03-26 18:06:00 - DEBUG - <==      Total: 1
2025-03-26 18:06:00 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 18:06:00 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:06:00 - DEBUG - <==      Total: 10
2025-03-26 18:07:28 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:08:52 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:10:29 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:13:52 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:176)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 18:16:11 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:20:49 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:22:36 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:24:24 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:26:27 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:27:31 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:29:54 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:32:01 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:33:35 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:36:15 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:39:57 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:43:41 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:45:20 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 18:45:20 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 18:45:20 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 18:45:20 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 18:45:20 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 18:45:20 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 18:45:53 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 20080 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 18:45:53 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 18:45:53 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 18:45:54 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 18:45:54 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 18:45:54 - INFO - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-03-26 18:45:54 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 18:45:54 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 18:45:54 - INFO - Starting service [Tomcat]
2025-03-26 18:45:54 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 18:45:54 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 18:45:54 - INFO - Root WebApplicationContext: initialization completed in 984 ms
2025-03-26 18:45:55 - INFO - HikariPool-1 - Starting...
2025-03-26 18:45:55 - INFO - HikariPool-1 - Start completed.
2025-03-26 18:45:55 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 18:45:55 - DEBUG - ==> Parameters: 
2025-03-26 18:45:55 - DEBUG - <==      Total: 15
2025-03-26 18:45:55 - INFO - Redisson 3.13.6
2025-03-26 18:45:55 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 18:45:55 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 18:45:56 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 18:45:56 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 18:45:56 - INFO - Started FoodieOdysseyApplication in 2.777 seconds (JVM running for 3.2)
2025-03-26 18:46:02 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 18:46:02 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 18:46:02 - INFO - Completed initialization in 1 ms
2025-03-26 18:46:03 - INFO - 刷新token有效期耗时: 72
2025-03-26 18:46:03 - INFO - 刷新token有效期耗时: 72
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 10
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:03 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:03 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:03 - DEBUG - <==      Total: 1
2025-03-26 18:46:04 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:04 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:04 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:46:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:04 - DEBUG - <==      Total: 0
2025-03-26 18:46:04 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:46:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:04 - DEBUG - <==      Total: 1
2025-03-26 18:46:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:46:04 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:46:04 - DEBUG - <==      Total: 7
2025-03-26 18:46:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 10
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:08 - DEBUG - <==      Total: 1
2025-03-26 18:46:12 - DEBUG - send success: 107659
2025-03-26 18:46:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 18:46:17 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 18:46:17 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 10
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:18 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:18 - DEBUG - <==      Total: 1
2025-03-26 18:46:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:19 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:19 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:46:19 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:46:19 - DEBUG - <==      Total: 0
2025-03-26 18:46:19 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:46:19 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:46:19 - DEBUG - <==      Total: 1
2025-03-26 18:46:19 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:19 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:19 - DEBUG - <==      Total: 1
2025-03-26 18:46:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:19 - DEBUG - <==      Total: 1
2025-03-26 18:46:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:26 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:26 - DEBUG - <==      Total: 1
2025-03-26 18:46:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:26 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:26 - DEBUG - <==      Total: 1
2025-03-26 18:46:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:26 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:26 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:26 - DEBUG - <==      Total: 1
2025-03-26 18:46:26 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:26 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:26 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - INFO - 刷新token有效期耗时: 4
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:27 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:27 - DEBUG - <==      Total: 1
2025-03-26 18:46:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:46:29 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:46:29 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:46:29 - DEBUG - <==      Total: 1
2025-03-26 18:46:29 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:46:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:46:29 - DEBUG - <==      Total: 1
2025-03-26 18:47:04 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:04 - DEBUG - <==    Updates: 1
2025-03-26 18:47:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:04 - DEBUG - <==      Total: 1
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:04 - DEBUG - <==      Total: 1
2025-03-26 18:47:04 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:04 - DEBUG - <==    Updates: 1
2025-03-26 18:47:04 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:04 - DEBUG - <==      Total: 1
2025-03-26 18:47:04 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:04 - DEBUG - <==      Total: 1
2025-03-26 18:47:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked + 1 WHERE (id = ?)
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:05 - DEBUG - <==    Updates: 1
2025-03-26 18:47:05 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:05 - DEBUG - <==      Total: 1
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:05 - DEBUG - <==      Total: 1
2025-03-26 18:47:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: UPDATE tb_blog SET liked = liked - 1 WHERE (id = ?)
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:05 - DEBUG - <==    Updates: 1
2025-03-26 18:47:05 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:05 - DEBUG - <==      Total: 1
2025-03-26 18:47:05 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:05 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:05 - DEBUG - <==      Total: 1
2025-03-26 18:47:13 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:47:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:14 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:47:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:47:14 - DEBUG - <==      Total: 0
2025-03-26 18:47:14 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:47:14 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:47:14 - DEBUG - <==      Total: 1
2025-03-26 18:47:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?)) order by field(id, 31)
2025-03-26 18:47:16 - DEBUG - ==> Parameters: 31(Long)
2025-03-26 18:47:16 - DEBUG - <==      Total: 1
2025-03-26 18:47:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:16 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 10
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:19 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:19 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:19 - DEBUG - <==      Total: 1
2025-03-26 18:47:33 - DEBUG - send success: 604274
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 13838411438(String)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:47:40 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 10
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:40 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:40 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:40 - DEBUG - <==      Total: 1
2025-03-26 18:47:41 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:47:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:47:42 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:47:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:42 - DEBUG - <==      Total: 0
2025-03-26 18:47:42 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:47:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:42 - DEBUG - <==      Total: 1
2025-03-26 18:47:42 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:47:42 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:47:42 - DEBUG - <==      Total: 7
2025-03-26 18:47:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 18:47:43 - DEBUG - ==> Parameters: 
2025-03-26 18:47:43 - DEBUG - <==      Total: 1
2025-03-26 18:47:43 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 18:47:43 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:47:43 - DEBUG - <==      Total: 10
2025-03-26 18:47:46 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:46 - DEBUG - 文件上传成功，/blogs/9/4/4e5d16bc-75b8-4829-a677-158a5e9c0170.jpg
2025-03-26 18:47:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:48 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 18:47:48 - DEBUG - ==> Parameters: 6(Long), 2(Long), 1(String), /imgs/blogs/9/4/4e5d16bc-75b8-4829-a677-158a5e9c0170.jpg(String), 1(String)
2025-03-26 18:47:48 - DEBUG - <==    Updates: 1
2025-03-26 18:47:48 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (follow_user_id = ?)
2025-03-26 18:47:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:48 - DEBUG - <==      Total: 3
2025-03-26 18:47:49 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:49 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:49 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:49 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:47:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:49 - DEBUG - <==      Total: 0
2025-03-26 18:47:49 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:47:49 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:49 - DEBUG - <==      Total: 1
2025-03-26 18:47:49 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:47:49 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:47:49 - DEBUG - <==      Total: 8
2025-03-26 18:47:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:51 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop
2025-03-26 18:47:51 - DEBUG - ==> Parameters: 
2025-03-26 18:47:51 - DEBUG - <==      Total: 1
2025-03-26 18:47:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop LIMIT ?
2025-03-26 18:47:51 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:47:51 - DEBUG - <==      Total: 10
2025-03-26 18:47:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:53 - DEBUG - 文件上传成功，/blogs/0/12/1bdf6ca2-964f-4d1a-914a-d9e53600ec52.jpg
2025-03-26 18:47:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:47:56 - DEBUG - ==>  Preparing: INSERT INTO tb_blog ( shop_id, user_id, title, images, content ) VALUES ( ?, ?, ?, ?, ? )
2025-03-26 18:47:56 - DEBUG - ==> Parameters: 6(Long), 2(Long), 2(String), /imgs/blogs/0/12/1bdf6ca2-964f-4d1a-914a-d9e53600ec52.jpg(String), 2(String)
2025-03-26 18:47:56 - DEBUG - <==    Updates: 1
2025-03-26 18:47:56 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (follow_user_id = ?)
2025-03-26 18:47:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:56 - DEBUG - <==      Total: 3
2025-03-26 18:47:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:47:56 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:47:56 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:56 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:47:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:56 - DEBUG - <==      Total: 0
2025-03-26 18:47:56 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:47:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:56 - DEBUG - <==      Total: 1
2025-03-26 18:47:56 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (user_id = ?) LIMIT ?
2025-03-26 18:47:56 - DEBUG - ==> Parameters: 2(Long), 10(Long)
2025-03-26 18:47:56 - DEBUG - <==      Total: 9
2025-03-26 18:47:57 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:47:57 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:57 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:57 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 10
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:47:58 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:47:58 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:47:58 - DEBUG - <==      Total: 1
2025-03-26 18:48:02 - DEBUG - send success: 244596
2025-03-26 18:48:10 - DEBUG - send success: 852362
2025-03-26 18:48:15 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (phone = ?)
2025-03-26 18:48:15 - DEBUG - ==> Parameters: 13024492663(String)
2025-03-26 18:48:15 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 10
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:16 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:16 - DEBUG - <==      Total: 1
2025-03-26 18:48:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 0
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 1
2025-03-26 18:48:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?,?,?)) order by field(id, 33,32,31)
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 33(Long), 32(Long), 31(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 3
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 1
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 1
2025-03-26 18:48:17 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:17 - DEBUG - <==      Total: 1
2025-03-26 18:48:18 - INFO - 刷新token有效期耗时: 2
2025-03-26 18:48:22 - INFO - 刷新token有效期耗时: 0
2025-03-26 18:48:22 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?,?,?)) order by field(id, 33,32,31)
2025-03-26 18:48:22 - DEBUG - ==> Parameters: 33(Long), 32(Long), 31(Long)
2025-03-26 18:48:22 - DEBUG - <==      Total: 3
2025-03-26 18:48:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:22 - DEBUG - <==      Total: 1
2025-03-26 18:48:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:22 - DEBUG - <==      Total: 1
2025-03-26 18:48:22 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:22 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:22 - DEBUG - <==      Total: 1
2025-03-26 18:48:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 18:48:37 - INFO - 刷新token有效期耗时: 3
2025-03-26 18:48:37 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE (id IN (?,?,?)) order by field(id, 33,32,31)
2025-03-26 18:48:37 - DEBUG - ==> Parameters: 33(Long), 32(Long), 31(Long)
2025-03-26 18:48:37 - DEBUG - <==      Total: 3
2025-03-26 18:48:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:37 - DEBUG - <==      Total: 1
2025-03-26 18:48:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:37 - DEBUG - <==      Total: 1
2025-03-26 18:48:37 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 18:48:37 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 18:48:37 - DEBUG - <==      Total: 1
2025-03-26 18:53:24 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:56:55 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 18:59:04 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:01:05 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:04:16 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:176)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 19:06:05 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:08:56 - INFO - 刷新token有效期耗时: 8
2025-03-26 19:08:56 - INFO - 刷新token有效期耗时: 8
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 10
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:56 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:08:56 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:08:56 - DEBUG - <==      Total: 1
2025-03-26 19:08:59 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:08:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:09:00 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 19:09:00 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 19:09:00 - DEBUG - <==      Total: 1
2025-03-26 19:09:00 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 19:09:00 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 19:09:00 - DEBUG - <==      Total: 5
2025-03-26 19:09:01 - INFO - 刷新token有效期耗时: 0
2025-03-26 19:09:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:09:01 - INFO - 普通key被查询
2025-03-26 19:09:01 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 19:09:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:09:01 - DEBUG - <==      Total: 1
2025-03-26 19:09:01 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 19:09:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:09:01 - DEBUG - <==      Total: 7
2025-03-26 19:09:03 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:09:03 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:09:03 - INFO - 普通key被查询
2025-03-26 19:09:03 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 19:09:03 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:09:03 - DEBUG - <==      Total: 7
2025-03-26 19:09:11 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:10:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:10:24 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 19:10:24 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 19:10:24 - DEBUG - <==      Total: 1
2025-03-26 19:10:24 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:10:24 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:10:24 - DEBUG - <==      Total: 1
2025-03-26 19:10:24 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:10:24 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:10:24 - INFO - 普通key被查询
2025-03-26 19:10:24 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 19:10:24 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:10:24 - DEBUG - <==      Total: 1
2025-03-26 19:10:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:10:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:10:24 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 19:10:24 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 19:10:24 - DEBUG - <==      Total: 1
2025-03-26 19:10:25 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:12:10 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:13:16 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:14:30 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:16:37 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:18:56 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:20:52 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:23:19 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:25:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:01 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 10
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:01 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:01 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:01 - DEBUG - <==      Total: 1
2025-03-26 19:25:02 - INFO - 刷新token有效期耗时: 0
2025-03-26 19:25:02 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 19:25:02 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 19:25:02 - DEBUG - <==      Total: 1
2025-03-26 19:25:02 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:25:02 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:02 - DEBUG - <==      Total: 1
2025-03-26 19:25:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:02 - INFO - 普通key被查询
2025-03-26 19:25:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 19:25:02 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:25:02 - DEBUG - <==      Total: 1
2025-03-26 19:25:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:02 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:02 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 19:25:02 - DEBUG - ==> Parameters: 1010(Long), 2(Long)
2025-03-26 19:25:02 - DEBUG - <==      Total: 1
2025-03-26 19:25:06 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:25:07 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:07 - INFO - 刷新token有效期耗时: 0
2025-03-26 19:25:07 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 19:25:07 - DEBUG - ==> Parameters: 1(Integer)
2025-03-26 19:25:07 - DEBUG - <==      Total: 1
2025-03-26 19:25:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (type_id = ?) LIMIT ?
2025-03-26 19:25:07 - DEBUG - ==> Parameters: 1(Integer), 5(Long)
2025-03-26 19:25:07 - DEBUG - <==      Total: 5
2025-03-26 19:25:09 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:09 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:25:09 - INFO - 普通key被查询
2025-03-26 19:25:09 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 19:25:09 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:09 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 19:25:09 - DEBUG - <==      Total: 1
2025-03-26 19:25:09 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:25:09 - DEBUG - <==      Total: 1
2025-03-26 19:26:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:43 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:43 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 19:26:43 - DEBUG - ==> Parameters: 10(Integer)
2025-03-26 19:26:43 - DEBUG - <==      Total: 1
2025-03-26 19:26:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:54 - DEBUG - ==>  Preparing: SELECT user_id,city,introduce,fans,followee,gender,birthday,credits,level,create_time,update_time FROM tb_user_info WHERE user_id=?
2025-03-26 19:26:54 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 19:26:54 - DEBUG - <==      Total: 0
2025-03-26 19:26:54 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog WHERE (user_id = ?)
2025-03-26 19:26:54 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 19:26:54 - DEBUG - <==      Total: 1
2025-03-26 19:26:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:59 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog WHERE id=?
2025-03-26 19:26:59 - DEBUG - ==> Parameters: 23(Long)
2025-03-26 19:26:59 - DEBUG - <==      Total: 1
2025-03-26 19:26:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:26:59 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 19:26:59 - DEBUG - <==      Total: 1
2025-03-26 19:26:59 - INFO - 刷新token有效期耗时: 0
2025-03-26 19:26:59 - INFO - 刷新token有效期耗时: 0
2025-03-26 19:26:59 - INFO - 普通key被查询
2025-03-26 19:26:59 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 19:26:59 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:26:59 - DEBUG - <==      Total: 1
2025-03-26 19:26:59 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE (id IN (?)) order by field(id, 1010)
2025-03-26 19:26:59 - DEBUG - ==> Parameters: 1010(Long)
2025-03-26 19:26:59 - DEBUG - <==      Total: 1
2025-03-26 19:26:59 - INFO - 刷新token有效期耗时: 1
2025-03-26 19:26:59 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:26:59 - DEBUG - ==>  Preparing: SELECT id,user_id,follow_user_id,create_time FROM tb_follow WHERE (user_id = ? AND follow_user_id = ?)
2025-03-26 19:26:59 - DEBUG - ==> Parameters: 1010(Long), 1011(Long)
2025-03-26 19:26:59 - DEBUG - <==      Total: 1
2025-03-26 19:28:28 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:29:41 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:31:10 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:32:25 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:33:29 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:34:59 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:36:45 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:38:36 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:40:46 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:43:49 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:45:34 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:46:39 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:48:36 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:51:03 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:53:32 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 19:53:32 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 19:53:32 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 19:53:32 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 19:53:32 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 19:53:32 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 19:53:37 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 32164 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 19:53:37 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 19:53:37 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 19:53:37 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 19:53:37 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 19:53:37 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 19:53:38 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 19:53:38 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 19:53:38 - INFO - Starting service [Tomcat]
2025-03-26 19:53:38 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 19:53:38 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 19:53:38 - INFO - Root WebApplicationContext: initialization completed in 1030 ms
2025-03-26 19:53:38 - INFO - HikariPool-1 - Starting...
2025-03-26 19:53:38 - INFO - HikariPool-1 - Start completed.
2025-03-26 19:53:38 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 19:53:38 - DEBUG - ==> Parameters: 
2025-03-26 19:53:38 - DEBUG - <==      Total: 15
2025-03-26 19:53:39 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 19:53:39 - DEBUG - ==> Parameters: 
2025-03-26 19:53:39 - DEBUG - <==      Total: 14
2025-03-26 19:53:39 - INFO - Redisson 3.13.6
2025-03-26 19:53:39 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 19:53:39 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 19:53:39 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 19:53:39 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 19:53:39 - INFO - Started FoodieOdysseyApplication in 2.902 seconds (JVM running for 3.329)
2025-03-26 19:54:06 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 19:54:06 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 19:54:06 - INFO - Completed initialization in 1 ms
2025-03-26 19:54:06 - INFO - 刷新token有效期耗时: 68
2025-03-26 19:54:06 - INFO - 刷新token有效期耗时: 68
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 10
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:06 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 19:54:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 19:54:06 - DEBUG - <==      Total: 1
2025-03-26 19:54:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:54:08 - INFO - 刷新token有效期耗时: 2
2025-03-26 19:54:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_shop WHERE (type_id = ?)
2025-03-26 19:54:08 - DEBUG - ==> Parameters: 3(Integer)
2025-03-26 19:54:08 - DEBUG - <==      Total: 1
2025-03-26 19:54:42 - ERROR - 订单处理失败
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1084)
	... 19 common frames omitted
2025-03-26 19:56:57 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 19:56:57 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 19:56:57 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 19:56:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 19:56:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is java.lang.IllegalStateException: Pool not open
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:440)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:277)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
2025-03-26 19:56:57 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 19:57:00 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 11672 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 19:57:00 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 19:57:00 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 19:57:00 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 19:57:00 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 19:57:00 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 19:57:01 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 19:57:01 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 19:57:01 - INFO - Starting service [Tomcat]
2025-03-26 19:57:01 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 19:57:01 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 19:57:01 - INFO - Root WebApplicationContext: initialization completed in 961 ms
2025-03-26 19:57:01 - INFO - HikariPool-1 - Starting...
2025-03-26 19:57:02 - INFO - HikariPool-1 - Start completed.
2025-03-26 19:57:02 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 19:57:02 - DEBUG - ==> Parameters: 
2025-03-26 19:57:02 - DEBUG - <==      Total: 15
2025-03-26 19:57:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 19:57:02 - DEBUG - ==> Parameters: 
2025-03-26 19:57:02 - DEBUG - <==      Total: 14
2025-03-26 19:57:02 - INFO - Redisson 3.13.6
2025-03-26 19:57:02 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 19:57:02 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 19:57:02 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 19:57:02 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 19:57:02 - INFO - Started FoodieOdysseyApplication in 2.747 seconds (JVM running for 3.18)
2025-03-26 20:16:52 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 20:16:52 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 20:16:52 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 20:16:52 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:16:52 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:17:01 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 27024 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 20:17:01 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 20:17:01 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 20:17:01 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 20:17:01 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 20:17:02 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 20:17:02 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 20:17:02 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 20:17:02 - INFO - Starting service [Tomcat]
2025-03-26 20:17:02 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 20:17:02 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 20:17:02 - INFO - Root WebApplicationContext: initialization completed in 1014 ms
2025-03-26 20:17:03 - INFO - HikariPool-1 - Starting...
2025-03-26 20:17:03 - INFO - HikariPool-1 - Start completed.
2025-03-26 20:17:03 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 20:17:03 - DEBUG - ==> Parameters: 
2025-03-26 20:17:03 - DEBUG - <==      Total: 15
2025-03-26 20:17:03 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 20:17:03 - DEBUG - ==> Parameters: 
2025-03-26 20:17:03 - DEBUG - <==      Total: 14
2025-03-26 20:17:03 - INFO - Redisson 3.13.6
2025-03-26 20:17:03 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 20:17:03 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 20:17:04 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 20:17:04 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 20:17:04 - INFO - Started FoodieOdysseyApplication in 3.051 seconds (JVM running for 3.475)
2025-03-26 20:17:13 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 20:17:13 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 20:17:13 - INFO - Completed initialization in 2 ms
2025-03-26 20:17:13 - INFO - 刷新token有效期耗时: 70
2025-03-26 20:17:13 - INFO - 刷新token有效期耗时: 70
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:17:13 - DEBUG - <==      Total: 1
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:17:13 - DEBUG - <==      Total: 1
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:17:13 - DEBUG - <==      Total: 1
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:17:13 - DEBUG - <==      Total: 1
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:17:13 - DEBUG - <==      Total: 1
2025-03-26 20:17:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:17:13 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:17:13 - DEBUG - <==      Total: 5
2025-03-26 20:17:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:17:16 - DEBUG - <==      Total: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:17:16 - DEBUG - <==      Total: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:17:16 - DEBUG - <==      Total: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:17:16 - DEBUG - <==      Total: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:17:16 - DEBUG - <==      Total: 1
2025-03-26 20:17:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:17:16 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:17:16 - DEBUG - <==      Total: 5
2025-03-26 20:17:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:17:18 - DEBUG - <==      Total: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:17:18 - DEBUG - <==      Total: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:17:18 - DEBUG - <==      Total: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:17:18 - DEBUG - <==      Total: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:17:18 - DEBUG - <==      Total: 1
2025-03-26 20:17:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:17:18 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:17:18 - DEBUG - <==      Total: 5
2025-03-26 20:17:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:17:25 - DEBUG - <==      Total: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:17:25 - DEBUG - <==      Total: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:17:25 - DEBUG - <==      Total: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:17:25 - DEBUG - <==      Total: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:17:25 - DEBUG - <==      Total: 1
2025-03-26 20:17:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:17:25 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:17:25 - DEBUG - <==      Total: 5
2025-03-26 20:17:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:17:27 - DEBUG - <==      Total: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:17:27 - DEBUG - <==      Total: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:17:27 - DEBUG - <==      Total: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:17:27 - DEBUG - <==      Total: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:17:27 - DEBUG - <==      Total: 1
2025-03-26 20:17:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:17:27 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:17:27 - DEBUG - <==      Total: 5
2025-03-26 20:18:24 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 20:18:24 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 20:18:24 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 20:18:24 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:18:24 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:18:29 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 30212 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 20:18:29 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 20:18:29 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 20:18:29 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 20:18:29 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 20:18:29 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 20:18:30 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 20:18:30 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 20:18:30 - INFO - Starting service [Tomcat]
2025-03-26 20:18:30 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 20:18:30 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 20:18:30 - INFO - Root WebApplicationContext: initialization completed in 965 ms
2025-03-26 20:18:30 - INFO - HikariPool-1 - Starting...
2025-03-26 20:18:31 - INFO - HikariPool-1 - Start completed.
2025-03-26 20:18:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 20:18:31 - DEBUG - ==> Parameters: 
2025-03-26 20:18:31 - DEBUG - <==      Total: 14
2025-03-26 20:18:31 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 20:18:31 - DEBUG - ==> Parameters: 
2025-03-26 20:18:31 - DEBUG - <==      Total: 15
2025-03-26 20:18:31 - INFO - Redisson 3.13.6
2025-03-26 20:18:31 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 20:18:31 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 20:18:31 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 20:18:31 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 20:18:31 - INFO - Started FoodieOdysseyApplication in 2.788 seconds (JVM running for 3.204)
2025-03-26 20:18:36 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 20:18:36 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 20:18:36 - INFO - Completed initialization in 1 ms
2025-03-26 20:18:36 - INFO - 刷新token有效期耗时: 46
2025-03-26 20:18:36 - INFO - 刷新token有效期耗时: 46
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:18:36 - DEBUG - <==      Total: 1
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:18:36 - DEBUG - <==      Total: 1
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:18:36 - DEBUG - <==      Total: 1
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:18:36 - DEBUG - <==      Total: 1
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:18:36 - DEBUG - <==      Total: 1
2025-03-26 20:18:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:18:36 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:18:36 - DEBUG - <==      Total: 5
2025-03-26 20:18:38 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:18:38 - DEBUG - <==      Total: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:18:38 - DEBUG - <==      Total: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:18:38 - DEBUG - <==      Total: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:18:38 - DEBUG - <==      Total: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:18:38 - DEBUG - <==      Total: 1
2025-03-26 20:18:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:18:38 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:18:38 - DEBUG - <==      Total: 5
2025-03-26 20:18:39 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:18:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:40 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:18:40 - DEBUG - <==      Total: 1
2025-03-26 20:18:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:40 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:18:40 - DEBUG - <==      Total: 1
2025-03-26 20:18:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:40 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:18:40 - DEBUG - <==      Total: 1
2025-03-26 20:18:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:40 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:18:40 - DEBUG - <==      Total: 1
2025-03-26 20:18:40 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:18:40 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:18:40 - DEBUG - <==      Total: 4
2025-03-26 20:18:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:18:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:18:42 - DEBUG - <==      Total: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:18:42 - DEBUG - <==      Total: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:18:42 - DEBUG - <==      Total: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:18:42 - DEBUG - <==      Total: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:18:42 - DEBUG - <==      Total: 1
2025-03-26 20:18:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:18:42 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:18:42 - DEBUG - <==      Total: 5
2025-03-26 20:18:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:18:53 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN ()) order by field(id, )
2025-03-26 20:18:53 - DEBUG - ==> Parameters: 
2025-03-26 20:18:53 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:18:53 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy74.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.ShopServiceImpl.queryShopByType(ShopServiceImpl.java:176)
	at org.jwj.fo.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$9968c714.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$94d9a769.queryShopByType(<generated>)
	at org.jwj.fo.controller.ShopController.queryShopByType(ShopController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 20:19:11 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:11 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:11 - DEBUG - <==      Total: 1
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:11 - DEBUG - <==      Total: 1
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:11 - DEBUG - <==      Total: 1
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:11 - DEBUG - <==      Total: 1
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:11 - DEBUG - <==      Total: 1
2025-03-26 20:19:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:11 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:11 - DEBUG - <==      Total: 5
2025-03-26 20:19:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:12 - DEBUG - <==      Total: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:12 - DEBUG - <==      Total: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:12 - DEBUG - <==      Total: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:12 - DEBUG - <==      Total: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:12 - DEBUG - <==      Total: 1
2025-03-26 20:19:12 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:12 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:12 - DEBUG - <==      Total: 5
2025-03-26 20:19:13 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:13 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN ()) order by field(id, )
2025-03-26 20:19:13 - DEBUG - ==> Parameters: 
2025-03-26 20:19:13 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy74.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.ShopServiceImpl.queryShopByType(ShopServiceImpl.java:176)
	at org.jwj.fo.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$9968c714.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$94d9a769.queryShopByType(<generated>)
	at org.jwj.fo.controller.ShopController.queryShopByType(ShopController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 20:19:14 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:19:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN ()) order by field(id, )
2025-03-26 20:19:14 - DEBUG - ==> Parameters: 
2025-03-26 20:19:14 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy74.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.ShopServiceImpl.queryShopByType(ShopServiceImpl.java:176)
	at org.jwj.fo.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$9968c714.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$94d9a769.queryShopByType(<generated>)
	at org.jwj.fo.controller.ShopController.queryShopByType(ShopController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 20:19:17 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:19:17 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:17 - DEBUG - <==      Total: 1
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:17 - DEBUG - <==      Total: 1
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:17 - DEBUG - <==      Total: 1
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:17 - DEBUG - <==      Total: 1
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:17 - DEBUG - <==      Total: 1
2025-03-26 20:19:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:17 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:17 - DEBUG - <==      Total: 5
2025-03-26 20:19:23 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:23 - DEBUG - <==      Total: 1
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:23 - DEBUG - <==      Total: 1
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:23 - DEBUG - <==      Total: 1
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:23 - DEBUG - <==      Total: 1
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:23 - DEBUG - <==      Total: 1
2025-03-26 20:19:23 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:23 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:23 - DEBUG - <==      Total: 5
2025-03-26 20:19:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:24 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN ()) order by field(id, )
2025-03-26 20:19:24 - DEBUG - ==> Parameters: 
2025-03-26 20:19:24 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy74.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.ShopServiceImpl.queryShopByType(ShopServiceImpl.java:176)
	at org.jwj.fo.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$9968c714.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$94d9a769.queryShopByType(<generated>)
	at org.jwj.fo.controller.ShopController.queryShopByType(ShopController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 20:19:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:24 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN ()) order by field(id, )
2025-03-26 20:19:24 - DEBUG - ==> Parameters: 
2025-03-26 20:19:24 - ERROR - org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
### The error may exist in org/jwj/fo/mapper/ShopMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time  FROM tb_shop     WHERE (id IN ()) order by field(id, )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy72.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy74.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.conditions.query.ChainQuery.list(ChainQuery.java:39)
	at org.jwj.fo.service.impl.ShopServiceImpl.queryShopByType(ShopServiceImpl.java:176)
	at org.jwj.fo.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$9968c714.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at org.jwj.fo.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$94d9a769.queryShopByType(<generated>)
	at org.jwj.fo.controller.ShopController.queryShopByType(ShopController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')) order by field(id, )' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at jdk.proxy2/jdk.proxy2.$Proxy76.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 66 common frames omitted
2025-03-26 20:19:26 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:19:26 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:26 - DEBUG - <==      Total: 1
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:26 - DEBUG - <==      Total: 1
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:26 - DEBUG - <==      Total: 1
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:26 - DEBUG - <==      Total: 1
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:26 - DEBUG - <==      Total: 1
2025-03-26 20:19:26 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:26 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:26 - DEBUG - <==      Total: 5
2025-03-26 20:19:36 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:19:36 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:19:36 - DEBUG - <==      Total: 1
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:19:36 - DEBUG - <==      Total: 1
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:19:36 - DEBUG - <==      Total: 1
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:19:36 - DEBUG - <==      Total: 1
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:19:36 - DEBUG - <==      Total: 1
2025-03-26 20:19:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:19:36 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:19:36 - DEBUG - <==      Total: 5
2025-03-26 20:19:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:42 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:42 - DEBUG - <==      Total: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:42 - DEBUG - <==      Total: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:42 - DEBUG - <==      Total: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:42 - DEBUG - <==      Total: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:42 - DEBUG - <==      Total: 1
2025-03-26 20:19:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:42 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:42 - DEBUG - <==      Total: 5
2025-03-26 20:19:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:19:47 - DEBUG - <==      Total: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:19:47 - DEBUG - <==      Total: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:19:47 - DEBUG - <==      Total: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:19:47 - DEBUG - <==      Total: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:19:47 - DEBUG - <==      Total: 1
2025-03-26 20:19:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:19:47 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:19:47 - DEBUG - <==      Total: 5
2025-03-26 20:19:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:54 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:19:54 - DEBUG - <==      Total: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:19:54 - DEBUG - <==      Total: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:19:54 - DEBUG - <==      Total: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:19:54 - DEBUG - <==      Total: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:19:54 - DEBUG - <==      Total: 1
2025-03-26 20:19:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:19:54 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:19:54 - DEBUG - <==      Total: 5
2025-03-26 20:21:26 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 20:21:26 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 20:21:26 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 20:21:26 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:21:26 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:21:33 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 16580 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 20:21:33 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 20:21:33 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 20:21:34 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 20:21:34 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 20:21:34 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 20:21:34 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 20:21:34 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 20:21:34 - INFO - Starting service [Tomcat]
2025-03-26 20:21:34 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 20:21:34 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 20:21:34 - INFO - Root WebApplicationContext: initialization completed in 977 ms
2025-03-26 20:21:35 - INFO - HikariPool-1 - Starting...
2025-03-26 20:21:35 - INFO - HikariPool-1 - Start completed.
2025-03-26 20:21:35 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 20:21:35 - DEBUG - ==> Parameters: 
2025-03-26 20:21:35 - DEBUG - <==      Total: 15
2025-03-26 20:21:36 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 20:21:36 - DEBUG - ==> Parameters: 
2025-03-26 20:21:36 - DEBUG - <==      Total: 14
2025-03-26 20:21:36 - INFO - Redisson 3.13.6
2025-03-26 20:21:36 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 20:21:36 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 20:21:36 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 20:21:36 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 20:21:36 - INFO - Started FoodieOdysseyApplication in 3.075 seconds (JVM running for 3.57)
2025-03-26 20:21:54 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 20:21:54 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 20:21:54 - INFO - Completed initialization in 1 ms
2025-03-26 20:21:54 - INFO - 刷新token有效期耗时: 79
2025-03-26 20:21:54 - INFO - 刷新token有效期耗时: 79
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:21:54 - DEBUG - <==      Total: 1
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:21:54 - DEBUG - <==      Total: 1
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:21:54 - DEBUG - <==      Total: 1
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:21:54 - DEBUG - <==      Total: 1
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:21:54 - DEBUG - <==      Total: 1
2025-03-26 20:21:54 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:21:54 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:21:54 - DEBUG - <==      Total: 5
2025-03-26 20:21:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:21:56 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:02 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:02 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:22:02 - DEBUG - <==      Total: 1
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:22:02 - DEBUG - <==      Total: 1
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:22:02 - DEBUG - <==      Total: 1
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:22:02 - DEBUG - <==      Total: 1
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:22:02 - DEBUG - <==      Total: 1
2025-03-26 20:22:02 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:22:02 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:22:02 - DEBUG - <==      Total: 5
2025-03-26 20:22:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:22:06 - DEBUG - <==      Total: 1
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:22:06 - DEBUG - <==      Total: 1
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:22:06 - DEBUG - <==      Total: 1
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:22:06 - DEBUG - <==      Total: 1
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:22:06 - DEBUG - <==      Total: 1
2025-03-26 20:22:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:22:06 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:22:06 - DEBUG - <==      Total: 5
2025-03-26 20:22:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:14 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:14 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:22:14 - DEBUG - <==      Total: 1
2025-03-26 20:22:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:14 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:22:14 - DEBUG - <==      Total: 1
2025-03-26 20:22:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:14 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:22:14 - DEBUG - <==      Total: 1
2025-03-26 20:22:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:14 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:22:14 - DEBUG - <==      Total: 1
2025-03-26 20:22:14 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:22:14 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:22:14 - DEBUG - <==      Total: 4
2025-03-26 20:22:14 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:22:16 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:17 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:21 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:22 - INFO - 刷新token有效期耗时: 3
2025-03-26 20:22:22 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:24 - INFO - 刷新token有效期耗时: 4
2025-03-26 20:22:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:24 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:25 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:25 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:25 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:26 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:26 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:27 - INFO - 刷新token有效期耗时: 3
2025-03-26 20:22:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:27 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:28 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:28 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:29 - INFO - 刷新token有效期耗时: 3
2025-03-26 20:22:29 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:30 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:35 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:35 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:22:35 - DEBUG - <==      Total: 1
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:22:35 - DEBUG - <==      Total: 1
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:22:35 - DEBUG - <==      Total: 1
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:22:35 - DEBUG - <==      Total: 1
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:22:35 - DEBUG - <==      Total: 1
2025-03-26 20:22:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:22:35 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:22:35 - DEBUG - <==      Total: 5
2025-03-26 20:22:38 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:22:38 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:38 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:22:38 - DEBUG - <==      Total: 1
2025-03-26 20:22:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:38 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:22:38 - DEBUG - <==      Total: 1
2025-03-26 20:22:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:38 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:22:38 - DEBUG - <==      Total: 1
2025-03-26 20:22:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:38 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:22:38 - DEBUG - <==      Total: 1
2025-03-26 20:22:38 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:22:38 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:22:38 - DEBUG - <==      Total: 4
2025-03-26 20:22:39 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:22:42 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:22:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:22:47 - DEBUG - <==      Total: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 13(Long)
2025-03-26 20:22:47 - DEBUG - <==      Total: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 14(Long)
2025-03-26 20:22:47 - DEBUG - <==      Total: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 12(Long)
2025-03-26 20:22:47 - DEBUG - <==      Total: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 11(Long)
2025-03-26 20:22:47 - DEBUG - <==      Total: 1
2025-03-26 20:22:47 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 10,13,14,12,11)
2025-03-26 20:22:47 - DEBUG - ==> Parameters: 10(String), 13(String), 14(String), 12(String), 11(String)
2025-03-26 20:22:47 - DEBUG - <==      Total: 5
2025-03-26 20:22:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:22:49 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:12 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:15 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:15 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:15 - DEBUG - <==      Total: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:15 - DEBUG - <==      Total: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:15 - DEBUG - <==      Total: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:15 - DEBUG - <==      Total: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:15 - DEBUG - <==      Total: 1
2025-03-26 20:23:15 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:15 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:15 - DEBUG - <==      Total: 5
2025-03-26 20:23:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:17 - DEBUG - <==      Total: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:17 - DEBUG - <==      Total: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:17 - DEBUG - <==      Total: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:17 - DEBUG - <==      Total: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:17 - DEBUG - <==      Total: 1
2025-03-26 20:23:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:17 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:17 - DEBUG - <==      Total: 5
2025-03-26 20:23:18 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:18 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:23:18 - DEBUG - <==      Total: 1
2025-03-26 20:23:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:18 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:23:18 - DEBUG - <==      Total: 1
2025-03-26 20:23:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:18 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:23:18 - DEBUG - <==      Total: 1
2025-03-26 20:23:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:18 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:23:18 - DEBUG - <==      Total: 1
2025-03-26 20:23:18 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:23:18 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:23:18 - DEBUG - <==      Total: 4
2025-03-26 20:23:18 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:19 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:22 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:25 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:23:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:27 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:27 - INFO - 普通key被查询
2025-03-26 20:23:27 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:27 - DEBUG - <==      Total: 1
2025-03-26 20:23:27 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:23:27 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:27 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:29 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:29 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:29 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:29 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:29 - DEBUG - <==      Total: 1
2025-03-26 20:23:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:29 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:29 - DEBUG - <==      Total: 5
2025-03-26 20:23:30 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:30 - DEBUG - <==      Total: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:30 - DEBUG - <==      Total: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:30 - DEBUG - <==      Total: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:30 - DEBUG - <==      Total: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:30 - DEBUG - <==      Total: 1
2025-03-26 20:23:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:30 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:30 - DEBUG - <==      Total: 5
2025-03-26 20:23:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:31 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:23:31 - DEBUG - <==      Total: 1
2025-03-26 20:23:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:31 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:23:31 - DEBUG - <==      Total: 1
2025-03-26 20:23:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:31 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:23:31 - DEBUG - <==      Total: 1
2025-03-26 20:23:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:31 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:23:31 - DEBUG - <==      Total: 1
2025-03-26 20:23:31 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:23:31 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:23:31 - DEBUG - <==      Total: 4
2025-03-26 20:23:31 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:34 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:34 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:34 - DEBUG - <==      Total: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:34 - DEBUG - <==      Total: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:34 - DEBUG - <==      Total: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:34 - DEBUG - <==      Total: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:34 - DEBUG - <==      Total: 1
2025-03-26 20:23:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:34 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:34 - DEBUG - <==      Total: 5
2025-03-26 20:23:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:37 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:37 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:23:37 - DEBUG - <==      Total: 1
2025-03-26 20:23:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:37 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:23:37 - DEBUG - <==      Total: 1
2025-03-26 20:23:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:37 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:23:37 - DEBUG - <==      Total: 1
2025-03-26 20:23:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:37 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:23:37 - DEBUG - <==      Total: 1
2025-03-26 20:23:37 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:23:37 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:23:37 - DEBUG - <==      Total: 4
2025-03-26 20:23:38 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:39 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:41 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:46 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:48 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:48 - DEBUG - <==      Total: 1
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:48 - DEBUG - <==      Total: 1
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:48 - DEBUG - <==      Total: 1
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:48 - DEBUG - <==      Total: 1
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:48 - DEBUG - <==      Total: 1
2025-03-26 20:23:48 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:48 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:48 - DEBUG - <==      Total: 5
2025-03-26 20:23:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:23:50 - DEBUG - <==      Total: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:23:50 - DEBUG - <==      Total: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:23:50 - DEBUG - <==      Total: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:23:50 - DEBUG - <==      Total: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:23:50 - DEBUG - <==      Total: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:23:50 - DEBUG - <==      Total: 5
2025-03-26 20:23:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:23:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:50 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:23:51 - DEBUG - <==      Total: 1
2025-03-26 20:23:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:51 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:23:51 - DEBUG - <==      Total: 1
2025-03-26 20:23:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:51 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:23:51 - DEBUG - <==      Total: 1
2025-03-26 20:23:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:23:51 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:23:51 - DEBUG - <==      Total: 1
2025-03-26 20:23:51 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:23:51 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:23:51 - DEBUG - <==      Total: 4
2025-03-26 20:23:52 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:24:06 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:24:06 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:24:06 - DEBUG - <==      Total: 1
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:24:06 - DEBUG - <==      Total: 1
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:24:06 - DEBUG - <==      Total: 1
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:24:06 - DEBUG - <==      Total: 1
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:24:06 - DEBUG - <==      Total: 1
2025-03-26 20:24:06 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:24:06 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:24:06 - DEBUG - <==      Total: 5
2025-03-26 20:24:07 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:24:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:07 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:24:07 - DEBUG - <==      Total: 1
2025-03-26 20:24:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:07 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:24:07 - DEBUG - <==      Total: 1
2025-03-26 20:24:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:07 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:24:07 - DEBUG - <==      Total: 1
2025-03-26 20:24:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:24:07 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:24:07 - DEBUG - <==      Total: 1
2025-03-26 20:24:07 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:24:07 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:24:07 - DEBUG - <==      Total: 4
2025-03-26 20:24:07 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:24:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:34:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:34:29 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:34:29 - INFO - 普通key被查询
2025-03-26 20:34:29 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:34:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:34:29 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:34:29 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:34:29 - DEBUG - <==      Total: 7
2025-03-26 20:34:29 - DEBUG - <==      Total: 1
2025-03-26 20:34:31 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:34:34 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:34:34 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:34:34 - INFO - 普通key被查询
2025-03-26 20:34:34 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:34:34 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:34:34 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:34:34 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:34:34 - DEBUG - <==      Total: 2
2025-03-26 20:34:34 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:35:08 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 10
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:35:08 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:35:08 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:35:08 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - INFO - 刷新token有效期耗时: 7
2025-03-26 20:40:04 - INFO - 刷新token有效期耗时: 7
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:04 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:40:04 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:40:04 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:40:04 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:40:04 - DEBUG - <==      Total: 1
2025-03-26 20:40:04 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:40:04 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:40:04 - DEBUG - <==      Total: 5
2025-03-26 20:40:11 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:40:11 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:40:11 - INFO - 普通key被查询
2025-03-26 20:40:11 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:40:11 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:11 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:11 - DEBUG - <==      Total: 1
2025-03-26 20:40:11 - DEBUG - <==      Total: 1
2025-03-26 20:40:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:16 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:40:16 - DEBUG - <==      Total: 1
2025-03-26 20:40:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:16 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:40:16 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:16 - DEBUG - <==      Total: 1
2025-03-26 20:40:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:16 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:40:16 - DEBUG - <==      Total: 1
2025-03-26 20:40:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:16 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:40:16 - DEBUG - <==      Total: 1
2025-03-26 20:40:16 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:40:16 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:40:16 - DEBUG - <==      Total: 4
2025-03-26 20:40:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:17 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:17 - INFO - 普通key被查询
2025-03-26 20:40:17 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:40:17 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:40:17 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:40:17 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:40:17 - DEBUG - <==      Total: 1
2025-03-26 20:40:17 - DEBUG - <==      Total: 2
2025-03-26 20:40:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:23 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT COUNT(*) AS total FROM tb_blog
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,shop_id,user_id,title,images,content,liked,comments,create_time,update_time FROM tb_blog ORDER BY liked DESC LIMIT ?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 10(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 10
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1011(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1474(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 1494(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:40:23 - DEBUG - ==>  Preparing: SELECT id,phone,password,nick_name,icon,create_time,update_time FROM tb_user WHERE id=?
2025-03-26 20:40:23 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:40:23 - DEBUG - <==      Total: 1
2025-03-26 20:47:23 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 20:47:23 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 20:47:23 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 20:47:23 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:47:23 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 20:47:32 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 24596 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 20:47:32 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 20:47:32 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 20:47:33 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 20:47:33 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 20:47:33 - INFO - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-03-26 20:47:34 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 20:47:34 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 20:47:34 - INFO - Starting service [Tomcat]
2025-03-26 20:47:34 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 20:47:34 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 20:47:34 - INFO - Root WebApplicationContext: initialization completed in 1428 ms
2025-03-26 20:47:35 - INFO - HikariPool-1 - Starting...
2025-03-26 20:47:35 - INFO - HikariPool-1 - Start completed.
2025-03-26 20:47:35 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 20:47:35 - DEBUG - ==> Parameters: 
2025-03-26 20:47:35 - DEBUG - <==      Total: 15
2025-03-26 20:47:35 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 20:47:35 - DEBUG - ==> Parameters: 
2025-03-26 20:47:35 - DEBUG - <==      Total: 14
2025-03-26 20:47:35 - INFO - Redisson 3.13.6
2025-03-26 20:47:35 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 20:47:35 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 20:47:36 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 20:47:36 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 20:47:36 - INFO - Started FoodieOdysseyApplication in 3.748 seconds (JVM running for 4.38)
2025-03-26 20:49:07 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 20:49:07 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 20:49:07 - INFO - Completed initialization in 1 ms
2025-03-26 20:49:07 - INFO - 刷新token有效期耗时: 87
2025-03-26 20:53:42 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:42 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:53:42 - DEBUG - <==      Total: 1
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 9(Long)
2025-03-26 20:53:42 - DEBUG - <==      Total: 1
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 8(Long)
2025-03-26 20:53:42 - DEBUG - <==      Total: 1
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 3(Long)
2025-03-26 20:53:42 - DEBUG - <==      Total: 1
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 6(Long)
2025-03-26 20:53:42 - DEBUG - <==      Total: 1
2025-03-26 20:53:42 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?,?)) order by field(id, 2,9,8,3,6)
2025-03-26 20:53:42 - DEBUG - ==> Parameters: 2(String), 9(String), 8(String), 3(String), 6(String)
2025-03-26 20:53:42 - DEBUG - <==      Total: 5
2025-03-26 20:53:45 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:45 - DEBUG - ==> Parameters: 1(Long)
2025-03-26 20:53:45 - DEBUG - <==      Total: 1
2025-03-26 20:53:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:45 - DEBUG - ==> Parameters: 4(Long)
2025-03-26 20:53:45 - DEBUG - <==      Total: 1
2025-03-26 20:53:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:45 - DEBUG - ==> Parameters: 7(Long)
2025-03-26 20:53:45 - DEBUG - <==      Total: 1
2025-03-26 20:53:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:45 - DEBUG - ==> Parameters: 5(Long)
2025-03-26 20:53:45 - DEBUG - <==      Total: 1
2025-03-26 20:53:45 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE (id IN (?,?,?,?)) order by field(id, 1,4,7,5)
2025-03-26 20:53:45 - DEBUG - ==> Parameters: 1(String), 4(String), 7(String), 5(String)
2025-03-26 20:53:45 - DEBUG - <==      Total: 4
2025-03-26 20:53:45 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:45 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:46 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:47 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:47 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:48 - INFO - 刷新token有效期耗时: 5
2025-03-26 20:53:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:48 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:49 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:50 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:51 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:51 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:52 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:52 - INFO - 刷新token有效期耗时: 0
2025-03-26 20:53:52 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:53 - INFO - 刷新token有效期耗时: 2
2025-03-26 20:53:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:55 - INFO - 刷新token有效期耗时: 1
2025-03-26 20:53:55 - INFO - 普通key被查询
2025-03-26 20:53:55 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 20:53:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:53:55 - DEBUG - <==      Total: 1
2025-03-26 20:53:55 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 20:53:55 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 20:53:55 - DEBUG - <==      Total: 1
2025-03-26 21:04:40 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 21:04:40 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 21:04:40 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 21:04:40 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 21:04:40 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 21:04:48 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 21280 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 21:04:48 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 21:04:48 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 21:04:48 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 21:04:48 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 21:04:48 - INFO - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-03-26 21:04:49 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 21:04:49 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 21:04:49 - INFO - Starting service [Tomcat]
2025-03-26 21:04:49 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 21:04:49 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 21:04:49 - INFO - Root WebApplicationContext: initialization completed in 1073 ms
2025-03-26 21:04:49 - INFO - HikariPool-1 - Starting...
2025-03-26 21:04:50 - INFO - HikariPool-1 - Start completed.
2025-03-26 21:04:50 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 21:04:50 - DEBUG - ==> Parameters: 
2025-03-26 21:04:50 - DEBUG - <==      Total: 15
2025-03-26 21:04:50 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 21:04:50 - DEBUG - ==> Parameters: 
2025-03-26 21:04:50 - DEBUG - <==      Total: 14
2025-03-26 21:04:50 - INFO - Redisson 3.13.6
2025-03-26 21:04:50 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 21:04:50 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 21:04:51 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 21:04:51 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 21:04:51 - INFO - Started FoodieOdysseyApplication in 3.112 seconds (JVM running for 3.615)
2025-03-26 21:05:17 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 21:05:17 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 21:05:17 - INFO - Completed initialization in 1 ms
2025-03-26 21:05:17 - INFO - 刷新token有效期耗时: 66
2025-03-26 21:05:17 - INFO - 刷新token有效期耗时: 2
2025-03-26 21:05:23 - WARN - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2025-03-26 21:05:23 - INFO - 刷新token有效期耗时: 2
2025-03-26 21:05:26 - INFO - 刷新token有效期耗时: 1
2025-03-26 21:05:50 - INFO - 刷新token有效期耗时: 1
2025-03-26 21:18:18 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 21:18:18 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 21:18:18 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 21:18:18 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 21:18:18 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 21:18:23 - INFO - Starting FoodieOdysseyApplication using Java 17.0.12 on jwj with PID 3160 (D:\Code\Java\Projects\Foodie-Odyssey\target\classes started by jwj44 in D:\Code\Java\Projects\Foodie-Odyssey)
2025-03-26 21:18:23 - DEBUG - Running with Spring Boot v2.7.4, Spring v5.3.23
2025-03-26 21:18:23 - INFO - No active profile set, falling back to 1 default profile: "default"
2025-03-26 21:18:23 - INFO - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-26 21:18:23 - INFO - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-26 21:18:23 - INFO - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-03-26 21:18:24 - INFO - Tomcat initialized with port(s): 8081 (http)
2025-03-26 21:18:24 - INFO - Initializing ProtocolHandler ["http-nio-8081"]
2025-03-26 21:18:24 - INFO - Starting service [Tomcat]
2025-03-26 21:18:24 - INFO - Starting Servlet engine: [Apache Tomcat/9.0.65]
2025-03-26 21:18:24 - INFO - Initializing Spring embedded WebApplicationContext
2025-03-26 21:18:24 - INFO - Root WebApplicationContext: initialization completed in 1034 ms
2025-03-26 21:18:24 - INFO - HikariPool-1 - Starting...
2025-03-26 21:18:25 - INFO - HikariPool-1 - Start completed.
2025-03-26 21:18:25 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop
2025-03-26 21:18:25 - DEBUG - ==> Parameters: 
2025-03-26 21:18:25 - DEBUG - <==      Total: 14
2025-03-26 21:18:25 - DEBUG - ==>  Preparing: SELECT voucher_id,stock,create_time,begin_time,end_time,update_time FROM tb_seckill_voucher
2025-03-26 21:18:25 - DEBUG - ==> Parameters: 
2025-03-26 21:18:25 - DEBUG - <==      Total: 15
2025-03-26 21:18:25 - INFO - Redisson 3.13.6
2025-03-26 21:18:25 - INFO - 1 connections initialized for /172.20.249.104:6379
2025-03-26 21:18:25 - INFO - 24 connections initialized for /172.20.249.104:6379
2025-03-26 21:18:26 - INFO - Starting ProtocolHandler ["http-nio-8081"]
2025-03-26 21:18:26 - INFO - Tomcat started on port(s): 8081 (http) with context path ''
2025-03-26 21:18:26 - INFO - Started FoodieOdysseyApplication in 2.877 seconds (JVM running for 3.294)
2025-03-26 21:18:30 - INFO - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-26 21:18:30 - INFO - Initializing Servlet 'dispatcherServlet'
2025-03-26 21:18:30 - INFO - Completed initialization in 1 ms
2025-03-26 21:18:30 - INFO - 刷新token有效期耗时: 44
2025-03-26 21:18:30 - INFO - 刷新token有效期耗时: 44
2025-03-26 21:18:30 - INFO - 普通key被查询
2025-03-26 21:18:30 - DEBUG - ==>  Preparing: SELECT v.`id`, v.`shop_id`, v.`title`, v.`sub_title`, v.`rules`, v.`pay_value`, v.`actual_value`, v.`type`, sv.`stock` , sv.begin_time , sv.end_time FROM tb_voucher v LEFT JOIN tb_seckill_voucher sv ON v.id = sv.voucher_id WHERE v.shop_id = ? AND v.status = 1
2025-03-26 21:18:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 21:18:30 - DEBUG - ==>  Preparing: SELECT id,name,type_id,images,area,address,x,y,avg_price,sold,comments,score,open_hours,create_time,update_time FROM tb_shop WHERE id=?
2025-03-26 21:18:30 - DEBUG - ==> Parameters: 2(Long)
2025-03-26 21:18:30 - DEBUG - <==      Total: 1
2025-03-26 21:18:30 - DEBUG - <==      Total: 1
2025-03-26 21:22:09 - INFO - HikariPool-1 - Shutdown initiated...
2025-03-26 21:22:09 - INFO - HikariPool-1 - Shutdown completed.
2025-03-26 21:22:09 - WARN - LettucePoolingConnectionProvider contains unreleased connections
2025-03-26 21:22:09 - ERROR - 订单处理失败
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: Connection closed
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:278)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1086)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:939)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:354)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.xReadGroup(DefaultedRedisConnection.java:618)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.xReadGroup(DefaultStringRedisConnection.java:4814)
	at org.springframework.data.redis.core.DefaultStreamOperations$4.inRedis(DefaultStreamOperations.java:310)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:387)
	at org.springframework.data.redis.core.DefaultStreamOperations$RecordDeserializingRedisCallback.doInRedis(DefaultStreamOperations.java:382)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:78)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:679)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:89)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2025-03-26 21:22:09 - ERROR - 订单处理失败
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:211)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultStreamOperations.read(DefaultStreamOperations.java:305)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.handlePendingList(VoucherOrderServiceImpl.java:100)
	at org.jwj.fo.service.impl.VoucherOrderServiceImpl$VoucherOrderHandler.run(VoucherOrderServiceImpl.java:91)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 18 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 172.20.249.104/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: executor not accepting a task
	at io.netty.resolver.AddressResolverGroup.getResolver(AddressResolverGroup.java:61)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:194)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:990)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
